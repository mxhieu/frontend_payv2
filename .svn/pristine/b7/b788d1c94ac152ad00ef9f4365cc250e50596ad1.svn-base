{"ast":null,"code":"import React, { useEffect } from 'react';\n\nvar generateQueryString = function (q) {\n  var queryString = '';\n\n  if (q) {\n    var queryKeys = Object.keys(q);\n    queryKeys.forEach(function (key) {\n      if (q[key]) {\n        if (q[key].toString().length) {\n          queryString += key + \"=\" + q[key] + \"&\";\n        }\n      }\n    });\n\n    if (queryKeys.length > 0 && queryString[queryString.length - 1] === '&') {\n      queryString = queryString.slice(0, -1);\n    }\n  }\n\n  return queryString;\n};\n\nvar AppleLogin = function (props) {\n  var clientId = props.clientId,\n      redirectURI = props.redirectURI,\n      _a = props.state,\n      state = _a === void 0 ? '' : _a,\n      render = props.render,\n      _b = props.designProp,\n      designProp = _b === void 0 ? {} : _b,\n      _c = props.responseMode,\n      responseMode = _c === void 0 ? 'query' : _c,\n      _d = props.responseType,\n      responseType = _d === void 0 ? 'code' : _d,\n      nonce = props.nonce,\n      callback = props.callback,\n      scope = props.scope;\n  useEffect(function () {\n    if (typeof callback === 'function' && responseMode === 'query' && responseType === 'code' && window && window.location) {\n      var match = void 0;\n\n      var pl_1 = /\\+/g,\n          // Regex for replacing addition symbol with a space\n      search = /([^&=]+)=?([^&]*)/g,\n          decode = function (s) {\n        return decodeURIComponent(s.replace(pl_1, \" \"));\n      },\n          query = window.location.search.substring(1);\n\n      var urlParams = {};\n\n      while (match = search.exec(query)) {\n        urlParams[decode(match[1])] = decode(match[2]);\n      }\n\n      if (urlParams['code']) {\n        callback({\n          code: urlParams['code']\n        });\n      }\n    }\n\n    return function () {};\n  }, []);\n\n  var onClick = function (e) {\n    if (e) {\n      e.preventDefault();\n    }\n\n    window.location.href = \"https://appleid.apple.com/auth/authorize?\" + generateQueryString({\n      response_type: responseType,\n      response_mode: responseMode,\n      client_id: clientId,\n      redirect_uri: encodeURIComponent(redirectURI),\n      state: state,\n      nonce: nonce,\n      scope: responseMode === 'query' ? '' : scope\n    });\n  };\n\n  if (typeof render === 'function') {\n    return render({\n      onClick: onClick\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    id: \"appleid-signin\",\n    onClick: onClick\n  }, React.createElement(\"img\", {\n    src: \"https://appleid.cdn-apple.com/appleid/button?\" + generateQueryString(designProp)\n  })));\n};\n\nexport default AppleLogin;","map":{"version":3,"sources":["../src/helper.tsx","../src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["\nconst generateQueryString = (q: any) => {\n  let queryString = '';\n  if (q) {\n    const queryKeys = Object.keys(q);\n    queryKeys.forEach(key => {\n      if (q[key]) {\n        if (q[key].toString().length) {\n          queryString += `${key}=${q[key]}&`;\n        }\n      }\n    });\n    if (queryKeys.length > 0 && queryString[queryString.length - 1] === '&') {\n      queryString = queryString.slice(0, -1);\n    }\n  }\n  return queryString;\n};\n\nexport { generateQueryString };\n","import React, { useEffect } from 'react';\n\nimport { generateQueryString } from './helper';\n\nexport interface AppleLoginProps {\n  clientId: string;\n  redirectURI: string;\n  scope?: string;\n  state?: string;\n  responseType?: string | 'code' | 'id_token';\n  responseMode?: string | 'query' | 'fragment' | 'form_post';\n  nonce?: string;\n  designProp?: {\n    // REF: https://developer.apple.com/documentation/signinwithapplejs/incorporating_sign_in_with_apple_into_other_platforms\n    height?: number;\n    width?: number;\n    color?: string | 'white' | 'black';\n    border?: boolean;\n    type?: string | 'sign-in' | 'continue';\n    border_radius?: number;\n    scale?: number;\n    locale?: string;\n  }\n  callback?: (d: any) => void;\n  render?: (props: { onClick: (e?: any) => void, disabled?: boolean }) => JSX.Element;\n}\n\nconst AppleLogin = (props: AppleLoginProps) => {\n  const { clientId, redirectURI, state = '', render, designProp = {}, responseMode = 'query', responseType = 'code', nonce, callback, scope } = props;\n\n  useEffect(() => {\n    if (typeof callback === 'function' && responseMode === 'query' && responseType === 'code' && window && window.location) {\n      let match;\n      const pl = /\\+/g,  // Regex for replacing addition symbol with a space\n        search = /([^&=]+)=?([^&]*)/g,\n        decode = (s: any) => { return decodeURIComponent(s.replace(pl, \" \")); },\n        query = window.location.search.substring(1);\n\n      let urlParams = {};\n      while (match = search.exec(query)) {\n        urlParams[decode(match[1])] = decode(match[2]);\n      }\n      if (urlParams['code']) {\n        callback({\n          code: urlParams['code']\n        });\n      }\n    }\n    return () => {\n    };\n  }, [])\n\n  const onClick = (e: any) => {\n    if (e) {\n      e.preventDefault();\n    }\n    window.location.href = `https://appleid.apple.com/auth/authorize?${generateQueryString({\n      response_type: responseType,\n      response_mode: responseMode,\n      client_id: clientId,\n      redirect_uri: encodeURIComponent(redirectURI),\n      state,\n      nonce,\n      scope: responseMode === 'query' ? '' : scope\n    })}`;\n  }\n\n  if (typeof render === 'function') {\n    return render({ onClick })\n  }\n\n  return (\n    <>\n      <div id=\"appleid-signin\" onClick={onClick}>\n        <img src={`https://appleid.cdn-apple.com/appleid/button?${generateQueryString(designProp)}`} />\n      </div>\n    </>\n  );\n};\n\nexport default AppleLogin;\n"]},"metadata":{},"sourceType":"module"}