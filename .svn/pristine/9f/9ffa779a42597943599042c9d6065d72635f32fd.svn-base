{"ast":null,"code":"import loginAction from '../actions/login.actions';\nimport loginActionTypes from '../actionTypes/login.actiontypes';\nlet initialState = {\n  isLogged: localStorage.getItem('user') ? true : false,\n  data: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {\n    \"id\": null,\n    \"username\": null,\n    \"email\": null,\n    \"fullname\": null,\n    \"birthday\": null,\n    \"sex\": null,\n    \"identityNumber\": null,\n    \"mobile\": null,\n    \"address\": null,\n    \"city\": null,\n    \"company\": null,\n    \"companyAddress\": null,\n    \"createDate\": null,\n    \"fastReg\": null,\n    \"lastLogin\": null,\n    \"identityDate\": null,\n    \"identityPlace\": null,\n    \"ip\": null,\n    \"status\": null\n  },\n  error: null\n};\n\nconst loginReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginActionTypes.LOGIN_RESQUEST:\n      {\n        return { ...state\n        };\n      }\n      ;\n\n    case loginActionTypes.LOGIN_SUCCESS:\n      {\n        localStorage.setItem(\"user\", JSON.stringify(action.result.data));\n        state.data = action.result.data;\n        state.isLogin = true;\n        return { ...state,\n          error: null\n        };\n      }\n      ;\n\n    case loginActionTypes.LOGIN_FAILURE:\n      {\n        localStorage.setItem(\"user\", JSON.stringify(action.result.data));\n        state.data = {\n          \"id\": null,\n          \"username\": null,\n          \"email\": null,\n          \"fullname\": null,\n          \"birthday\": null,\n          \"sex\": null,\n          \"identityNumber\": null,\n          \"mobile\": null,\n          \"address\": null,\n          \"city\": null,\n          \"company\": null,\n          \"companyAddress\": null,\n          \"createDate\": null,\n          \"fastReg\": null,\n          \"lastLogin\": null,\n          \"identityDate\": null,\n          \"identityPlace\": null,\n          \"ip\": null,\n          \"status\": null\n        };\n        state.isLogin = false;\n        state.error = result.data;\n        return {};\n      }\n      ;\n\n    default:\n      return { ...state\n      };\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/reducers/login.reducer.js"],"names":["loginAction","loginActionTypes","initialState","isLogged","localStorage","getItem","data","JSON","parse","error","loginReducer","state","action","type","LOGIN_RESQUEST","LOGIN_SUCCESS","setItem","stringify","result","isLogin","LOGIN_FAILURE"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,QAAQ,EAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+B,IAA/B,GAAsC,KADlC;AAEfC,EAAAA,IAAI,EAAEF,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BE,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E;AAAC,UAAM,IAAP;AAAY,gBAAY,IAAxB;AAA6B,aAAS,IAAtC;AAA2C,gBAAY,IAAvD;AAA4D,gBAAY,IAAxE;AAA6E,WAAO,IAApF;AAAyF,sBAAkB,IAA3G;AAAgH,cAAU,IAA1H;AAA+H,eAAW,IAA1I;AAA+I,YAAQ,IAAvJ;AAA4J,eAAW,IAAvK;AAA4K,sBAAkB,IAA9L;AAAmM,kBAAc,IAAjN;AAAsN,eAAW,IAAjO;AAAsO,iBAAa,IAAnP;AAAwP,oBAAgB,IAAxQ;AAA6Q,qBAAiB,IAA9R;AAAmS,UAAM,IAAzS;AAA8S,cAAU;AAAxT,GAFjE;AAGfI,EAAAA,KAAK,EAAE;AAHQ,CAAnB;;AAMA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGT,YAAT,EAAuBU,MAAvB,KAAkC;AACnD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKZ,gBAAgB,CAACa,cAAtB;AACA;AACI,eAAO,EACH,GAAGH;AADA,SAAP;AAGH;AAAA;;AACD,SAAKV,gBAAgB,CAACc,aAAtB;AACA;AACIX,QAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeL,MAAM,CAACM,MAAP,CAAcZ,IAA7B,CAA7B;AACAK,QAAAA,KAAK,CAACL,IAAN,GAAaM,MAAM,CAACM,MAAP,CAAcZ,IAA3B;AACAK,QAAAA,KAAK,CAACQ,OAAN,GAAgB,IAAhB;AACA,eAAO,EACH,GAAGR,KADA;AAEHF,UAAAA,KAAK,EAAE;AAFJ,SAAP;AAIH;AAAA;;AACD,SAAKR,gBAAgB,CAACmB,aAAtB;AACA;AACIhB,QAAAA,YAAY,CAACY,OAAb,CAAqB,MAArB,EAA6BT,IAAI,CAACU,SAAL,CAAeL,MAAM,CAACM,MAAP,CAAcZ,IAA7B,CAA7B;AACAK,QAAAA,KAAK,CAACL,IAAN,GAAa;AAAC,gBAAM,IAAP;AAAY,sBAAY,IAAxB;AAA6B,mBAAS,IAAtC;AAA2C,sBAAY,IAAvD;AAA4D,sBAAY,IAAxE;AAA6E,iBAAO,IAApF;AAAyF,4BAAkB,IAA3G;AAAgH,oBAAU,IAA1H;AAA+H,qBAAW,IAA1I;AAA+I,kBAAQ,IAAvJ;AAA4J,qBAAW,IAAvK;AAA4K,4BAAkB,IAA9L;AAAmM,wBAAc,IAAjN;AAAsN,qBAAW,IAAjO;AAAsO,uBAAa,IAAnP;AAAwP,0BAAgB,IAAxQ;AAA6Q,2BAAiB,IAA9R;AAAmS,gBAAM,IAAzS;AAA8S,oBAAU;AAAxT,SAAb;AACAK,QAAAA,KAAK,CAACQ,OAAN,GAAgB,KAAhB;AACAR,QAAAA,KAAK,CAACF,KAAN,GAAcS,MAAM,CAACZ,IAArB;AACA,eAAO,EAAP;AAGH;AAAA;;AACD;AAAS,aAAO,EACZ,GAAGK;AADS,OAAP;AA3Bb;AAgCH,CAjCD;;AAmCA,eAAeD,YAAf","sourcesContent":["import loginAction from '../actions/login.actions';\r\nimport loginActionTypes from '../actionTypes/login.actiontypes'; \r\n\r\nlet initialState = {\r\n    isLogged : localStorage.getItem('user') ? true : false,\r\n    data: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {\"id\": null,\"username\": null,\"email\": null,\"fullname\": null,\"birthday\": null,\"sex\": null,\"identityNumber\": null,\"mobile\": null,\"address\": null,\"city\": null,\"company\": null,\"companyAddress\": null,\"createDate\": null,\"fastReg\": null,\"lastLogin\": null,\"identityDate\": null,\"identityPlace\": null,\"ip\": null,\"status\": null},\r\n    error: null\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case loginActionTypes.LOGIN_RESQUEST:\r\n        {\r\n            return {\r\n                ...state\r\n            };\r\n        };\r\n        case loginActionTypes.LOGIN_SUCCESS:\r\n        {\r\n            localStorage.setItem(\"user\", JSON.stringify(action.result.data));\r\n            state.data = action.result.data;\r\n            state.isLogin = true;\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        };\r\n        case loginActionTypes.LOGIN_FAILURE:\r\n        {\r\n            localStorage.setItem(\"user\", JSON.stringify(action.result.data));\r\n            state.data = {\"id\": null,\"username\": null,\"email\": null,\"fullname\": null,\"birthday\": null,\"sex\": null,\"identityNumber\": null,\"mobile\": null,\"address\": null,\"city\": null,\"company\": null,\"companyAddress\": null,\"createDate\": null,\"fastReg\": null,\"lastLogin\": null,\"identityDate\": null,\"identityPlace\": null,\"ip\": null,\"status\": null};\r\n            state.isLogin = false;\r\n            state.error = result.data\r\n            return {\r\n               \r\n            };\r\n        };\r\n        default: return {\r\n            ...state\r\n        };\r\n    }\r\n\r\n}\r\n\r\nexport default loginReducer;"]},"metadata":{},"sourceType":"module"}