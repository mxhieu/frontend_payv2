{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\src\\\\components\\\\PrivateRoutes.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\n/**\r\n * Private Route\r\n */\n\nconst PrivateRoutes = ({\n  component: Comp,\n  isLogged,\n  path,\n  ...rest\n}) => {\n  return React.createElement(Route, Object.assign({\n    path: path\n  }, rest, {\n    render: props => {\n      return isLogged ? React.createElement(Comp, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            prevLocation: path\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRoutes;","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/components/PrivateRoutes.js"],"names":["React","Route","Redirect","PrivateRoutes","component","Comp","isLogged","path","rest","props","pathname","state","prevLocation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AAEA;;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,IAAb;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA,IAA7B;AAAmC,KAAGC;AAAtC,CAAD,KAAkD;AACtE,SACE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAED;AADR,KAEMC,IAFN;AAGE,IAAA,MAAM,EAAGC,KAAD,IAAW;AACjB,aAAOH,QAAQ,GACb,oBAAC,IAAD,oBAAUG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADa,GAGb,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFC,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AACLC,YAAAA,YAAY,EAAEL;AADT;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF;AAYD,KAhBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAoBD,CArBD;;AAuBA,eAAeJ,aAAf","sourcesContent":["import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Private Route\r\n */\r\nconst PrivateRoutes = ({ component: Comp, isLogged, path, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        return isLogged ? (\r\n          <Comp {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: {\r\n                prevLocation: path,\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n"]},"metadata":{},"sourceType":"module"}