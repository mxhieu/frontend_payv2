{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\src\\\\components\\\\Paytowallet.js\";\nimport React, { Component } from 'react';\nimport '../assets/css/paytowallet.css';\nimport * as _ from 'lodash';\nimport api from '../utils/Api';\nimport apiConfig from '../config/ApiConfig';\nimport commonConfig from '../config/CommonConfig';\nimport Validate from \"../utils/Validate\";\nimport PayBreadcrumb from './PayBreadcrumb';\nimport Form from 'react-validation/build/form';\nimport Input from 'react-validation/build/input';\nimport Select from 'react-validation/build/select';\nimport CheckButton from 'react-validation/build/button';\nimport { required, minLength, maxLength } from \"../utils/validateInput\";\nexport default class Paytowallet extends Component {\n  /**\r\n   * Constructor\r\n   * @param props\r\n   * @created 2020-03-18 LongTHK\r\n   */\n  constructor(props) {\n    super(props);\n\n    this.changeServerGroup = event => {\n      // get server group value\n      let serverGroupValue = event.target.value; // load servers list base on group\n\n      if (serverGroupValue !== '') {\n        this.setState({\n          serversList: this.state.serverGroups[serverGroupValue],\n          isDisableSelectServers: false\n        });\n      } else {\n        this.setState({\n          isDisableSelectServers: true\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState(prevState => ({\n        payItem: { ...prevState.payItem,\n          [name]: value\n        }\n      }));\n    };\n\n    this.handleServerChanged = event => {\n      // get md5\n      let md5 = require('md5'); // get params\n\n\n      let userId = JSON.parse(localStorage.getItem('user')).data.id;\n      let sign = md5(userId + apiConfig.jwtToken);\n      let serverId = event.target.value; // define endpoint\n\n      let endPoint = apiConfig.domain + apiConfig.endpoint.getRole + '?server_id=' + serverId + '&id_user=' + userId + '&productAgent=' + this.state.game.agent + '&sign=' + sign; // call api\n\n      api.call('GET', endPoint).then(response => {\n        // get response data\n        let responseData = response.data; // set roles list\n\n        if (responseData.status) {\n          // get roles list\n          let rolesList = responseData.data.role; // set roles list\n\n          this.setState({\n            rolesList: rolesList\n          }); // set charge game item\n\n          this.setState({\n            chargeGameItem: {\n              serverId: serverId,\n              roleId: rolesList[0].roleId\n            }\n          });\n        } else {\n          // clear roles list\n          this.setState({\n            rolesList: []\n          }); // clear charge game item\n\n          this.setState({\n            chargeGameItem: {}\n          });\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.openModal = event => {\n      // get gold id\n      let goldId = window.$(event.target).data('gold-id');\n\n      if (window.$(event.target).data('amount') > this.state.balance) {\n        // set state\n        this.setState({\n          modalContent: 'Không đủ số dư trong tài khoản, hãy chọn mệnh giá thấp hơn hoặc nạp thêm tiền vào ví để tiếp tục giao dịch'\n        }); // create modal\n\n        let modal = window.$('.modal-notification'); // modal close action\n\n        modal.on('click', function () {\n          modal.modal('hide');\n        }); // show modal\n\n        modal.modal('show');\n      } else {\n        // get gold id\n        this.setState(prevState => ({\n          chargeGameItem: { ...prevState.chargeGameItem,\n            goldId: goldId\n          }\n        })); // create modal\n\n        let modal = window.$('.modal-confirm'); // modal close action\n\n        modal.on('hidden.bs.modal', function () {\n          this.setState({\n            chargeGameResult: {}\n          });\n        }.bind(this)); // show modal\n\n        modal.modal('show');\n      }\n    };\n\n    this.changeRoleId = event => {\n      this.setState(prevState => ({\n        chargeGameItem: { ...prevState,\n          roleId: event.target.value\n        }\n      }));\n    };\n\n    this.chargeGame = event => {\n      // stop propagation\n      event.stopPropagation(); // get md5\n\n      let md5 = require('md5'); // create end point\n\n\n      let endPoint = apiConfig.domain + apiConfig.endpoint.payToGame + '?roleId=' + this.state.chargeGameItem.roleId + '&goldId=' + this.state.chargeGameItem.goldId + '&username=' + this.state.username + '&productAgent=' + this.state.game.agent + '&serverId=' + this.state.chargeGameItem.serverId + '&sign=' + md5(this.state.username + apiConfig.jwtToken); // call api\n\n      api.call('GET', endPoint).then(response => {\n        // get response data\n        let responseData = response.data; // set state\n\n        this.setState({\n          chargeGameResult: {\n            status: responseData.status,\n            message: responseData.messages\n          }\n        });\n      }).catch(err => {\n        console.log('err');\n      });\n    };\n\n    this.changePayItem = payType => {\n      switch (payType) {\n        case 'card':\n          this.setState({\n            payItem: {\n              cardType: '',\n              serie: '',\n              number: ''\n            }\n          });\n          break;\n\n        case 'atm':\n          this.setState({\n            payItem: {\n              amount: ''\n            }\n          });\n          break;\n\n        default:\n          this.setState({\n            payItem: {\n              cardType: '',\n              serie: '',\n              number: ''\n            }\n          });\n      } // push value to pay item\n\n\n      this.setState(prevState => ({\n        payItem: { ...prevState.payItem,\n          username: this.state.username,\n          productAgent: this.state.game.agent\n        }\n      })); // reset error\n\n      this.setState({\n        errors: {}\n      });\n    };\n\n    this.state = {\n      username: '',\n      balance: 0,\n      game: {},\n      cardsList: commonConfig.CardsList,\n      atmValuesList: commonConfig.ATMValuesList,\n      serverGroups: [],\n      serversList: [],\n      goldsList: [],\n      isDisableSelectServers: true,\n      payItem: {},\n      inLoadingPage: false,\n      inProcessing: false,\n      processingResult: {\n        status: null,\n        message: ''\n      },\n      errors: {},\n      chargeGameItem: {},\n      chargeGameResult: {},\n      rolesList: null,\n      modalContent: ''\n    };\n  }\n  /**\r\n   * On component did mount event\r\n   * @created 2020-03-18 LongTHk\r\n   */\n\n\n  componentDidMount() {\n    // get md5\n    let md5 = require('md5'); // get username\n\n\n    let username = JSON.parse(localStorage.getItem('user')).data.username; // get query string\n\n    let queryString = require('query-string'); // set inLoadingPage status\n\n\n    this.setState({\n      inLoadingPage: true\n    }); // call api get page content\n\n    let slug = this.props.match.match.params.slug;\n    let sign = md5(username + apiConfig.jwtToken);\n    let endPoint = apiConfig.domain + apiConfig.endpoint.getDetailGameToWallet + '?slug=' + slug + '&username=' + username + '&sign=' + sign;\n    api.call('GET', endPoint).then(response => {\n      // get return data\n      let data = response.data.data; // spit servers list into server groups\n\n      let serverGroups = _.chunk(data.servers, 10); // set state\n\n\n      this.setState({\n        username: username,\n        balance: data.balance,\n        game: Object.keys(data).length > 0 ? data.game[0] : null,\n        serverGroups: serverGroups,\n        goldsList: data.golds\n      }); // call api check Charging ATM status\n\n      let strParams = this.props.match.location.search;\n      let params = queryString.parse(strParams);\n\n      if (_.has(params, 'trans_id')) {\n        let endpointATMSuccess = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATMSuccess + strParams;\n        api.call('GET', endpointATMSuccess).then(response => {\n          // set atm response message\n          this.setState({\n            modalContent: response.data.messages\n          }); // create modal\n\n          let modal = window.$('.modal-notification'); // modal close action\n\n          modal.on('click', function () {\n            modal.modal('hide');\n          }); // show modal\n\n          modal.modal('show');\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    }).finally(() => {\n      // set inLoadingPage status\n      this.setState({\n        inLoadingPage: false\n      });\n    });\n  }\n  /**\r\n   * Action on server group changee\r\n   * @param event\r\n   * @crated 2020-03018 LongTHK\r\n   */\n\n\n  // /**\n  //  * Pay by card\n  //  * @created 2020-03-19 LongTHk\n  //  */\n  // payByCard = async () => {\n  //     // reset error\n  //     this.setState({\n  //         errors: {}\n  //     });\n  //     if (await this.validatePayByCard()) {\n  //         // set inProcessing mode\n  //         this.setState({\n  //             inProcessing: true\n  //         });\n  //         // get md5\n  //         const md5 = require('md5');\n  //         // get pay item\n  //         const payItem = this.state.payItem;\n  //         // generate endpoint\n  //         const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeCard +\n  //             '?serial=' + payItem.serie +\n  //             '&code=' + payItem.number +\n  //             '&username=' + payItem.username +\n  //             '&productAgent=' + payItem.productAgent +\n  //             '&type=' + payItem.cardType +\n  //             '&sign=' + md5(payItem.username + apiConfig.jwtToken);\n  //         // call api\n  //         api.call('GET', endPoint)\n  //             .then((response) => {\n  //                 // get response data\n  //                 let responseData = response.data;\n  //                 // set state\n  //                 if (responseData.status) {\n  //                     this.setState({\n  //                         balance: responseData.data.balance,\n  //                         processingResult: {\n  //                             status: true,\n  //                             message: responseData.messages\n  //                         }\n  //                     });\n  //                 } else {\n  //                     this.setState({\n  //                         processingResult: {\n  //                             status: false,\n  //                             message: responseData.messages\n  //                         }\n  //                     })\n  //                 }\n  //             })\n  //             .catch((err) => {\n  //                 console.log(err)\n  //             })\n  //             .finally(() => {\n  //                 // release inProcessing mode\n  //                 this.setState({\n  //                     inProcessing: false\n  //                 });\n  //             });\n  //     }\n  // };\n  // /**\n  //  * Pay by ATM\n  //  * @created 2020-03-19 LongTHk\n  //  */\n  // payByATM = async () => {\n  //     // reset error\n  //     this.setState({\n  //         errors: {}\n  //     });\n  //     if (await this.validatePayByATM()) {\n  //         // set inProcessing mode\n  //         this.setState({\n  //             inProcessing: true\n  //         });\n  //         // get md5\n  //         const md5 = require('md5');\n  //         // get pay item\n  //         const payItem = this.state.payItem;\n  //         // generate endpoint\n  //         const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATM +\n  //             '?username=' + payItem.username +\n  //             '&productAgent=' + payItem.productAgent +\n  //             '&amount=' + payItem.amount +\n  //             '&sign=' + md5(payItem.username + apiConfig.jwtToken);\n  //         // call api\n  //         api.call('GET', endPoint)\n  //             .then((response) => {\n  //                 window.location.href = response.data.data.link;\n  //             })\n  //             .catch((err) => {\n  //                 // release inProcessing mode\n  //                 this.setState({\n  //                     inProcessing: false\n  //                 });\n  //                 console.log(err)\n  //             });\n  //     }\n  // };\n  // /**\n  //  * Validate Pay by card input\n  //  * @returns {Promise<boolean>}\n  //  * @created 2020-03-19 LongTHK\n  //  */\n  // validatePayByCard = async () => {\n  //     // define valid status\n  //     let isValid = true;\n  //     // define errors\n  //     let errors = {};\n  //     // check card type\n  //     if (Validate.isRequired(this.state.payItem.cardType)) {\n  //         errors.cardType = 'Vui lòng chọn loại thẻ';\n  //         isValid = false;\n  //     }\n  //     // check serie\n  //     if (Validate.isRequired(this.state.payItem.serie)) {\n  //         errors.serie = 'Vui lòng nhập số seri';\n  //         isValid = false;\n  //     }\n  //     if (Validate.maxLength(this.state.payItem.serie, 20)) {\n  //         errors.serie = 'Seri tối đa 20 ký tự';\n  //         isValid = false;\n  //     }\n  //     if (Validate.minLength(this.state.payItem.serie, 6)) {\n  //         errors.serie = 'Seri tối thiểu 6 ký tự';\n  //         isValid = false;\n  //     }\n  //     // check number\n  //     if (Validate.isRequired(this.state.payItem.number)) {\n  //         errors.number = 'Vui lòng nhập mã thẻ';\n  //         isValid = false;\n  //     }\n  //     if (Validate.maxLength(this.state.payItem.number, 20)) {\n  //         errors.number = 'Mã thẻ tối đa 20 ký tự';\n  //         isValid = false;\n  //     }\n  //     if (Validate.minLength(this.state.payItem.number, 6)) {\n  //         errors.number = 'Mã thẻ tối thiểu 6 ký tự';\n  //         isValid = false;\n  //     }\n  //     // set errors\n  //     await this.setState({\n  //         errors: errors\n  //     });\n  //     return isValid;\n  // };\n  // /**\n  //  * Validate Pay by ATM input\n  //  * @returns {Promise<boolean>}\n  //  * @created 2020-03-19 LongTHk\n  //  */\n  // validatePayByATM = async () => {\n  //     // define valid status\n  //     let isValid = true;\n  //     // define errors\n  //     let errors = {};\n  //     // check amount\n  //     if (Validate.isRequired(this.state.payItem.amount)) {\n  //         errors.amount = 'Vui lòng chọn số tiền nạp';\n  //         isValid = false;\n  //     }\n  //     // set errors\n  //     await this.setState({\n  //         errors: errors\n  //     });\n  //     return isValid;\n  // };\n\n  /**\r\n   * Render layout\r\n   * @returns {*}\r\n   * @created 2020-03-18 LongTHK\r\n   */\n  render() {\n    /**\r\n     * Loading page animation\r\n     */\n    // if (this.state.inLoadingPage) {\n    //     return (\n    //         <div style={{textAlign: \"center\"}}>\n    //             <div className=\"lds-dual-ring\"></div>\n    //         </div>\n    //     )\n    // }\n    // /**\n    //  * Render in case game not found\n    //  */\n    // if (this.state.game === null || this.state.game === undefined) {\n    //     return (\n    //         <div>\n    //             <h1 className='text-center'>Không tìm thấy game</h1>\n    //         </div>\n    //     )\n    // }\n\n    /**\r\n     * Page render\r\n     */\n    return React.createElement(Form, {\n      onSubmit: e => this.onSubmit(e),\n      ref: c => {\n        this.form = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"email\",\n      onChange: this.onChangeHandler,\n      type: \"text\",\n      placeholder: \"Email\",\n      className: \"form-control\",\n      validations: [required],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }), React.createElement(Input, {\n      name: \"password\",\n      onChange: this.onChangeHandler,\n      type: \"password\",\n      placeholder: \"Password\",\n      className: \"form-control\",\n      validations: [required, minLength],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-info btn-block login\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, \"Login\"), React.createElement(CheckButton, {\n      style: {\n        display: 'none'\n      },\n      ref: c => {\n        this.checkBtn = c;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    })) // <div className=\"container paytowallet_container\">\n    //     <div className=\"row box\">\n    //         <PayBreadcrumb match={this.props.match.match}></PayBreadcrumb>\n    //         {/* <form method=\"POST\" name=\"napgold\" id=\"napgold\" noValidate=\"novalidate\"> */}\n    //             <h2>{this.state.game.name}</h2>\n    //             <div className=\"qa-message-list\" id=\"wallmessages\">\n    //                 <div className=\"message-item\" id=\"accRole\">\n    //                     <div className=\"message-inner\">\n    //                         <div className=\"message-head clearfix handle-acc-role\">\n    //                             <div className=\"user-detail\">\n    //                                 <h5 className=\"handle\">Tài khoản : {this.state.username}</h5>\n    //                                 <h6 className=\"handle\">Số dư : {this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</h6>\n    //                                 <input type=\"hidden\" defaultValue={0} name=\"balance\"/>\n    //                                 <input type=\"hidden\" defaultValue={771866} name=\"id_user\" id=\"id_user\"/>\n    //                                 <input type=\"hidden\" defaultValue={0} name=\"amount\" id=\"amount\"/>\n    //                                 <input type=\"hidden\" defaultValue={0} name=\"gold_id\" id=\"gold_id\"/>\n    //                                 <input type=\"hidden\" defaultValue name=\"theThang\" id=\"theThang\"/>\n    //                             </div>\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //                 <div className=\"message-item\" id=\"accType\">\n    //                     <div className=\"message-inner\">\n    //                         <div className=\"message-head clearfix\">\n    //                             <div className=\"user-detail\">\n    //                                 <h5 className=\"handle\">Chọn phương thức để nạp tiền vào ví</h5>\n    //                             </div>\n    //                         </div>\n    //                         <div className=\"qa-message-content\">\n    //                             <div className=\"collapse-group\" id=\"accordion\">\n    //                                 <div className=\"panel panel-default\">\n    //                                     <div className=\"panel-heading\" role=\"tab\" id=\"headingOne\">\n    //                                         <h4 className=\"panel-title\">\n    //                                             <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseOne\"\n    //                                                onClick={this.changePayItem.bind(window.event, 'card')}\n    //                                                data-parent=\"#accordion\"\n    //                                                aria-expanded=\"true\" aria-controls=\"collapseOne\"\n    //                                                className=\"trigger collapsed\">\n    //                                                 Thẻ cào\n    //                                             </a>\n    //                                         </h4>\n    //                                     </div>\n    //                                     <div id=\"collapseOne\" className=\"panel-collapse collapse\"\n    //                                          role=\"tabpanel\"\n    //                                          aria-labelledby=\"headingOne\" data-id=\"Thẻ cào\">\n    //                                         <div className=\"panel-body\">\n    //                                             <div className=\"tab-pane active\" id=\"tab_card_pay\">\n    //                                             <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c }}>\n    //                                                 {/* <Input \n    //                                                     name=\"email\" \n    //                                                     onChange={this.handleChange}\n    //                                                     type=\"text\" \n    //                                                     placeholder=\"Email\"\n    //                                                     className=\"form-control\" \n    //                                                     validations={[required]}\n    //                                                 /> */}\n    //                                                 {/* <Input \n    //                                                     name=\"password\" \n    //                                                     onChange={this.handleChange}\n    //                                                     type=\"password\" \n    //                                                     placeholder=\"Password\"\n    //                                                     className=\"form-control\" \n    //                                                     validations={[required]}\n    //                                                 /> */}\n    //                                                 <button className=\"btn btn-info btn-block login\" type=\"submit\">Login</button>\n    //                                                 <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\n    //                                             </Form>\n    //                                                 <label htmlFor=\"in_type\"\n    //                                                        className=\"col-sm-12 controll-label\">\n    //                                                     <span>Loại thẻ</span>\n    //                                                     {\n    //                                                         this.state.errors.hasOwnProperty('cardType') &&\n    //                                                         <span\n    //                                                             className=\"input-error\">{this.state.errors.cardType}</span>\n    //                                                     }\n    //                                                     <select name=\"cardType\" className=\"form-control valid\"\n    //                                                             aria-invalid=\"false\"\n    //                                                             onChange={this.handleChange}\n    //                                                     >\n    //                                                         <option value=\"\">Chọn loại thẻ</option>\n    //                                                         {\n    //                                                             _.map(this.state.cardsList, (itemValue, itemIndex) =>\n    //                                                                 <option key={itemIndex}\n    //                                                                         value={itemValue.type}>{itemValue.name}</option>\n    //                                                             )\n    //                                                         }\n    //                                                     </select>\n    //                                                 </label>\n    //                                                 <label htmlFor=\"in_serie\"\n    //                                                        className=\"col-sm-12 controll-label\">\n    //                                                     <span>Số serie</span>\n    //                                                     {\n    //                                                         this.state.errors.hasOwnProperty('serie') &&\n    //                                                         <span\n    //                                                             className=\"input-error\">{this.state.errors.serie}</span>\n    //                                                     }\n    //                                                     <input type=\"text\" name=\"serie\"\n    //                                                            className=\"form-control\"\n    //                                                            onChange={this.handleChange}\n    //                                                            />\n    //                                                 </label>\n    //                                                 <label htmlFor=\"in_pin\"\n    //                                                        className=\"col-sm-12 controll-label\">\n    //                                                     <span>Mã thẻ</span>\n    //                                                     {\n    //                                                         this.state.errors.hasOwnProperty('number') &&\n    //                                                         <span\n    //                                                             className=\"input-error\">{this.state.errors.number}</span>\n    //                                                     }\n    //                                                     <input type=\"text\" name=\"number\"\n    //                                                            className=\"form-control\"\n    //                                                            onChange={this.handleChange}\n    //                                                            />\n    //                                                 </label>\n    //                                                 <button className=\"btn btn-info\" id=\"btnXacnhan\"\n    //                                                         type={\"button\"}\n    //                                                         data-id=\"the-cao\"\n    //                                                         onClick={this.payByCard}\n    //                                                         disabled={this.state.inProcessing}>\n    //                                                     {\n    //                                                         !this.state.inProcessing &&\n    //                                                         <span>Thanh toán</span>\n    //                                                     }\n    //                                                     {\n    //                                                         this.state.inProcessing &&\n    //                                                         <div className={'dot-loader'}>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                         </div>\n    //                                                     }\n    //                                                 </button>\n    //                                                 {\n    //                                                     (\n    //                                                         this.state.processingResult.status !== null &&\n    //                                                         !this.state.processingResult.status &&\n    //                                                         <span\n    //                                                             className=\"message-alert\">{this.state.processingResult.message}</span>\n    //                                                     ) ||\n    //                                                     (\n    //                                                         this.state.processingResult.status !== null &&\n    //                                                         this.state.processingResult.status &&\n    //                                                         <span\n    //                                                             className=\"message-success\">{this.state.processingResult.message}</span>\n    //                                                     )\n    //                                                 }\n    //                                                 <div className=\"clearfix\"/>\n    //                                             </div>\n    //                                         </div>\n    //                                     </div>\n    //                                 </div>\n    //                                 <div className=\"panel panel-default\">\n    //                                     <div className=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\n    //                                         <h4 className=\"panel-title\">\n    //                                             <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseTwo\"\n    //                                                data-parent=\"#accordion\"\n    //                                                onClick={this.changePayItem.bind(window.event, 'atm')}\n    //                                                aria-expanded=\"true\" aria-controls=\"collapseTwo\"\n    //                                                className=\"trigger collapsed\">\n    //                                                 Thẻ ATM/Nội địa/NAPAS\n    //                                             </a>\n    //                                         </h4>\n    //                                     </div>\n    //                                     <div id=\"collapseTwo\" className=\"panel-collapse collapse\"\n    //                                          role=\"tabpanel\"\n    //                                          aria-labelledby=\"headingTwo\" data-id=\"Thẻ ATM/Nội địa/NAPAS\">\n    //                                         <div className=\"panel-body\">\n    //                                             <div id=\"tab_card_pay\">\n    //                                                 <label htmlFor=\"amount_pay\"\n    //                                                        className=\"col-sm-12 controll-label\">\n    //                                                     <span>Số tiền thanh toán (VNĐ)</span>\n    //                                                     {\n    //                                                         this.state.errors.hasOwnProperty('amount') &&\n    //                                                         <span\n    //                                                             className=\"input-error\">{this.state.errors.amount}</span>\n    //                                                     }\n    //                                                     <select name=\"amount\" className=\"form-control\"\n    //                                                             onChange={this.handleChange}>\n    //                                                         <option value=\"\">Chọn số tiền</option>\n    //                                                         {\n    //                                                             _.map(this.state.atmValuesList, (itemValue, itemIndex) =>\n    //                                                                 <option key={itemIndex}\n    //                                                                         value={itemValue.value}>{itemValue.displayText}</option>\n    //                                                             )\n    //                                                         }\n    //                                                     </select>\n    //                                                 </label>\n    //                                                 <button className=\"btn btn-info\" id=\"btnXacnhan\"\n    //                                                         type={\"button\"} data-id=\"the-atm\"\n    //                                                         onClick={this.payByATM}\n    //                                                         disabled={this.state.inProcessing}>\n    //                                                     {\n    //                                                         !this.state.inProcessing &&\n    //                                                         <span>Thanh toán</span>\n    //                                                     }\n    //                                                     {\n    //                                                         this.state.inProcessing &&\n    //                                                         <div className={'dot-loader'}>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                             <div></div>\n    //                                                         </div>\n    //                                                     }\n    //                                                 </button>\n    //                                             </div>\n    //                                         </div>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                         </div>\n    //                         <div className=\"message-alert\">NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM =\n    //                             100% (Thẻ HPCode có\n    //                             bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //                 <div className=\"message-item\" id=\"accGetRole\">\n    //                     <div className=\"message-inner\">\n    //                         <div className=\"message-head clearfix\">\n    //                             <div className=\"user-detail\">\n    //                                 <h5 className=\"handle\">Chọn server để nạp tiền vào game</h5>\n    //                             </div>\n    //                         </div>\n    //                         <div className=\"qa-message-content content_server\">\n    //                             <div className=\"divserverList\">\n    //                                 <input type=\"hidden\" name=\"agent\" id=\"agent\" defaultValue=\"m002\"/>\n    //                                 <label htmlFor=\"server_group\" className=\"col-sm-12 controll-label\">\n    //                                     Chọn cụm máy chủ:\n    //                                 </label>\n    //                                 <select name=\"server_group\" className=\"form-control \"\n    //                                         id=\"server_group\"\n    //                                         onChange={this.changeServerGroup}\n    //                                 >\n    //                                     <option value=\"\">Chọn group server</option>\n    //                                     {\n    //                                         _.map(this.state.serverGroups, (serverGroupValue, serverGroupIndex) =>\n    //                                             <option key={serverGroupIndex} value={serverGroupIndex}>\n    //                                                 Cụm máy\n    //                                                 chủ {serverGroupIndex * 10 + 1} - {serverGroupIndex * 10 + 10}\n    //                                             </option>\n    //                                         )\n    //                                     }\n    //                                 </select>\n    //                                 <label htmlFor=\"server_list\" className=\"col-sm-12 controll-label\"\n    //                                        style={{width: 'auto'}}>\n    //                                     Chọn server:\n    //                                 </label>\n    //                                 <select name=\"server_id\" className=\"form-control \"\n    //                                         id=\"server_list\"\n    //                                         disabled={this.state.isDisableSelectServers}\n    //                                         onChange={this.handleServerChanged}\n    //                                 >\n    //                                     <option value=\"\">Chọn server</option>\n    //                                     {\n    //                                         _.map(this.state.serversList, (serverValue, serverIndex) =>\n    //                                             <option key={serverIndex} value={serverValue.server_id}>\n    //                                                 {serverValue.server_name}\n    //                                             </option>\n    //                                         )\n    //                                     }\n    //                                 </select>\n    //                             </div>\n    //                             <div id=\"appentHtml\">\n    //                                 <label htmlFor=\"server_list\"\n    //                                        className=\"col-sm-12 controll-label\"\n    //                                        style={{width: 'auto'}}>&nbsp;\n    //                                 </label>\n    //                                 {\n    //                                     this.state.rolesList !== null &&\n    //                                     this.state.rolesList.length > 0 &&\n    //                                     <div>\n    //                                         <select name=\"rolesList\" className=\"form-control \"\n    //                                                 id=\"server_list\" onChange={this.changeRoleId}>\n    //                                             {\n    //                                                 _.map(this.state.rolesList, (roleValue, roleIndex) =>\n    //                                                     <option key={roleIndex}\n    //                                                             value={roleValue.roleId}>{roleValue.roleName}</option>\n    //                                                 )\n    //                                             }\n    //                                         </select>\n    //                                     </div>\n    //                                 }\n    //                                 {\n    //                                     this.state.rolesList !== null &&\n    //                                     this.state.rolesList.length === 0 &&\n    //                                     <div className=\"role-name\">\n    //                                         Không tìm thấy nhân vật game\n    //                                     </div>\n    //                                 }\n    //                             </div>\n    //                             <div className=\"clearfix\"/>\n    //                         </div>\n    //                     </div>\n    //                 </div>\n    //                 {\n    //                     this.state.rolesList !== null &&\n    //                     this.state.rolesList.length > 0 &&\n    //                     <div className=\"message-item\" id=\"accRang\">\n    //                         <div className=\"message-inner\">\n    //                             <div className=\"message-head clearfix\">\n    //                                 <div className=\"user-detail\">\n    //                                     <h5 className=\"handle\">Chọn gói vật phẩm</h5>\n    //                                     <p className=\"tab\" id=\"coingold\">Gói Nguyên Bảo</p>\n    //                                     <p className=\"tab\" id=\"coingift\">Gói Quà Đặc Biệt</p>\n    //                                 </div>\n    //                             </div>\n    //                             <div className=\"qa-message-content\">\n    //                                 <div className=\"form-group resultCoin\">\n    //                                     <div id=\"showcoingold\">\n    //                                         {\n    //                                             _.map(this.state.goldsList, (goldItemValue, goldItemIndex) =>\n    //                                                 <div className=\"gold-item\" key={goldItemIndex}>\n    //                                                     <img\n    //                                                         src={commonConfig.assetDomain + goldItemValue.image}\n    //                                                         data-amount={goldItemValue.amount}\n    //                                                         data-gold-id={goldItemValue.id}\n    //                                                         onClick={this.openModal}\n    //                                                     />\n    //                                                 </div>\n    //                                             )\n    //                                         }\n    //                                     </div>\n    //                                     <div id=\"showcoingift\"/>\n    //                                 </div>\n    //                                 <div className=\"clearfix\"/>\n    //                             </div>\n    //                         </div>\n    //                     </div>\n    //                 }\n    //                 <div id=\"myModal\" className=\"modal\">\n    //                     <div className=\"modal-content clearfix\">\n    //                         <h1>Xác nhận giao dịch</h1>\n    //                         <input type=\"submit\" name=\"submit\" id=\"submitbutton\"\n    //                                className=\"col-sm-3 btn btn-primary\"\n    //                                defaultValue=\"Thanh toán\"/>\n    //                         <div className=\"clearfix\"/>\n    //                         <span className=\"close btn-danger\">Chấp nhận</span>\n    //                     </div>\n    //                 </div>\n    //             </div>\n    //         {/* </form> */}\n    //     </div>\n    //     <div className=\"modal modal-notification fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\n    //         <div className=\"modal-dialog\" role=\"document\">\n    //             <div className=\"modal-content\">\n    //                 <div className=\"modal-body\">\n    //                     <p className={\"text-center\"}>{this.state.modalContent}</p>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n    //     <div className=\"modal modal-confirm fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\n    //         <div className=\"modal-dialog\" role=\"document\">\n    //             <div className=\"modal-content\">\n    //                 {\n    //                     Object.keys(this.state.chargeGameItem).length > 0 &&\n    //                     <div className=\"modal-body\">\n    //                         <p>\n    //                             <b>Server:</b>&nbsp;\n    //                             {\n    //                                 this.state.serversList[_.findIndex(this.state.serversList, function (item) {\n    //                                     return item.server_id === this.state.chargeGameItem.serverId\n    //                                 }.bind(this))].server_name\n    //                             }\n    //                         </p>\n    //                         {\n    //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\n    //                             <p>\n    //                                 <b>Gói nạp:</b>&nbsp;\n    //                                 {\n    //                                     this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\n    //                                         return item.id === this.state.chargeGameItem.goldId\n    //                                     }.bind(this))].gold\n    //                                 }\n    //                             </p>\n    //                         }\n    //                         <p>\n    //                             <b>Số dư hiện tại:</b>&nbsp;{ this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'}) }\n    //                         </p>\n    //                         {\n    //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\n    //                             <p>\n    //                                 <b>Số tiền cần thành toán:</b>&nbsp;\n    //                                 {\n    //                                     this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\n    //                                         return item.id === this.state.chargeGameItem.goldId\n    //                                     }.bind(this))].amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\n    //                                 }\n    //                             </p>\n    //                         }\n    //                         {\n    //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\n    //                             <p>\n    //                                 <b>Số dư còn lại:</b>&nbsp;\n    //                                 {\n    //                                     (this.state.balance - this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\n    //                                         return item.id === this.state.chargeGameItem.goldId\n    //                                     }.bind(this))].amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\n    //                                 }\n    //                             </p>\n    //                         }\n    //                     </div>\n    //                 }\n    //                 <div className=\"modal-footer\">\n    //                     <div\n    //                         className={(this.state.chargeGameResult.status !== 0) ? 'text-center text-success' : 'text-center text-danger'}>\n    //                         {this.state.chargeGameResult.message}\n    //                     </div>\n    //                     <button type={\"button\"} className=\"btn btn-primary\" onClick={this.chargeGame}>Nạp vào\n    //                         game\n    //                     </button>\n    //                     <button type={\"button\"} className=\"btn btn-danger\" data-dismiss=\"modal\">Đóng</button>\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     </div>\n    // </div>\n    ;\n  }\n\n}","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/components/Paytowallet.js"],"names":["React","Component","_","api","apiConfig","commonConfig","Validate","PayBreadcrumb","Form","Input","Select","CheckButton","required","minLength","maxLength","Paytowallet","constructor","props","changeServerGroup","event","serverGroupValue","target","value","setState","serversList","state","serverGroups","isDisableSelectServers","handleChange","type","checked","name","prevState","payItem","handleServerChanged","md5","require","userId","JSON","parse","localStorage","getItem","data","id","sign","jwtToken","serverId","endPoint","domain","endpoint","getRole","game","agent","call","then","response","responseData","status","rolesList","role","chargeGameItem","roleId","catch","error","console","log","openModal","goldId","window","$","balance","modalContent","modal","on","chargeGameResult","bind","changeRoleId","chargeGame","stopPropagation","payToGame","username","message","messages","err","changePayItem","payType","cardType","serie","number","amount","productAgent","errors","cardsList","CardsList","atmValuesList","ATMValuesList","goldsList","inLoadingPage","inProcessing","processingResult","componentDidMount","queryString","slug","match","params","getDetailGameToWallet","chunk","servers","Object","keys","length","golds","strParams","location","search","has","endpointATMSuccess","paymentWalletChargeATMSuccess","finally","render","e","onSubmit","c","form","onChangeHandler","display","checkBtn"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,+BAAP;AAEA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AAEA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,EAA6BC,SAA7B,QAA6C,wBAA7C;AAEA,eAAe,MAAMC,WAAN,SAA0Bd,SAA1B,CAAoC;AAE/C;;;;;AAKAe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA0GnBC,iBA1GmB,GA0GEC,KAAD,IAAW;AAC3B;AACA,UAAIC,gBAAgB,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAApC,CAF2B,CAI3B;;AACA,UAAIF,gBAAgB,KAAK,EAAzB,EAA6B;AACzB,aAAKG,QAAL,CAAc;AACVC,UAAAA,WAAW,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBN,gBAAxB,CADH;AAEVO,UAAAA,sBAAsB,EAAE;AAFd,SAAd;AAIH,OALD,MAKO;AACH,aAAKJ,QAAL,CAAc;AACVI,UAAAA,sBAAsB,EAAE;AADd,SAAd;AAGH;AACJ,KAzHkB;;AAAA,SAgInBC,YAhImB,GAgIHT,KAAD,IAAW;AACtB,YAAME,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,YAAMC,KAAK,GAAGD,MAAM,CAACQ,IAAP,KAAgB,UAAhB,GAA6BR,MAAM,CAACS,OAApC,GAA8CT,MAAM,CAACC,KAAnE;AACA,YAAMS,IAAI,GAAGV,MAAM,CAACU,IAApB;AAEA,WAAKR,QAAL,CAAcS,SAAS,KAAK;AACxBC,QAAAA,OAAO,EAAE,EACL,GAAGD,SAAS,CAACC,OADR;AAEL,WAACF,IAAD,GAAQT;AAFH;AADe,OAAL,CAAvB;AAMH,KA3IkB;;AAAA,SAiJnBY,mBAjJmB,GAiJIf,KAAD,IAAW;AAC7B;AACA,UAAIgB,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB,CAF6B,CAI7B;;;AACA,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,IAAzC,CAA8CC,EAA3D;AACA,UAAIC,IAAI,GAAGT,GAAG,CAACE,MAAM,GAAGjC,SAAS,CAACyC,QAApB,CAAd;AACA,UAAIC,QAAQ,GAAG3B,KAAK,CAACE,MAAN,CAAaC,KAA5B,CAP6B,CAS7B;;AACA,UAAIyB,QAAQ,GAAG3C,SAAS,CAAC4C,MAAV,GAAmB5C,SAAS,CAAC6C,QAAV,CAAmBC,OAAtC,GACX,aADW,GACKJ,QADL,GAEX,WAFW,GAEGT,MAFH,GAGX,gBAHW,GAGQ,KAAKZ,KAAL,CAAW0B,IAAX,CAAgBC,KAHxB,GAIX,QAJW,GAIAR,IAJf,CAV6B,CAgB7B;;AACAzC,MAAAA,GAAG,CAACkD,IAAJ,CAAS,KAAT,EAAgBN,QAAhB,EACKO,IADL,CACWC,QAAD,IAAc;AAChB;AACA,YAAIC,YAAY,GAAGD,QAAQ,CAACb,IAA5B,CAFgB,CAIhB;;AACA,YAAIc,YAAY,CAACC,MAAjB,EAAyB;AACrB;AACA,cAAIC,SAAS,GAAGF,YAAY,CAACd,IAAb,CAAkBiB,IAAlC,CAFqB,CAIrB;;AACA,eAAKpC,QAAL,CAAc;AACVmC,YAAAA,SAAS,EAAEA;AADD,WAAd,EALqB,CASrB;;AACA,eAAKnC,QAAL,CAAc;AACVqC,YAAAA,cAAc,EAAE;AACZd,cAAAA,QAAQ,EAAEA,QADE;AAEZe,cAAAA,MAAM,EAAEH,SAAS,CAAC,CAAD,CAAT,CAAaG;AAFT;AADN,WAAd;AAMH,SAhBD,MAgBO;AACH;AACA,eAAKtC,QAAL,CAAc;AACVmC,YAAAA,SAAS,EAAE;AADD,WAAd,EAFG,CAMH;;AACA,eAAKnC,QAAL,CAAc;AACVqC,YAAAA,cAAc,EAAE;AADN,WAAd;AAGH;AACJ,OAjCL,EAkCKE,KAlCL,CAkCYC,KAAD,IAAW;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,OApCL;AAqCH,KAvMkB;;AAAA,SA8MnBG,SA9MmB,GA8MN/C,KAAD,IAAW;AACnB;AACA,UAAIgD,MAAM,GAAGC,MAAM,CAACC,CAAP,CAASlD,KAAK,CAACE,MAAf,EAAuBqB,IAAvB,CAA4B,SAA5B,CAAb;;AAEA,UAAI0B,MAAM,CAACC,CAAP,CAASlD,KAAK,CAACE,MAAf,EAAuBqB,IAAvB,CAA4B,QAA5B,IAAwC,KAAKjB,KAAL,CAAW6C,OAAvD,EAAgE;AAC5D;AACA,aAAK/C,QAAL,CAAc;AACVgD,UAAAA,YAAY,EAAE;AADJ,SAAd,EAF4D,CAK5D;;AACA,YAAIC,KAAK,GAAGJ,MAAM,CAACC,CAAP,CAAS,qBAAT,CAAZ,CAN4D,CAO5D;;AACAG,QAAAA,KAAK,CAACC,EAAN,CAAS,OAAT,EAAkB,YAAY;AAC1BD,UAAAA,KAAK,CAACA,KAAN,CAAY,MAAZ;AACH,SAFD,EAR4D,CAY5D;;AACAA,QAAAA,KAAK,CAACA,KAAN,CAAY,MAAZ;AACH,OAdD,MAcO;AACH;AACA,aAAKjD,QAAL,CAAcS,SAAS,KAAK;AACxB4B,UAAAA,cAAc,EAAE,EACZ,GAAG5B,SAAS,CAAC4B,cADD;AAEZO,YAAAA,MAAM,EAAEA;AAFI;AADQ,SAAL,CAAvB,EAFG,CASH;;AACA,YAAIK,KAAK,GAAGJ,MAAM,CAACC,CAAP,CAAS,gBAAT,CAAZ,CAVG,CAWH;;AACAG,QAAAA,KAAK,CAACC,EAAN,CAAS,iBAAT,EAA4B,YAAY;AACpC,eAAKlD,QAAL,CAAc;AACVmD,YAAAA,gBAAgB,EAAE;AADR,WAAd;AAGH,SAJ2B,CAI1BC,IAJ0B,CAIrB,IAJqB,CAA5B,EAZG,CAkBH;;AACAH,QAAAA,KAAK,CAACA,KAAN,CAAY,MAAZ;AACH;AACJ,KArPkB;;AAAA,SA2PnBI,YA3PmB,GA2PHzD,KAAD,IAAW;AACtB,WAAKI,QAAL,CAAcS,SAAS,KAAK;AACxB4B,QAAAA,cAAc,EAAE,EACZ,GAAG5B,SADS;AAEZ6B,UAAAA,MAAM,EAAE1C,KAAK,CAACE,MAAN,CAAaC;AAFT;AADQ,OAAL,CAAvB;AAMH,KAlQkB;;AAAA,SAwQnBuD,UAxQmB,GAwQL1D,KAAD,IAAW;AACpB;AACAA,MAAAA,KAAK,CAAC2D,eAAN,GAFoB,CAIpB;;AACA,UAAI3C,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB,CALoB,CAOpB;;;AACA,UAAIW,QAAQ,GAAG3C,SAAS,CAAC4C,MAAV,GAAmB5C,SAAS,CAAC6C,QAAV,CAAmB8B,SAAtC,GACX,UADW,GACE,KAAKtD,KAAL,CAAWmC,cAAX,CAA0BC,MAD5B,GAEX,UAFW,GAEE,KAAKpC,KAAL,CAAWmC,cAAX,CAA0BO,MAF5B,GAGX,YAHW,GAGI,KAAK1C,KAAL,CAAWuD,QAHf,GAIX,gBAJW,GAIQ,KAAKvD,KAAL,CAAW0B,IAAX,CAAgBC,KAJxB,GAKX,YALW,GAKI,KAAK3B,KAAL,CAAWmC,cAAX,CAA0Bd,QAL9B,GAMX,QANW,GAMAX,GAAG,CAAC,KAAKV,KAAL,CAAWuD,QAAX,GAAsB5E,SAAS,CAACyC,QAAjC,CANlB,CARoB,CAgBpB;;AACA1C,MAAAA,GAAG,CAACkD,IAAJ,CAAS,KAAT,EAAgBN,QAAhB,EACKO,IADL,CACWC,QAAD,IAAc;AAChB;AACA,YAAIC,YAAY,GAAGD,QAAQ,CAACb,IAA5B,CAFgB,CAIhB;;AACA,aAAKnB,QAAL,CAAc;AACVmD,UAAAA,gBAAgB,EAAE;AACdjB,YAAAA,MAAM,EAAED,YAAY,CAACC,MADP;AAEdwB,YAAAA,OAAO,EAAEzB,YAAY,CAAC0B;AAFR;AADR,SAAd;AAMH,OAZL,EAaKpB,KAbL,CAaYqB,GAAD,IAAS;AACZnB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,OAfL;AAgBH,KAzSkB;;AAAA,SAgTnBmB,aAhTmB,GAgTFC,OAAD,IAAa;AACzB,cAAQA,OAAR;AACI,aAAK,MAAL;AACI,eAAK9D,QAAL,CAAc;AACVU,YAAAA,OAAO,EAAE;AACLqD,cAAAA,QAAQ,EAAE,EADL;AAELC,cAAAA,KAAK,EAAE,EAFF;AAGLC,cAAAA,MAAM,EAAE;AAHH;AADC,WAAd;AAOA;;AACJ,aAAK,KAAL;AACI,eAAKjE,QAAL,CAAc;AACVU,YAAAA,OAAO,EAAE;AACLwD,cAAAA,MAAM,EAAE;AADH;AADC,WAAd;AAKA;;AACJ;AACI,eAAKlE,QAAL,CAAc;AACVU,YAAAA,OAAO,EAAE;AACLqD,cAAAA,QAAQ,EAAE,EADL;AAELC,cAAAA,KAAK,EAAE,EAFF;AAGLC,cAAAA,MAAM,EAAE;AAHH;AADC,WAAd;AAlBR,OADyB,CA4BzB;;;AACA,WAAKjE,QAAL,CAAcS,SAAS,KAAK;AACxBC,QAAAA,OAAO,EAAE,EACL,GAAGD,SAAS,CAACC,OADR;AAEL+C,UAAAA,QAAQ,EAAE,KAAKvD,KAAL,CAAWuD,QAFhB;AAGLU,UAAAA,YAAY,EAAE,KAAKjE,KAAL,CAAW0B,IAAX,CAAgBC;AAHzB;AADe,OAAL,CAAvB,EA7ByB,CAqCzB;;AACA,WAAK7B,QAAL,CAAc;AACVoE,QAAAA,MAAM,EAAE;AADE,OAAd;AAGH,KAzVkB;;AAEf,SAAKlE,KAAL,GAAa;AACTuD,MAAAA,QAAQ,EAAE,EADD;AAETV,MAAAA,OAAO,EAAE,CAFA;AAGTnB,MAAAA,IAAI,EAAE,EAHG;AAITyC,MAAAA,SAAS,EAAEvF,YAAY,CAACwF,SAJf;AAKTC,MAAAA,aAAa,EAAEzF,YAAY,CAAC0F,aALnB;AAMTrE,MAAAA,YAAY,EAAE,EANL;AAOTF,MAAAA,WAAW,EAAE,EAPJ;AAQTwE,MAAAA,SAAS,EAAE,EARF;AASTrE,MAAAA,sBAAsB,EAAE,IATf;AAUTM,MAAAA,OAAO,EAAE,EAVA;AAWTgE,MAAAA,aAAa,EAAE,KAXN;AAYTC,MAAAA,YAAY,EAAE,KAZL;AAaTC,MAAAA,gBAAgB,EAAE;AACd1C,QAAAA,MAAM,EAAE,IADM;AAEdwB,QAAAA,OAAO,EAAE;AAFK,OAbT;AAiBTU,MAAAA,MAAM,EAAE,EAjBC;AAkBT/B,MAAAA,cAAc,EAAE,EAlBP;AAmBTc,MAAAA,gBAAgB,EAAE,EAnBT;AAoBThB,MAAAA,SAAS,EAAE,IApBF;AAqBTa,MAAAA,YAAY,EAAE;AArBL,KAAb;AAuBH;AAED;;;;;;AAIA6B,EAAAA,iBAAiB,GAAG;AAChB;AACA,QAAIjE,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAjB,CAFgB,CAGhB;;;AACA,QAAI4C,QAAQ,GAAG1C,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCC,IAAzC,CAA8CsC,QAA7D,CAJgB,CAKhB;;AACA,QAAIqB,WAAW,GAAGjE,OAAO,CAAC,cAAD,CAAzB,CANgB,CAQhB;;;AACA,SAAKb,QAAL,CAAc;AACV0E,MAAAA,aAAa,EAAE;AADL,KAAd,EATgB,CAahB;;AACA,QAAIK,IAAI,GAAG,KAAKrF,KAAL,CAAWsF,KAAX,CAAiBA,KAAjB,CAAuBC,MAAvB,CAA8BF,IAAzC;AACA,QAAI1D,IAAI,GAAGT,GAAG,CAAC6C,QAAQ,GAAG5E,SAAS,CAACyC,QAAtB,CAAd;AACA,QAAIE,QAAQ,GAAG3C,SAAS,CAAC4C,MAAV,GAAmB5C,SAAS,CAAC6C,QAAV,CAAmBwD,qBAAtC,GAA8D,QAA9D,GAAyEH,IAAzE,GAAgF,YAAhF,GAA+FtB,QAA/F,GAA0G,QAA1G,GAAqHpC,IAApI;AACAzC,IAAAA,GAAG,CAACkD,IAAJ,CAAS,KAAT,EAAgBN,QAAhB,EACKO,IADL,CACWC,QAAD,IAAc;AAChB;AACA,UAAIb,IAAI,GAAGa,QAAQ,CAACb,IAAT,CAAcA,IAAzB,CAFgB,CAGhB;;AACA,UAAIhB,YAAY,GAAGxB,CAAC,CAACwG,KAAF,CAAQhE,IAAI,CAACiE,OAAb,EAAsB,EAAtB,CAAnB,CAJgB,CAKhB;;;AACA,WAAKpF,QAAL,CAAc;AACVyD,QAAAA,QAAQ,EAAEA,QADA;AAEVV,QAAAA,OAAO,EAAE5B,IAAI,CAAC4B,OAFJ;AAGVnB,QAAAA,IAAI,EAAEyD,MAAM,CAACC,IAAP,CAAYnE,IAAZ,EAAkBoE,MAAlB,GAA2B,CAA3B,GAA+BpE,IAAI,CAACS,IAAL,CAAU,CAAV,CAA/B,GAA8C,IAH1C;AAIVzB,QAAAA,YAAY,EAAEA,YAJJ;AAKVsE,QAAAA,SAAS,EAAEtD,IAAI,CAACqE;AALN,OAAd,EANgB,CAchB;;AACA,UAAIC,SAAS,GAAG,KAAK/F,KAAL,CAAWsF,KAAX,CAAiBU,QAAjB,CAA0BC,MAA1C;AACA,UAAIV,MAAM,GAAGH,WAAW,CAAC9D,KAAZ,CAAkByE,SAAlB,CAAb;;AACA,UAAI9G,CAAC,CAACiH,GAAF,CAAMX,MAAN,EAAc,UAAd,CAAJ,EAA+B;AAC3B,YAAIY,kBAAkB,GAAGhH,SAAS,CAAC4C,MAAV,GAAmB5C,SAAS,CAAC6C,QAAV,CAAmBoE,6BAAtC,GAAsEL,SAA/F;AACA7G,QAAAA,GAAG,CAACkD,IAAJ,CAAS,KAAT,EAAgB+D,kBAAhB,EACK9D,IADL,CACWC,QAAD,IAAc;AAChB;AACA,eAAKhC,QAAL,CAAc;AACVgD,YAAAA,YAAY,EAAEhB,QAAQ,CAACb,IAAT,CAAcwC;AADlB,WAAd,EAFgB,CAMhB;;AACA,cAAIV,KAAK,GAAGJ,MAAM,CAACC,CAAP,CAAS,qBAAT,CAAZ,CAPgB,CAQhB;;AACAG,UAAAA,KAAK,CAACC,EAAN,CAAS,OAAT,EAAkB,YAAY;AAC1BD,YAAAA,KAAK,CAACA,KAAN,CAAY,MAAZ;AACH,WAFD,EATgB,CAahB;;AACAA,UAAAA,KAAK,CAACA,KAAN,CAAY,MAAZ;AACH,SAhBL,EAiBKV,KAjBL,CAiBYqB,GAAD,IAAS;AACZnB,UAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,SAnBL;AAoBH;AACJ,KAzCL,EA0CKrB,KA1CL,CA0CYqB,GAAD,IAAS;AACZnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACH,KA5CL,EA6CKmC,OA7CL,CA6Ca,MAAM;AACX;AACA,WAAK/F,QAAL,CAAc;AACV0E,QAAAA,aAAa,EAAE;AADL,OAAd;AAGH,KAlDL;AAmDH;AAED;;;;;;;AAssB,EAAAA,MAAM,GAAG;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,WACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAEC,CAAC,IAAI,KAAKC,QAAL,CAAcD,CAAd,CAArB;AAAuC,MAAA,GAAG,EAAEE,CAAC,IAAI;AAAE,aAAKC,IAAL,GAAYD,CAAZ;AAAe,OAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACgB,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,QAAQ,EAAE,KAAKE,eAFnB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,WAAW,EAAC,OAJhB;AAKI,MAAA,SAAS,EAAC,cALd;AAMI,MAAA,WAAW,EAAE,CAAChH,QAAD,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,EASgB,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,QAAQ,EAAE,KAAKgH,eAFnB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,WAAW,EAAC,UAJhB;AAKI,MAAA,SAAS,EAAC,cALd;AAMI,MAAA,WAAW,EAAE,CAAChH,QAAD,EAAWC,SAAX,CANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAThB,EAiBgB;AAAQ,MAAA,SAAS,EAAC,8BAAlB;AAAiD,MAAA,IAAI,EAAC,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBhB,EAkBgB,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAEgH,QAAAA,OAAO,EAAE;AAAX,OAApB;AAAyC,MAAA,GAAG,EAAEH,CAAC,IAAI;AAAE,aAAKI,QAAL,GAAgBJ,CAAhB;AAAmB,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBhB,CADJ,CAqjcJ;AAocH;;AA3/B8C","sourcesContent":["import React, {Component} from 'react'\r\nimport '../assets/css/paytowallet.css'\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport api from '../utils/Api';\r\nimport apiConfig from '../config/ApiConfig';\r\nimport commonConfig from '../config/CommonConfig';\r\nimport Validate from \"../utils/Validate\";\r\n\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\n\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport Select from 'react-validation/build/select';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport {required, minLength, maxLength} from \"../utils/validateInput\";\r\n\r\nexport default class Paytowallet extends Component {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            balance: 0,\r\n            game: {},\r\n            cardsList: commonConfig.CardsList,\r\n            atmValuesList: commonConfig.ATMValuesList,\r\n            serverGroups: [],\r\n            serversList: [],\r\n            goldsList: [],\r\n            isDisableSelectServers: true,\r\n            payItem: {},\r\n            inLoadingPage: false,\r\n            inProcessing: false,\r\n            processingResult: {\r\n                status: null,\r\n                message: ''\r\n            },\r\n            errors: {},\r\n            chargeGameItem: {},\r\n            chargeGameResult: {},\r\n            rolesList: null,\r\n            modalContent: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On component did mount event\r\n     * @created 2020-03-18 LongTHk\r\n     */\r\n    componentDidMount() {\r\n        // get md5\r\n        let md5 = require('md5');\r\n        // get username\r\n        let username = JSON.parse(localStorage.getItem('user')).data.username;\r\n        // get query string\r\n        let queryString = require('query-string');\r\n\r\n        // set inLoadingPage status\r\n        this.setState({\r\n            inLoadingPage: true\r\n        });\r\n\r\n        // call api get page content\r\n        let slug = this.props.match.match.params.slug;\r\n        let sign = md5(username + apiConfig.jwtToken);\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getDetailGameToWallet + '?slug=' + slug + '&username=' + username + '&sign=' + sign;\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get return data\r\n                let data = response.data.data;\r\n                // spit servers list into server groups\r\n                let serverGroups = _.chunk(data.servers, 10);\r\n                // set state\r\n                this.setState({\r\n                    username: username,\r\n                    balance: data.balance,\r\n                    game: Object.keys(data).length > 0 ? data.game[0] : null,\r\n                    serverGroups: serverGroups,\r\n                    goldsList: data.golds\r\n                });\r\n\r\n                // call api check Charging ATM status\r\n                let strParams = this.props.match.location.search;\r\n                let params = queryString.parse(strParams);\r\n                if (_.has(params, 'trans_id')) {\r\n                    let endpointATMSuccess = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATMSuccess + strParams;\r\n                    api.call('GET', endpointATMSuccess)\r\n                        .then((response) => {\r\n                            // set atm response message\r\n                            this.setState({\r\n                                modalContent: response.data.messages\r\n                            });\r\n\r\n                            // create modal\r\n                            let modal = window.$('.modal-notification');\r\n                            // modal close action\r\n                            modal.on('click', function () {\r\n                                modal.modal('hide')\r\n                            });\r\n\r\n                            // show modal\r\n                            modal.modal('show');\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err)\r\n                        });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                // set inLoadingPage status\r\n                this.setState({\r\n                    inLoadingPage: false\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Action on server group changee\r\n     * @param event\r\n     * @crated 2020-03018 LongTHK\r\n     */\r\n    changeServerGroup = (event) => {\r\n        // get server group value\r\n        let serverGroupValue = event.target.value;\r\n\r\n        // load servers list base on group\r\n        if (serverGroupValue !== '') {\r\n            this.setState({\r\n                serversList: this.state.serverGroups[serverGroupValue],\r\n                isDisableSelectServers: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isDisableSelectServers: true\r\n            })\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle changing input data\r\n     * @param event\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                [name]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Get role name\r\n     * @param event\r\n     */\r\n    handleServerChanged = (event) => {\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // get params\r\n        let userId = JSON.parse(localStorage.getItem('user')).data.id;\r\n        let sign = md5(userId + apiConfig.jwtToken);\r\n        let serverId = event.target.value;\r\n\r\n        // define endpoint\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getRole +\r\n            '?server_id=' + serverId +\r\n            '&id_user=' + userId +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&sign=' + sign;\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set roles list\r\n                if (responseData.status) {\r\n                    // get roles list\r\n                    let rolesList = responseData.data.role;\r\n\r\n                    // set roles list\r\n                    this.setState({\r\n                        rolesList: rolesList\r\n                    });\r\n\r\n                    // set charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {\r\n                            serverId: serverId,\r\n                            roleId: rolesList[0].roleId\r\n                        }\r\n                    });\r\n                } else {\r\n                    // clear roles list\r\n                    this.setState({\r\n                        rolesList: []\r\n                    });\r\n\r\n                    // clear charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {}\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Open charge game modal\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    openModal = (event) => {\r\n        // get gold id\r\n        let goldId = window.$(event.target).data('gold-id');\r\n\r\n        if (window.$(event.target).data('amount') > this.state.balance) {\r\n            // set state\r\n            this.setState({\r\n                modalContent: 'Không đủ số dư trong tài khoản, hãy chọn mệnh giá thấp hơn hoặc nạp thêm tiền vào ví để tiếp tục giao dịch'\r\n            });\r\n            // create modal\r\n            let modal = window.$('.modal-notification');\r\n            // modal close action\r\n            modal.on('click', function () {\r\n                modal.modal('hide')\r\n            });\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        } else {\r\n            // get gold id\r\n            this.setState(prevState => ({\r\n                chargeGameItem: {\r\n                    ...prevState.chargeGameItem,\r\n                    goldId: goldId\r\n                }\r\n            }));\r\n\r\n            // create modal\r\n            let modal = window.$('.modal-confirm');\r\n            // modal close action\r\n            modal.on('hidden.bs.modal', function () {\r\n                this.setState({\r\n                    chargeGameResult: {}\r\n                })\r\n            }.bind(this));\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Action on change role\r\n     * @param event\r\n     */\r\n    changeRoleId = (event) => {\r\n        this.setState(prevState => ({\r\n            chargeGameItem: {\r\n                ...prevState,\r\n                roleId: event.target.value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Charge game\r\n     * @param event\r\n     */\r\n    chargeGame = (event) => {\r\n        // stop propagation\r\n        event.stopPropagation();\r\n\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // create end point\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.payToGame +\r\n            '?roleId=' + this.state.chargeGameItem.roleId +\r\n            '&goldId=' + this.state.chargeGameItem.goldId +\r\n            '&username=' + this.state.username +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&serverId=' + this.state.chargeGameItem.serverId +\r\n            '&sign=' + md5(this.state.username + apiConfig.jwtToken);\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set state\r\n                this.setState({\r\n                    chargeGameResult: {\r\n                        status: responseData.status,\r\n                        message: responseData.messages\r\n                    }\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log('err');\r\n            })\r\n    };\r\n\r\n    /**\r\n     * Change pay item\r\n     * @param payType\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    changePayItem = (payType) => {\r\n        switch (payType) {\r\n            case 'card':\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n                break;\r\n            case 'atm':\r\n                this.setState({\r\n                    payItem: {\r\n                        amount: '',\r\n                    }\r\n                });\r\n                break;\r\n            default :\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n        }\r\n\r\n        // push value to pay item\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                username: this.state.username,\r\n                productAgent: this.state.game.agent\r\n            }\r\n        }));\r\n\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n    };\r\n\r\n    // /**\r\n    //  * Pay by card\r\n    //  * @created 2020-03-19 LongTHk\r\n    //  */\r\n    // payByCard = async () => {\r\n    //     // reset error\r\n    //     this.setState({\r\n    //         errors: {}\r\n    //     });\r\n\r\n    //     if (await this.validatePayByCard()) {\r\n    //         // set inProcessing mode\r\n    //         this.setState({\r\n    //             inProcessing: true\r\n    //         });\r\n    //         // get md5\r\n    //         const md5 = require('md5');\r\n    //         // get pay item\r\n    //         const payItem = this.state.payItem;\r\n\r\n    //         // generate endpoint\r\n    //         const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeCard +\r\n    //             '?serial=' + payItem.serie +\r\n    //             '&code=' + payItem.number +\r\n    //             '&username=' + payItem.username +\r\n    //             '&productAgent=' + payItem.productAgent +\r\n    //             '&type=' + payItem.cardType +\r\n    //             '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n    //         // call api\r\n    //         api.call('GET', endPoint)\r\n    //             .then((response) => {\r\n    //                 // get response data\r\n    //                 let responseData = response.data;\r\n\r\n    //                 // set state\r\n    //                 if (responseData.status) {\r\n    //                     this.setState({\r\n    //                         balance: responseData.data.balance,\r\n    //                         processingResult: {\r\n    //                             status: true,\r\n    //                             message: responseData.messages\r\n    //                         }\r\n    //                     });\r\n    //                 } else {\r\n    //                     this.setState({\r\n    //                         processingResult: {\r\n    //                             status: false,\r\n    //                             message: responseData.messages\r\n    //                         }\r\n    //                     })\r\n    //                 }\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 console.log(err)\r\n    //             })\r\n    //             .finally(() => {\r\n    //                 // release inProcessing mode\r\n    //                 this.setState({\r\n    //                     inProcessing: false\r\n    //                 });\r\n    //             });\r\n    //     }\r\n    // };\r\n\r\n    // /**\r\n    //  * Pay by ATM\r\n    //  * @created 2020-03-19 LongTHk\r\n    //  */\r\n    // payByATM = async () => {\r\n    //     // reset error\r\n    //     this.setState({\r\n    //         errors: {}\r\n    //     });\r\n\r\n    //     if (await this.validatePayByATM()) {\r\n    //         // set inProcessing mode\r\n    //         this.setState({\r\n    //             inProcessing: true\r\n    //         });\r\n    //         // get md5\r\n    //         const md5 = require('md5');\r\n    //         // get pay item\r\n    //         const payItem = this.state.payItem;\r\n\r\n    //         // generate endpoint\r\n    //         const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATM +\r\n    //             '?username=' + payItem.username +\r\n    //             '&productAgent=' + payItem.productAgent +\r\n    //             '&amount=' + payItem.amount +\r\n    //             '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n    //         // call api\r\n    //         api.call('GET', endPoint)\r\n    //             .then((response) => {\r\n    //                 window.location.href = response.data.data.link;\r\n    //             })\r\n    //             .catch((err) => {\r\n    //                 // release inProcessing mode\r\n    //                 this.setState({\r\n    //                     inProcessing: false\r\n    //                 });\r\n    //                 console.log(err)\r\n    //             });\r\n    //     }\r\n    // };\r\n\r\n    // /**\r\n    //  * Validate Pay by card input\r\n    //  * @returns {Promise<boolean>}\r\n    //  * @created 2020-03-19 LongTHK\r\n    //  */\r\n    // validatePayByCard = async () => {\r\n    //     // define valid status\r\n    //     let isValid = true;\r\n    //     // define errors\r\n    //     let errors = {};\r\n\r\n    //     // check card type\r\n    //     if (Validate.isRequired(this.state.payItem.cardType)) {\r\n    //         errors.cardType = 'Vui lòng chọn loại thẻ';\r\n    //         isValid = false;\r\n    //     }\r\n    //     // check serie\r\n    //     if (Validate.isRequired(this.state.payItem.serie)) {\r\n    //         errors.serie = 'Vui lòng nhập số seri';\r\n    //         isValid = false;\r\n    //     }\r\n    //     if (Validate.maxLength(this.state.payItem.serie, 20)) {\r\n    //         errors.serie = 'Seri tối đa 20 ký tự';\r\n    //         isValid = false;\r\n    //     }\r\n    //     if (Validate.minLength(this.state.payItem.serie, 6)) {\r\n    //         errors.serie = 'Seri tối thiểu 6 ký tự';\r\n    //         isValid = false;\r\n    //     }\r\n    //     // check number\r\n    //     if (Validate.isRequired(this.state.payItem.number)) {\r\n    //         errors.number = 'Vui lòng nhập mã thẻ';\r\n    //         isValid = false;\r\n    //     }\r\n    //     if (Validate.maxLength(this.state.payItem.number, 20)) {\r\n    //         errors.number = 'Mã thẻ tối đa 20 ký tự';\r\n    //         isValid = false;\r\n    //     }\r\n    //     if (Validate.minLength(this.state.payItem.number, 6)) {\r\n    //         errors.number = 'Mã thẻ tối thiểu 6 ký tự';\r\n    //         isValid = false;\r\n    //     }\r\n    //     // set errors\r\n    //     await this.setState({\r\n    //         errors: errors\r\n    //     });\r\n\r\n    //     return isValid;\r\n    // };\r\n\r\n    // /**\r\n    //  * Validate Pay by ATM input\r\n    //  * @returns {Promise<boolean>}\r\n    //  * @created 2020-03-19 LongTHk\r\n    //  */\r\n    // validatePayByATM = async () => {\r\n    //     // define valid status\r\n    //     let isValid = true;\r\n    //     // define errors\r\n    //     let errors = {};\r\n\r\n    //     // check amount\r\n    //     if (Validate.isRequired(this.state.payItem.amount)) {\r\n    //         errors.amount = 'Vui lòng chọn số tiền nạp';\r\n    //         isValid = false;\r\n    //     }\r\n\r\n    //     // set errors\r\n    //     await this.setState({\r\n    //         errors: errors\r\n    //     });\r\n\r\n    //     return isValid;\r\n    // };\r\n\r\n    /**\r\n     * Render layout\r\n     * @returns {*}\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    render() {\r\n        /**\r\n         * Loading page animation\r\n         */\r\n        // if (this.state.inLoadingPage) {\r\n        //     return (\r\n        //         <div style={{textAlign: \"center\"}}>\r\n        //             <div className=\"lds-dual-ring\"></div>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n\r\n        // /**\r\n        //  * Render in case game not found\r\n        //  */\r\n        // if (this.state.game === null || this.state.game === undefined) {\r\n        //     return (\r\n        //         <div>\r\n        //             <h1 className='text-center'>Không tìm thấy game</h1>\r\n        //         </div>\r\n        //     )\r\n        // }\r\n\r\n        /**\r\n         * Page render\r\n         */\r\n        return (\r\n            <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c }}>\r\n                            <Input \r\n                                name=\"email\" \r\n                                onChange={this.onChangeHandler}\r\n                                type=\"text\" \r\n                                placeholder=\"Email\"\r\n                                className=\"form-control\" \r\n                                validations={[required]}\r\n                            />\r\n                            <Input \r\n                                name=\"password\" \r\n                                onChange={this.onChangeHandler}\r\n                                type=\"password\" \r\n                                placeholder=\"Password\"\r\n                                className=\"form-control\" \r\n                                validations={[required, minLength]}\r\n                            />\r\n                            <button className=\"btn btn-info btn-block login\" type=\"submit\">Login</button>\r\n                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\r\n                        </Form>\r\n            // <div className=\"container paytowallet_container\">\r\n            //     <div className=\"row box\">\r\n            //         <PayBreadcrumb match={this.props.match.match}></PayBreadcrumb>\r\n            //         {/* <form method=\"POST\" name=\"napgold\" id=\"napgold\" noValidate=\"novalidate\"> */}\r\n            //             <h2>{this.state.game.name}</h2>\r\n            //             <div className=\"qa-message-list\" id=\"wallmessages\">\r\n            //                 <div className=\"message-item\" id=\"accRole\">\r\n            //                     <div className=\"message-inner\">\r\n            //                         <div className=\"message-head clearfix handle-acc-role\">\r\n            //                             <div className=\"user-detail\">\r\n            //                                 <h5 className=\"handle\">Tài khoản : {this.state.username}</h5>\r\n            //                                 <h6 className=\"handle\">Số dư : {this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</h6>\r\n            //                                 <input type=\"hidden\" defaultValue={0} name=\"balance\"/>\r\n            //                                 <input type=\"hidden\" defaultValue={771866} name=\"id_user\" id=\"id_user\"/>\r\n            //                                 <input type=\"hidden\" defaultValue={0} name=\"amount\" id=\"amount\"/>\r\n            //                                 <input type=\"hidden\" defaultValue={0} name=\"gold_id\" id=\"gold_id\"/>\r\n            //                                 <input type=\"hidden\" defaultValue name=\"theThang\" id=\"theThang\"/>\r\n            //                             </div>\r\n            //                         </div>\r\n            //                     </div>\r\n            //                 </div>\r\n            //                 <div className=\"message-item\" id=\"accType\">\r\n            //                     <div className=\"message-inner\">\r\n            //                         <div className=\"message-head clearfix\">\r\n            //                             <div className=\"user-detail\">\r\n            //                                 <h5 className=\"handle\">Chọn phương thức để nạp tiền vào ví</h5>\r\n            //                             </div>\r\n            //                         </div>\r\n            //                         <div className=\"qa-message-content\">\r\n            //                             <div className=\"collapse-group\" id=\"accordion\">\r\n            //                                 <div className=\"panel panel-default\">\r\n            //                                     <div className=\"panel-heading\" role=\"tab\" id=\"headingOne\">\r\n            //                                         <h4 className=\"panel-title\">\r\n            //                                             <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseOne\"\r\n            //                                                onClick={this.changePayItem.bind(window.event, 'card')}\r\n            //                                                data-parent=\"#accordion\"\r\n            //                                                aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n            //                                                className=\"trigger collapsed\">\r\n            //                                                 Thẻ cào\r\n            //                                             </a>\r\n            //                                         </h4>\r\n            //                                     </div>\r\n            //                                     <div id=\"collapseOne\" className=\"panel-collapse collapse\"\r\n            //                                          role=\"tabpanel\"\r\n            //                                          aria-labelledby=\"headingOne\" data-id=\"Thẻ cào\">\r\n            //                                         <div className=\"panel-body\">\r\n            //                                             <div className=\"tab-pane active\" id=\"tab_card_pay\">\r\n\r\n\r\n            //                                             <Form onSubmit={e => this.onSubmit(e)} ref={c => { this.form = c }}>\r\n            //                                                 {/* <Input \r\n            //                                                     name=\"email\" \r\n            //                                                     onChange={this.handleChange}\r\n            //                                                     type=\"text\" \r\n            //                                                     placeholder=\"Email\"\r\n            //                                                     className=\"form-control\" \r\n            //                                                     validations={[required]}\r\n            //                                                 /> */}\r\n            //                                                 {/* <Input \r\n            //                                                     name=\"password\" \r\n            //                                                     onChange={this.handleChange}\r\n            //                                                     type=\"password\" \r\n            //                                                     placeholder=\"Password\"\r\n            //                                                     className=\"form-control\" \r\n            //                                                     validations={[required]}\r\n            //                                                 /> */}\r\n            //                                                 <button className=\"btn btn-info btn-block login\" type=\"submit\">Login</button>\r\n            //                                                 <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn = c }} />\r\n            //                                             </Form>\r\n\r\n\r\n\r\n\r\n            //                                                 <label htmlFor=\"in_type\"\r\n            //                                                        className=\"col-sm-12 controll-label\">\r\n            //                                                     <span>Loại thẻ</span>\r\n            //                                                     {\r\n            //                                                         this.state.errors.hasOwnProperty('cardType') &&\r\n            //                                                         <span\r\n            //                                                             className=\"input-error\">{this.state.errors.cardType}</span>\r\n            //                                                     }\r\n            //                                                     <select name=\"cardType\" className=\"form-control valid\"\r\n            //                                                             aria-invalid=\"false\"\r\n            //                                                             onChange={this.handleChange}\r\n            //                                                     >\r\n            //                                                         <option value=\"\">Chọn loại thẻ</option>\r\n            //                                                         {\r\n            //                                                             _.map(this.state.cardsList, (itemValue, itemIndex) =>\r\n            //                                                                 <option key={itemIndex}\r\n            //                                                                         value={itemValue.type}>{itemValue.name}</option>\r\n            //                                                             )\r\n            //                                                         }\r\n            //                                                     </select>\r\n            //                                                 </label>\r\n            //                                                 <label htmlFor=\"in_serie\"\r\n            //                                                        className=\"col-sm-12 controll-label\">\r\n            //                                                     <span>Số serie</span>\r\n            //                                                     {\r\n            //                                                         this.state.errors.hasOwnProperty('serie') &&\r\n            //                                                         <span\r\n            //                                                             className=\"input-error\">{this.state.errors.serie}</span>\r\n            //                                                     }\r\n            //                                                     <input type=\"text\" name=\"serie\"\r\n            //                                                            className=\"form-control\"\r\n            //                                                            onChange={this.handleChange}\r\n            //                                                            />\r\n            //                                                 </label>\r\n            //                                                 <label htmlFor=\"in_pin\"\r\n            //                                                        className=\"col-sm-12 controll-label\">\r\n            //                                                     <span>Mã thẻ</span>\r\n            //                                                     {\r\n            //                                                         this.state.errors.hasOwnProperty('number') &&\r\n            //                                                         <span\r\n            //                                                             className=\"input-error\">{this.state.errors.number}</span>\r\n            //                                                     }\r\n            //                                                     <input type=\"text\" name=\"number\"\r\n            //                                                            className=\"form-control\"\r\n            //                                                            onChange={this.handleChange}\r\n            //                                                            />\r\n            //                                                 </label>\r\n            //                                                 <button className=\"btn btn-info\" id=\"btnXacnhan\"\r\n            //                                                         type={\"button\"}\r\n            //                                                         data-id=\"the-cao\"\r\n            //                                                         onClick={this.payByCard}\r\n            //                                                         disabled={this.state.inProcessing}>\r\n            //                                                     {\r\n            //                                                         !this.state.inProcessing &&\r\n            //                                                         <span>Thanh toán</span>\r\n            //                                                     }\r\n            //                                                     {\r\n            //                                                         this.state.inProcessing &&\r\n            //                                                         <div className={'dot-loader'}>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                         </div>\r\n            //                                                     }\r\n            //                                                 </button>\r\n            //                                                 {\r\n            //                                                     (\r\n            //                                                         this.state.processingResult.status !== null &&\r\n            //                                                         !this.state.processingResult.status &&\r\n            //                                                         <span\r\n            //                                                             className=\"message-alert\">{this.state.processingResult.message}</span>\r\n            //                                                     ) ||\r\n            //                                                     (\r\n            //                                                         this.state.processingResult.status !== null &&\r\n            //                                                         this.state.processingResult.status &&\r\n            //                                                         <span\r\n            //                                                             className=\"message-success\">{this.state.processingResult.message}</span>\r\n            //                                                     )\r\n            //                                                 }\r\n            //                                                 <div className=\"clearfix\"/>\r\n            //                                             </div>\r\n            //                                         </div>\r\n            //                                     </div>\r\n            //                                 </div>\r\n            //                                 <div className=\"panel panel-default\">\r\n            //                                     <div className=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n            //                                         <h4 className=\"panel-title\">\r\n            //                                             <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseTwo\"\r\n            //                                                data-parent=\"#accordion\"\r\n            //                                                onClick={this.changePayItem.bind(window.event, 'atm')}\r\n            //                                                aria-expanded=\"true\" aria-controls=\"collapseTwo\"\r\n            //                                                className=\"trigger collapsed\">\r\n            //                                                 Thẻ ATM/Nội địa/NAPAS\r\n            //                                             </a>\r\n            //                                         </h4>\r\n            //                                     </div>\r\n            //                                     <div id=\"collapseTwo\" className=\"panel-collapse collapse\"\r\n            //                                          role=\"tabpanel\"\r\n            //                                          aria-labelledby=\"headingTwo\" data-id=\"Thẻ ATM/Nội địa/NAPAS\">\r\n            //                                         <div className=\"panel-body\">\r\n            //                                             <div id=\"tab_card_pay\">\r\n            //                                                 <label htmlFor=\"amount_pay\"\r\n            //                                                        className=\"col-sm-12 controll-label\">\r\n            //                                                     <span>Số tiền thanh toán (VNĐ)</span>\r\n            //                                                     {\r\n            //                                                         this.state.errors.hasOwnProperty('amount') &&\r\n            //                                                         <span\r\n            //                                                             className=\"input-error\">{this.state.errors.amount}</span>\r\n            //                                                     }\r\n            //                                                     <select name=\"amount\" className=\"form-control\"\r\n            //                                                             onChange={this.handleChange}>\r\n            //                                                         <option value=\"\">Chọn số tiền</option>\r\n            //                                                         {\r\n            //                                                             _.map(this.state.atmValuesList, (itemValue, itemIndex) =>\r\n            //                                                                 <option key={itemIndex}\r\n            //                                                                         value={itemValue.value}>{itemValue.displayText}</option>\r\n            //                                                             )\r\n            //                                                         }\r\n            //                                                     </select>\r\n            //                                                 </label>\r\n            //                                                 <button className=\"btn btn-info\" id=\"btnXacnhan\"\r\n            //                                                         type={\"button\"} data-id=\"the-atm\"\r\n            //                                                         onClick={this.payByATM}\r\n            //                                                         disabled={this.state.inProcessing}>\r\n            //                                                     {\r\n            //                                                         !this.state.inProcessing &&\r\n            //                                                         <span>Thanh toán</span>\r\n            //                                                     }\r\n            //                                                     {\r\n            //                                                         this.state.inProcessing &&\r\n            //                                                         <div className={'dot-loader'}>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                             <div></div>\r\n            //                                                         </div>\r\n            //                                                     }\r\n            //                                                 </button>\r\n            //                                             </div>\r\n            //                                         </div>\r\n            //                                     </div>\r\n            //                                 </div>\r\n            //                             </div>\r\n            //                         </div>\r\n            //                         <div className=\"message-alert\">NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM =\r\n            //                             100% (Thẻ HPCode có\r\n            //                             bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\r\n            //                         </div>\r\n            //                     </div>\r\n            //                 </div>\r\n            //                 <div className=\"message-item\" id=\"accGetRole\">\r\n            //                     <div className=\"message-inner\">\r\n            //                         <div className=\"message-head clearfix\">\r\n            //                             <div className=\"user-detail\">\r\n            //                                 <h5 className=\"handle\">Chọn server để nạp tiền vào game</h5>\r\n            //                             </div>\r\n            //                         </div>\r\n            //                         <div className=\"qa-message-content content_server\">\r\n            //                             <div className=\"divserverList\">\r\n            //                                 <input type=\"hidden\" name=\"agent\" id=\"agent\" defaultValue=\"m002\"/>\r\n            //                                 <label htmlFor=\"server_group\" className=\"col-sm-12 controll-label\">\r\n            //                                     Chọn cụm máy chủ:\r\n            //                                 </label>\r\n            //                                 <select name=\"server_group\" className=\"form-control \"\r\n            //                                         id=\"server_group\"\r\n            //                                         onChange={this.changeServerGroup}\r\n            //                                 >\r\n            //                                     <option value=\"\">Chọn group server</option>\r\n            //                                     {\r\n            //                                         _.map(this.state.serverGroups, (serverGroupValue, serverGroupIndex) =>\r\n            //                                             <option key={serverGroupIndex} value={serverGroupIndex}>\r\n            //                                                 Cụm máy\r\n            //                                                 chủ {serverGroupIndex * 10 + 1} - {serverGroupIndex * 10 + 10}\r\n            //                                             </option>\r\n            //                                         )\r\n            //                                     }\r\n            //                                 </select>\r\n            //                                 <label htmlFor=\"server_list\" className=\"col-sm-12 controll-label\"\r\n            //                                        style={{width: 'auto'}}>\r\n            //                                     Chọn server:\r\n            //                                 </label>\r\n            //                                 <select name=\"server_id\" className=\"form-control \"\r\n            //                                         id=\"server_list\"\r\n            //                                         disabled={this.state.isDisableSelectServers}\r\n            //                                         onChange={this.handleServerChanged}\r\n            //                                 >\r\n            //                                     <option value=\"\">Chọn server</option>\r\n            //                                     {\r\n            //                                         _.map(this.state.serversList, (serverValue, serverIndex) =>\r\n            //                                             <option key={serverIndex} value={serverValue.server_id}>\r\n            //                                                 {serverValue.server_name}\r\n            //                                             </option>\r\n            //                                         )\r\n            //                                     }\r\n            //                                 </select>\r\n            //                             </div>\r\n            //                             <div id=\"appentHtml\">\r\n            //                                 <label htmlFor=\"server_list\"\r\n            //                                        className=\"col-sm-12 controll-label\"\r\n            //                                        style={{width: 'auto'}}>&nbsp;\r\n            //                                 </label>\r\n            //                                 {\r\n            //                                     this.state.rolesList !== null &&\r\n            //                                     this.state.rolesList.length > 0 &&\r\n            //                                     <div>\r\n            //                                         <select name=\"rolesList\" className=\"form-control \"\r\n            //                                                 id=\"server_list\" onChange={this.changeRoleId}>\r\n            //                                             {\r\n            //                                                 _.map(this.state.rolesList, (roleValue, roleIndex) =>\r\n            //                                                     <option key={roleIndex}\r\n            //                                                             value={roleValue.roleId}>{roleValue.roleName}</option>\r\n            //                                                 )\r\n            //                                             }\r\n            //                                         </select>\r\n            //                                     </div>\r\n            //                                 }\r\n            //                                 {\r\n            //                                     this.state.rolesList !== null &&\r\n            //                                     this.state.rolesList.length === 0 &&\r\n            //                                     <div className=\"role-name\">\r\n            //                                         Không tìm thấy nhân vật game\r\n            //                                     </div>\r\n            //                                 }\r\n            //                             </div>\r\n            //                             <div className=\"clearfix\"/>\r\n            //                         </div>\r\n            //                     </div>\r\n            //                 </div>\r\n            //                 {\r\n            //                     this.state.rolesList !== null &&\r\n            //                     this.state.rolesList.length > 0 &&\r\n            //                     <div className=\"message-item\" id=\"accRang\">\r\n            //                         <div className=\"message-inner\">\r\n            //                             <div className=\"message-head clearfix\">\r\n            //                                 <div className=\"user-detail\">\r\n            //                                     <h5 className=\"handle\">Chọn gói vật phẩm</h5>\r\n            //                                     <p className=\"tab\" id=\"coingold\">Gói Nguyên Bảo</p>\r\n            //                                     <p className=\"tab\" id=\"coingift\">Gói Quà Đặc Biệt</p>\r\n            //                                 </div>\r\n            //                             </div>\r\n            //                             <div className=\"qa-message-content\">\r\n            //                                 <div className=\"form-group resultCoin\">\r\n            //                                     <div id=\"showcoingold\">\r\n            //                                         {\r\n            //                                             _.map(this.state.goldsList, (goldItemValue, goldItemIndex) =>\r\n            //                                                 <div className=\"gold-item\" key={goldItemIndex}>\r\n            //                                                     <img\r\n            //                                                         src={commonConfig.assetDomain + goldItemValue.image}\r\n            //                                                         data-amount={goldItemValue.amount}\r\n            //                                                         data-gold-id={goldItemValue.id}\r\n            //                                                         onClick={this.openModal}\r\n            //                                                     />\r\n            //                                                 </div>\r\n            //                                             )\r\n            //                                         }\r\n            //                                     </div>\r\n            //                                     <div id=\"showcoingift\"/>\r\n            //                                 </div>\r\n            //                                 <div className=\"clearfix\"/>\r\n            //                             </div>\r\n            //                         </div>\r\n            //                     </div>\r\n            //                 }\r\n            //                 <div id=\"myModal\" className=\"modal\">\r\n            //                     <div className=\"modal-content clearfix\">\r\n            //                         <h1>Xác nhận giao dịch</h1>\r\n            //                         <input type=\"submit\" name=\"submit\" id=\"submitbutton\"\r\n            //                                className=\"col-sm-3 btn btn-primary\"\r\n            //                                defaultValue=\"Thanh toán\"/>\r\n            //                         <div className=\"clearfix\"/>\r\n            //                         <span className=\"close btn-danger\">Chấp nhận</span>\r\n            //                     </div>\r\n            //                 </div>\r\n            //             </div>\r\n            //         {/* </form> */}\r\n            //     </div>\r\n\r\n            //     <div className=\"modal modal-notification fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n            //         <div className=\"modal-dialog\" role=\"document\">\r\n            //             <div className=\"modal-content\">\r\n            //                 <div className=\"modal-body\">\r\n            //                     <p className={\"text-center\"}>{this.state.modalContent}</p>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n\r\n            //     <div className=\"modal modal-confirm fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n            //         <div className=\"modal-dialog\" role=\"document\">\r\n            //             <div className=\"modal-content\">\r\n            //                 {\r\n            //                     Object.keys(this.state.chargeGameItem).length > 0 &&\r\n            //                     <div className=\"modal-body\">\r\n            //                         <p>\r\n            //                             <b>Server:</b>&nbsp;\r\n            //                             {\r\n            //                                 this.state.serversList[_.findIndex(this.state.serversList, function (item) {\r\n            //                                     return item.server_id === this.state.chargeGameItem.serverId\r\n            //                                 }.bind(this))].server_name\r\n            //                             }\r\n            //                         </p>\r\n            //                         {\r\n            //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n            //                             <p>\r\n            //                                 <b>Gói nạp:</b>&nbsp;\r\n            //                                 {\r\n            //                                     this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n            //                                         return item.id === this.state.chargeGameItem.goldId\r\n            //                                     }.bind(this))].gold\r\n            //                                 }\r\n            //                             </p>\r\n            //                         }\r\n            //                         <p>\r\n            //                             <b>Số dư hiện tại:</b>&nbsp;{ this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'}) }\r\n            //                         </p>\r\n            //                         {\r\n            //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n            //                             <p>\r\n            //                                 <b>Số tiền cần thành toán:</b>&nbsp;\r\n            //                                 {\r\n            //                                     this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n            //                                         return item.id === this.state.chargeGameItem.goldId\r\n            //                                     }.bind(this))].amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n            //                                 }\r\n            //                             </p>\r\n            //                         }\r\n            //                         {\r\n            //                             this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n            //                             <p>\r\n            //                                 <b>Số dư còn lại:</b>&nbsp;\r\n            //                                 {\r\n            //                                     (this.state.balance - this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n            //                                         return item.id === this.state.chargeGameItem.goldId\r\n            //                                     }.bind(this))].amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n            //                                 }\r\n            //                             </p>\r\n            //                         }\r\n            //                     </div>\r\n            //                 }\r\n            //                 <div className=\"modal-footer\">\r\n            //                     <div\r\n            //                         className={(this.state.chargeGameResult.status !== 0) ? 'text-center text-success' : 'text-center text-danger'}>\r\n            //                         {this.state.chargeGameResult.message}\r\n            //                     </div>\r\n            //                     <button type={\"button\"} className=\"btn btn-primary\" onClick={this.chargeGame}>Nạp vào\r\n            //                         game\r\n            //                     </button>\r\n            //                     <button type={\"button\"} className=\"btn btn-danger\" data-dismiss=\"modal\">Đóng</button>\r\n            //                 </div>\r\n            //             </div>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n        \r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}