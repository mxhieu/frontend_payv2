{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\myapp\\\\src\\\\components\\\\FacebookLogin.js\";\nimport React, { Component } from 'react';\nimport SocialConfig from '../config/SocialConfig';\nexport default class FacebookLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.testAPI = () => {\n      console.log('Welcome!  Fetching your information.... ');\n      window.FB.api('/me', function (response) {\n        console.log('Successful login for: ' + response.name);\n        console.log('Thanks for logging in, ' + response.name + '!');\n      });\n    };\n\n    this.statusChangeCallback = response => {\n      console.log(response); // The response object is returned with a status field that lets the\n      // app know the current login status of the person.\n      // Full docs on the response object can be found in the documentation\n      // for FB.getLoginStatus().\n\n      if (response.status === 'connected') {\n        // Logged into your app and Facebook.\n        this.testAPI();\n      } else if (response.status === 'not_authorized') {\n        // The person is logged into Facebook, but not your app.\n        console.log('Please log ' + 'into this app.');\n      } else {\n        // The person is not logged into Facebook, so we're not sure if\n        // they are logged into this app or not.\n        console.log('Please log ' + 'into Facebook.');\n      }\n    };\n\n    this.handleClick = e => {\n      e.preventDefault();\n      window.FB.login(this.checkLoginState());\n    };\n  }\n\n  componentDidMount() {\n    window.fbAsyncInit = function () {\n      window.FB.init({\n        appId: SocialConfig.fb.app_id,\n        cookie: true,\n        // enable cookies to allow the server to access\n        // the session\n        xfbml: true,\n        // parse social plugins on this page\n        version: 'v6.0' // use version 2.1\n\n      }); // These three cases are handled in the callback function.\n\n      window.FB.getLoginStatus(function (response) {\n        this.statusChangeCallback(response);\n      }.bind(this));\n    }.bind(this); // Load the SDK asynchronously\n\n\n    (function (d, s, id) {\n      var js,\n          fjs = d.getElementsByTagName(s)[0];\n      if (d.getElementById(id)) return;\n      js = d.createElement(s);\n      js.id = id;\n      js.src = \"//connect.facebook.net/en_US/sdk.js\";\n      fjs.parentNode.insertBefore(js, fjs);\n    })(document, 'script', 'facebook-jssdk');\n  }\n\n  // This function is called when someone finishes with the Login\n  // Button.  See the onlogin handler attached to it in the sample\n  // code below.\n  checkLoginState() {\n    window.FB.getLoginStatus(function (response) {\n      this.statusChangeCallback(response);\n    }.bind(this));\n  }\n\n  render() {\n    return React.createElement(\"a\", {\n      href: \"/#\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row-login\",\n      id: \"btnFacebook\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-facebook\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"\\u0110\\u0103ng nh\\u1EADp b\\u1EB1ng Facebook\")));\n  }\n\n}","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/components/FacebookLogin.js"],"names":["React","Component","SocialConfig","FacebookLogin","constructor","props","testAPI","console","log","window","FB","api","response","name","statusChangeCallback","status","handleClick","e","preventDefault","login","checkLoginState","componentDidMount","fbAsyncInit","init","appId","fb","app_id","cookie","xfbml","version","getLoginStatus","bind","d","s","id","js","fjs","getElementsByTagName","getElementById","createElement","src","parentNode","insertBefore","document","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport SocialConfig from '../config/SocialConfig';\r\n\r\nexport default class FacebookLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: SocialConfig.fb.app_id,\r\n                cookie: true,  // enable cookies to allow the server to access\r\n                // the session\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v6.0' // use version 2.1\r\n            });\r\n\r\n            // These three cases are handled in the callback function.\r\n            window.FB.getLoginStatus(function (response) {\r\n                this.statusChangeCallback(response);\r\n            }.bind(this));\r\n        }.bind(this);\r\n\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    testAPI = () => {\r\n        console.log('Welcome!  Fetching your information.... ');\r\n        window.FB.api('/me', function (response) {\r\n            console.log('Successful login for: ' + response.name);\r\n            console.log('Thanks for logging in, ' + response.name + '!');\r\n        });\r\n    }\r\n\r\n    // This is called with the results from from FB.getLoginStatus().\r\n    statusChangeCallback = (response) => {\r\n        console.log(response);\r\n        // The response object is returned with a status field that lets the\r\n        // app know the current login status of the person.\r\n        // Full docs on the response object can be found in the documentation\r\n        // for FB.getLoginStatus().\r\n        if (response.status === 'connected') {\r\n            // Logged into your app and Facebook.\r\n            this.testAPI();\r\n        } else if (response.status === 'not_authorized') {\r\n            // The person is logged into Facebook, but not your app.\r\n            console.log('Please log ' + 'into this app.');\r\n        } else {\r\n            // The person is not logged into Facebook, so we're not sure if\r\n            // they are logged into this app or not.\r\n            console.log('Please log ' + 'into Facebook.');\r\n        }\r\n    }\r\n\r\n    // This function is called when someone finishes with the Login\r\n    // Button.  See the onlogin handler attached to it in the sample\r\n    // code below.\r\n    checkLoginState() {\r\n        window.FB.getLoginStatus(function (response) {\r\n            this.statusChangeCallback(response);\r\n        }.bind(this));\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();\r\n        window.FB.login(this.checkLoginState());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"/#\" onClick={this.handleClick}>\r\n                <div className=\"row-login\" id=\"btnFacebook\">\r\n                    <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n                    <p>Đăng nhập bằng Facebook</p>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}