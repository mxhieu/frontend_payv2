{"version":3,"sources":["serviceWorker.js","actionTypes/login.actiontypes.js","config/ApiConfig.js","utils/Api.js","actionTypes/isloading.actiontypes.js","actions/isloading.actions.js","actions/login.actions.js","actionTypes/post.actiontypes.js","actions/post.actions.js","config/CommonConfig.js","components/layout/Header.js","components/layout/Footer.js","actionTypes/game.actiontypes.js","actions/games.actions.js","components/layout/Games.js","actionTypes/slider.actiontypes.js","actions/slider.actions.js","components/layout/MainSlider.js","pages/homepage/Homepage.js","utils/Validate.js","config/SocialConfig.js","components/FacebookLogin.js","components/GoogleLogin.js","components/AppleLogin.js","components/Login.js","pages/login/Loginpage.js","components/Detail.js","pages/detailpage/Detailpage.js","actionTypes/payment.actiontypes.js","actions/payment.actions.js","components/Paytogame.js","pages/paymentpage/PayToGamePage.js","components/PayBreadcrumb.js","components/Paytowallet.js","pages/paymentpage/PayToWalletPage.js","actionTypes/history.actiontypes.js","actions/history.actions.js","components/HistoryPayFilter.js","components/PayToGameHistory.js","pages/paymentpage/HistoryPayToGamePage.js","components/PayToWalletHistory.js","pages/paymentpage/HistoryPayToWalletPage.js","pages/PageNotFound.js","components/AppleLoginCallback.js","routes.js","components/PrivateRoutes.js","App.js","reducers/game.reducer.js","reducers/slider.reducer.js","reducers/login.reducer.js","reducers/posts.reducer.js","reducers/payment.reducer.js","reducers/isloading.reducer.js","reducers/history.reducer.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","loginActionTypes","LOGIN_RESQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGIN_FACEBOOK","LOGIN_GOOGLE","LOGIN_APPLE","apiConfig","login","loginFb","loginGg","loginApple","getSlider","getPosts","getDetailPost","getGame","getDetailGameToGame","chargeCard","getRole","chargeAtm","getDetailGameToWallet","paymentWalletChargeCard","paymentWalletChargeATM","paymentWalletChargeATMSuccess","getCardHistory","getPayToGameHistory","payToGame","contentJson","Api","method","url","body","header","ApiConfig","axios","data","isLoadingActionTypes","SHOW_LOADING","HIDE_LOADING","isLoadingActions","dispatch","showLoaderRequest","hideLoaderRequest","type","loginAction","username","password","endpoint","domain","a","isLoading","showLoader","call","then","result","status","success","failure","hideLoader","accessToken","res","token_for_business","loginFacebook","bussinessToken","email","sub","postActionTypes","GET_ALL_POST","GET_DETAIL_POST","postActions","getAllPost","slug","CommonConfig","name","value","displayText","Header","logout","e","preventDefault","props","isLogged","userLogout","reload","this","postsReducer","rightTopBar","to","className","href","data-toggle","role","aria-haspopup","aria-expanded","linkChangePassword","linkAccountInfo","onClick","postsElement","listPost","length","map","val","index","key","title","data-target","id","Component","connect","state","loginReducer","postReducer","postAction","getAllPostRequest","Footer","Fragment","style","padding","gameActionTypes","GET_ALL_GAME","GET_DETAIL_GAME_TO_GAME","GET_DETAIL_GAME_TO_WALLET","gameActions","getAll","productId","getAllRequest","Games","getGameList","gamesReducer","gameElemnt","gameItem","payment_type","src","assetDomain","avatar","alt","target","rel","url_redirect","sliderActionTypes","GET_ALL","sliderActions","MainSlider","sliders","loop","items","link","image","sliderReducer","Homepage","Validate","trim","min","max","SocialConfig","app_id","redirect_uri","app_secret","client_id","redirect_url","FacebookLogin","callApi","token","facebookLogin","handleClick","FB","getLoginStatus","response","fbAsyncInit","init","appId","fb","false","xfbml","version","Event","subscribe","authResponse","setState","bind","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","document","aria-hidden","loginFacebookRequest","GoogleLogin","prepareLoginButton","auth2","attachClickHandler","refs","googleLoginBtn","googleUser","profile","getBasicProfile","getEmail","googleLogin","onHandleClick","load","google","cookiepolicy","scope","ref","loginGoogle","AppleLogin","clientId","apple","redirectURI","responseType","responseMode","designProp","height","width","color","border","border_radius","scale","locale","Login","handleChange","event","checked","handleSubmit","handleValidate","userlogin","errors","isValid","isRequired","push","maxLength","minLength","aria-label","aria-current","noValidate","onSubmit","htmlFor","onChange","disabled","isLoadingReducer","linkForgetPassword","linkRegister","error","messages","Loginpage","Detail","postDetail","prevProps","detailPost","created_at","dangerouslySetInnerHTML","__html","content","getPostDetailRequest","Detailpage","params","paymentActionTypes","CHARGE_CARD","CHARGE_ATM","GET_USER_ROLE","CHARGE_ATM_SUCCESS","paymentActions","sign","require","md5","jwtToken","txtSerie","txtCardPin","gameInfo","agent","sltCardType","sltServer","isLoadingAction","sltAmount","sltRoleId","serverId","userId","getUserRole","paramStr","console","log","rsChargeAtmSuccess","Paytogame","handlePayByCard","validatePayCard","handlePayByATM","validatePayAtm","errorsCard","errorSelectServer","errorSelectRole","errorsAtm","hanleGetRole","JSON","parse","localStorage","getItem","userRole","chargeSuccessMSG","queryString","strParams","search","_","chargeAtmSuccess","paymentReducer","modalATMReport","$","modal","on","previousProps","previousState","Object","keys","gameData","hasOwnProperty","chargeAtmMSG","undefined","server","detail","serverElement","server_id","server_name","onBlur","roleId","roleName","data-parent","marginTop","tabIndex","data-backdrop","nextProps","prevState","getDetailGameToGameRequest","chargeCardRequest","chargeAtmRequest","getUserRoleRequest","withRouter","PayToGamePage","PayBreadcrumb","payUrl","Paytowallet","changeServerGroup","serverGroupValue","serversList","serverGroups","isDisableSelectServers","payItem","handleServerChanged","endPoint","game","api","responseData","rolesList","chargeGameItem","catch","openModal","goldId","balance","modalContent","chargeGameResult","changeRoleId","chargeGame","stopPropagation","message","err","changePayItem","payType","cardType","serie","number","amount","productAgent","payByCard","validatePayByCard","inProcessing","processingResult","finally","payByATM","validatePayByATM","cardsList","commonConfig","CardsList","atmValuesList","ATMValuesList","goldsList","inLoadingPage","servers","golds","endpointATMSuccess","textAlign","toLocaleString","currency","defaultValue","aria-controls","aria-labelledby","data-id","aria-invalid","itemValue","itemIndex","serverGroupIndex","serverValue","serverIndex","roleValue","roleIndex","goldItemValue","goldItemIndex","data-amount","data-gold-id","item","gold","data-dismiss","PaytowalletPage","historyActionTypes","GET_CARD_HISTORY","GET_PAY_TO_GAME_HISTORY","historyActions","formDate","toDate","isloadingAction","HistoryPayFilter","handleEvent","picker","inputStart","startDate","format","inputFinish","endDate","handleFilter","includes","filterPayToGameHistory","sltGame","filterCardHistory","date","Date","currentDate","getDate","getMonth","getFullYear","currentDateRequest","historyReducer","payToGameHistory","setData","cardHistory","gameElement","autoApply","autoUpdateInput","onEvent","readOnly","getCardHistoryRequest","filterPayToGameHistoryRequest","PayToGameHistory","getChildData","dataElement","filter","product_id","transaction_id","card_status","create_date","HistoryPayToGamePage","PayToWalletHistory","historyCard","historyElement","card_type","card_message","HistoryPayToWalletPage","PageNotFound","AppleLoginCallback","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","c","charCodeAt","toString","slice","join","hash","id_token","tokenData","appleSignIn","LoginApple","Routes","path","exact","main","history","PrivateRoutes","Comp","component","rest","render","pathname","prevLocation","App","InitRoute","initialState","gameReducer","action","newSlider","i","imageTitle","imageRedirect","imagePath","description","imageDescription","setItem","stringify","removeItem","isLoadingActionType","appReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3aad2192.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const loginActionTypes = {\r\n    LOGIN_RESQUEST: 'LOGIN_RESQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGOUT: 'LOGOUT',\r\n\r\n    LOGIN_FACEBOOK: 'LOGIN_FACEBOOK',\r\n    LOGIN_GOOGLE: 'LOGIN_GOOGLE',\r\n    LOGIN_APPLE: 'LOGIN_APPLE',\r\n}\r\nexport default  loginActionTypes;","const apiConfig = {};\r\n\r\napiConfig.domain = 'https://dev-api-v2.phoeniz.com/';\r\n\r\napiConfig.endpoint = {\r\n    login: 'passport/login',\r\n    loginFb: 'passport/loginFB',\r\n    loginGg: 'passport/loginGoogle',\r\n    loginApple: 'passport/loginApple',\r\n    getSlider: 'sliders/get-default-slider',\r\n    getPosts: 'post/get-list',\r\n    getDetailPost: 'post/get-detail/',\r\n    getGame: 'game/get-list',\r\n    getDetailGameToGame: 'server/list',\r\n    chargeCard: 'paymentGame/charge-card',\r\n    getRole: 'game/get-role',\r\n    chargeAtm: 'paymentGame/charge-atm',\r\n    getDetailGameToWallet: 'game/detail',\r\n    paymentWalletChargeCard: 'paymentWallet/charge-card',\r\n    paymentWalletChargeATM: 'paymentWallet/charge-atm',\r\n    paymentWalletChargeATMSuccess: 'paymentWallet/success-charge-atm',\r\n    getCardHistory: 'history/card',\r\n    getPayToGameHistory: 'history/paytogame',\r\n    payToGame: 'paymentWallet/pay-to-game'\r\n};\r\napiConfig.jwtToken = 'ADFASVASVASCAS';\r\napiConfig.header = {\r\n    contentJson: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n};\r\n\r\nexport default apiConfig;","import axios from 'axios';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\n// define util of api\r\nconst Api = {};\r\n\r\nApi.call = (method ,url, body= {} , header = `${ApiConfig.header.contentJson}`) => {\r\n    return axios({\r\n                method: method,\r\n                url: url,\r\n                data: body,\r\n                header: header\r\n            })\r\n};\r\n\r\nexport default Api;","const isLoadingActionTypes = {\r\n    SHOW_LOADING: 'SHOW_LOADING',\r\n    HIDE_LOADING: 'HIDE_LOADING',\r\n}\r\nexport default isLoadingActionTypes;","import isLoadingActionTypes from \"../actionTypes/isloading.actiontypes\";\r\n\r\n// define action of loader\r\nconst isLoadingActions = {};\r\n\r\n/**\r\n * show loader\r\n * @return {} dispatch\r\n */\r\nisLoadingActions.showLoader = () => {\r\n  return dispatch => {\r\n      dispatch(isLoadingActions.showLoaderRequest());\r\n  };\r\n};\r\n\r\n/**\r\n * hide loader\r\n * @return {} dispatch\r\n */\r\nisLoadingActions.hideLoader = () => {\r\n  return dispatch => {\r\n      dispatch(isLoadingActions.hideLoaderRequest());\r\n  };\r\n};\r\n\r\n/**\r\n * show loader request\r\n * @return {Action Creator}\r\n */\r\nisLoadingActions.showLoaderRequest = () => {\r\n  return {\r\n    type: isLoadingActionTypes.SHOW_LOADING\r\n  };\r\n};\r\n\r\n/**\r\n * hide loader request\r\n * @return {Action Creator}\r\n */\r\nisLoadingActions.hideLoaderRequest = () => {\r\n  return {\r\n    type: isLoadingActionTypes.HIDE_LOADING\r\n  };\r\n};\r\n\r\nexport default isLoadingActions;\r\n","import loginActionTypes from '../actionTypes/login.actiontypes';\r\nimport Api from '.././utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\nimport isLoading from \"./isloading.actions\";\r\n\r\nconst loginAction = {};\r\n\r\nloginAction.Login = (username, password) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username='+ username + '&password=' + password;\r\n    return async (dispatch) => {\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.loginFacebookRequest = (accessToken) => {\r\n    let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token='+accessToken;\r\n    return async (dispatch) => {\r\n        //Get bussiness token\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(res => {\r\n            if(res.status === 200 && res.data.token_for_business)\r\n            {\r\n                dispatch(loginAction.loginFacebook(accessToken, res.data.token_for_business));\r\n            }            \r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.loginFacebook = (bussinessToken) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginFb + \"?tokenForBusiness=\"+ bussinessToken;\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nloginAction.loginGoogle = (email) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginGg + \"?email=\"+ email;\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.LoginApple = (sub) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginApple + \"?sub=\"+sub;\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.success = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_SUCCESS,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.failure = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_FAILURE,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.logout = () => {\r\n    return {\r\n        type: loginActionTypes.LOGOUT,\r\n    };\r\n}\r\n\r\nexport default loginAction;","const postActionTypes = {\r\n    GET_ALL_POST: 'GET_ALL_POST',\r\n    GET_DETAIL_POST: 'GET_DETAIL_POST'\r\n}\r\nexport default  postActionTypes;","import postActionTypes from '../actionTypes/post.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst postActions = {};\r\n\r\npostActions.getAllPostRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPosts;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getAllPost(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npostActions.getAllPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_ALL_POST,\r\n        result\r\n    }\r\n}\r\n\r\npostActions.getPostDetailRequest = (slug) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getDetailPost + slug;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getDetailPost(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npostActions.getDetailPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_DETAIL_POST,\r\n        result\r\n    }\r\n}\r\n\r\nexport default postActions;","const CommonConfig = {};\r\n\r\nCommonConfig.assetDomain = 'http://dev-assets.phoeniz.com';\r\nCommonConfig.linkChangePassword = 'https://id.100d.mobi/';\r\nCommonConfig.linkAccountInfo = 'https://id.100d.mobi/';\r\nCommonConfig.linkRegister = 'https://id.100d.mobi/register';\r\nCommonConfig.linkForgetPassword = 'https://id.100d.mobi/forgetpassword';\r\n\r\n/**\r\n * Cards list\r\n * @type {{\"4\": {name: string, type: string}, \"6\": {name: string, type: string}, \"7\": {name: string, type: string}}}\r\n */\r\nCommonConfig.CardsList = {\r\n    '6': {\r\n        type: 'HPC',\r\n        name: 'HPCode'\r\n    },\r\n    '7': {\r\n        type: 'GATE',\r\n        name: 'GATE'\r\n    },\r\n    '4': {\r\n        type: 'VTC',\r\n        name: 'VTCVcoin'\r\n    }\r\n};\r\n\r\n/**\r\n * ATM values list\r\n * @type {{}[]}\r\n */\r\nCommonConfig.ATMValuesList = [\r\n    {\r\n        value: 10000,\r\n        displayText: '10.000'\r\n    },\r\n    {\r\n        value: 20000,\r\n        displayText: '20.000'\r\n    },\r\n    {\r\n        value: 50000,\r\n        displayText: '50.000'\r\n    },\r\n    {\r\n        value: 100000,\r\n        displayText: '100.000'\r\n    },\r\n    {\r\n        value: 200000,\r\n        displayText: '200.000'\r\n    },\r\n    {\r\n        value: 300000,\r\n        displayText: '300.000'\r\n    },\r\n    {\r\n        value: 500000,\r\n        displayText: '500.000'\r\n    },\r\n    {\r\n        value: 1000000,\r\n        displayText: '1.000.000'\r\n    },\r\n    {\r\n        value: 2000000,\r\n        displayText: '2.000.000'\r\n    }\r\n];\r\n\r\nexport default CommonConfig;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport loginAction from \"../../actions/login.actions.js\";\r\nimport postAction from \"../../actions/post.actions\";\r\nimport CommonConfig from \"../../config/CommonConfig\";\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getAllPost();\r\n    }\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        let { login } = this.props;\r\n        if(login.isLogged === true){\r\n            this.props.userLogout();\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {login, postsReducer} = this.props;\r\n        let rightTopBar = '';\r\n        if(login.isLogged !== true){\r\n            rightTopBar = <li><Link to=\"/login\">Đăng nhập </Link></li>\r\n        }\r\n        else{\r\n            rightTopBar = <li className=\" dropdown\"><a href=\"/\" className=\"dropdown-toggle active\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">{login.data.data.username} <span className=\"caret\" /></a>\r\n                            <ul className=\"dropdown-menu dropdown-menu-right\">\r\n                                <li><a href={CommonConfig.linkChangePassword}>Đổi mật khẩu</a></li>\r\n                                <li><a href={CommonConfig.linkAccountInfo}>Thông tin tài khoản</a></li>\r\n                                <li onClick={this.logout}><a href=\"/#\">Đăng xuất</a></li>\r\n                            </ul>\r\n                        </li>\r\n        }\r\n        let postsElement = '';\r\n        if(postsReducer.listPost.length > 0)\r\n        {\r\n            postsElement = postsReducer.listPost.map((val, index) => {\r\n                return <li key={index}><Link to={\"/post-detail/\" + val.slug}>{val.title}</Link></li>\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container-fuild menu\">\r\n                <nav className=\"navbar navbar-default\" role=\"navigation\">\r\n                    <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n                        <span className=\"sr-only\">Toggle navigation</span>\r\n                        <span className=\"icon-bar\" />\r\n                        <span className=\"icon-bar\" />\r\n                        <span className=\"icon-bar\" />\r\n                    </button>\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Phoeniz pay\r\n                    </Link>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li><Link to=\"/\">Trang chủ </Link></li>\r\n                        <li className=\"dropdown\">\r\n                        <a href=\"/\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Hướng dẫn <span className=\"caret\" /></a>\r\n                        <ul className=\"dropdown-menu\" role=\"menu\">\r\n                            {postsElement}\r\n                        </ul>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"nav navbar-nav pull-right\">\r\n                        {rightTopBar}\r\n                    </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n      postsReducer: state.postReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        userLogout: () =>{\r\n            dispatch(loginAction.logout())\r\n        },\r\n        getAllPost: () => {\r\n            dispatch(postAction.getAllPostRequest())\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)((Header));","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"clearfix\"></div>\r\n                <hr></hr>\r\n                <div className=\"container-fuild footer text-center\">\r\n                    <p className=\"text-muted credit\" style={{padding: '1em'}}>Đơn vị chủ quản: Công Ty TNHH Dịch Vụ Giải Trí Phượng Hoàng</p>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const gameActionTypes = {\r\n    GET_ALL_GAME: 'GET_ALL_GAME',\r\n    GET_DETAIL_GAME_TO_GAME: 'GET_DETAIL_GAME_TO_GAME',\r\n    GET_DETAIL_GAME_TO_WALLET: 'GET_DETAIL_GAME_TO_WALLET',\r\n}\r\nexport default gameActionTypes;","import gameActionTypes from \"../actionTypes/game.actiontypes\";\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from \"../config/ApiConfig\";\r\n\r\nconst gameActions = {};\r\n\r\ngameActions.getAllRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getGame;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(gameActions.getAll(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ngameActions.getAll = (result) => {\r\n    return {\r\n        type: gameActionTypes.GET_ALL_GAME,\r\n        result\r\n    }\r\n}\r\n\r\ngameActions.getDetailGameToGameRequest = (productId) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getDetailGameToGame + '?productId='+productId ;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(gameActions.getDetailGameToGame(result))\r\n                dispatch(gameActions.getAllRequest())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ngameActions.getDetailGameToGame = (result) => {\r\n    return {\r\n        type: gameActionTypes.GET_DETAIL_GAME_TO_GAME,\r\n        result\r\n    }\r\n}\r\n\r\n\r\nexport default gameActions;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport gameActions from \"../../actions/games.actions\";\r\nimport CommonConfig from \"../../config/CommonConfig\";\r\n\r\nexport class Games extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getGameList();\r\n    }\r\n\r\n    render() {\r\n        if(this.props.gamesReducer.data.length > 0 )\r\n        {\r\n            var { gamesReducer } = this.props;\r\n            var gameElemnt = gamesReducer.data.map((val, index) => {\r\n                let gameItem = '';\r\n                // console.log(val.status)\r\n                if(val.status === 1)\r\n                {\r\n                    if(val.payment_type === 'wallet')\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <Link to={`/nap-vi/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/nap-vi/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </Link>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    else if(val.payment_type === 'none_wallet')\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <Link to={`/nap-game/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/nap-game/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </Link>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    else\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <a target=\"blank\" rel=\"noopener noreferrer\" href={val.url_redirect}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </a>\r\n                                        <a target=\"blank\" rel=\"noopener noreferrer\" href={val.url_redirect}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </a>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    return <div className=\"item\" key={index}>\r\n                                {gameItem}\r\n                            </div>\r\n                }\r\n                return null;\r\n            })\r\n            \r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fuild product\">\r\n                <h3>SẢN PHẨM NỔI BẬT</h3>\r\n                {gameElemnt}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Games)","const sliderActionTypes = {\r\n    GET_ALL: 'GET_ALL_SLIDER'\r\n}\r\nexport default sliderActionTypes;","import sliderActionTypes from '../actionTypes/slider.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst sliderActions = {};\r\n\r\nsliderActions.getAllRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getSlider;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(sliderActions.getAll(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nsliderActions.getAll = (result) => {\r\n    return {\r\n        type: sliderActionTypes.GET_ALL,\r\n        result\r\n    }\r\n}\r\n\r\nexport default sliderActions;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport sliderActions from \"../../actions/slider.actions\";\r\n\r\nclass MainSlider extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sliders: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getAllRequest();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return {\r\n            sliders: props.sliders\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { sliders } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    sliders.length > 0 \r\n                    ?\r\n                    <OwlCarousel\r\n                        className=\"owl-theme\"\r\n                        loop\r\n                        items={1}\r\n                    >\r\n                        {sliders.map((val, index) => (\r\n                            <div className=\"main_slide_item\" key={index}>\r\n                                <a target=\"blank\" rel=\"noopener noreferrer\" href={val.link}>\r\n                                    <img className=\"img-responsive\" alt={val.image} src={val.image} />\r\n                                </a>\r\n                            </div>\r\n                        ))}\r\n                    </OwlCarousel>\r\n                    :\r\n                    null\r\n                }   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sliders: state.sliderReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getAllRequest: () => {\r\n            dispatch(sliderActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSlider)","import React, { Component } from 'react'\r\nimport Games from '../../components/layout/Games'\r\nimport MainSlider from '../../components/layout/MainSlider';\r\n\r\nexport default class Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MainSlider></MainSlider>\r\n                <Games></Games>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const Validate = {};\r\n\r\nValidate.isRequired = (value) => {\r\n    if (value.trim().length === 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Check minlength\r\n */\r\nValidate.minLength = (value, min) => {\r\n    return value.length < min;\r\n}\r\n  \r\n  /**\r\n   * Check maxlength\r\n   */\r\nValidate.maxLength = (value, max) => {\r\n    return value.length > max;\r\n}\r\n\r\nexport default Validate;","const SocialConfig = {};\r\n\r\nSocialConfig.fb = {\r\n    domain: 'https://www.facebook.com/v6.0/dialog/oauth?',\r\n    app_id: '800624447114245',\r\n    redirect_uri: 'http://localhost:3000/passport/loginFB/callback',\r\n    app_secret: '84d2f2b54343dad2b8cebdd199c72d81'\r\n}\r\n\r\nSocialConfig.google = {\r\n    app_id: '640078091216-oq0vn2oheote5b129sc4gn7d7d51r9r0.apps.googleusercontent.com',\r\n    app_secret: '4Ydu3UzLk7FympAARoobcyCg'\r\n}\r\n\r\nSocialConfig.apple = {\r\n    client_id: 'v2signin.100d.mobi',\r\n    redirect_url: 'https://dev-pay-v2.phoeniz.com/login/appleCallback'\r\n}\r\n\r\nexport default SocialConfig;","import React, { Component } from 'react'\r\nimport SocialConfig from '../config/SocialConfig';\r\nimport { connect } from \"react-redux\";\r\nimport loginAction from '../actions/login.actions';\r\n\r\nclass FacebookLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accessToken : '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: SocialConfig.fb.app_id,\r\n                false: true,  // enable cookies to allow the server to access\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v6.0' // use version 2.1\r\n            });\r\n\r\n            window.FB.Event.subscribe('auth.statusChange', function(response) {\r\n                if (response.authResponse && response.status === \"connected\") {\r\n                    this.setState({\r\n                        accessToken: response.authResponse.accessToken\r\n                    })\r\n                    this.callApi(this.state.accessToken);\r\n                }\r\n            }.bind(this));\r\n        }.bind(this);\r\n\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    callApi = (token) => {\r\n        this.props.facebookLogin(token)\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();        \r\n        window.FB.getLoginStatus(function (response) {\r\n            if(response.status !== 'connected'){\r\n                window.FB.login();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"/#\" onClick={this.handleClick}>\r\n                <div className=\"row-login\" id=\"btnFacebook\">\r\n                    <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n                    <p>Đăng nhập bằng Facebook</p>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        facebookLogin: (token) => {\r\n            dispatch(loginAction.loginFacebookRequest(token))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FacebookLogin);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SocialConfig from \"../config/SocialConfig\";\r\nimport loginAction from '../actions/login.actions';\r\n\r\nclass GoogleLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email : '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() { \r\n        window['googleSDKLoaded'] = () => {\r\n            window['gapi'].load('auth2', () => {\r\n                this.auth2 = window['gapi'].auth2.init({\r\n                    client_id: SocialConfig.google.app_id,\r\n                    cookiepolicy: 'single_host_origin',\r\n                    scope: 'profile email'\r\n                });\r\n                this.prepareLoginButton();\r\n            });\r\n        }\r\n        \r\n        (function(d, s, id){\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) {return;}\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'google-jssdk'));\r\n    }\r\n\r\n    prepareLoginButton = () => {     \r\n        this.auth2.attachClickHandler(this.refs.googleLoginBtn, {},\r\n        (googleUser) => {\r\n            let profile = googleUser.getBasicProfile();\r\n            this.setState({\r\n                email: profile.getEmail()\r\n            })\r\n            this.props.googleLogin(this.state.email);\r\n        });\r\n    }\r\n\r\n    onHandleClick = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"/#\" onClick={this.onHandleClick} ref=\"googleLoginBtn\"><div className=\"row-login\" id=\"btnGoogle\">\r\n                <i className=\"fa fa-google\" aria-hidden=\"true\" />\r\n                <p>Đăng nhập bằng Google</p>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        googleLogin: (email) => {\r\n            dispatch(loginAction.loginGoogle(email))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GoogleLogin);","import React, { Component } from 'react'\r\nimport ReactAppleLogin from 'react-apple-login'\r\nimport SocialConfig from \"../config/SocialConfig\"\r\n\r\nclass AppleLogin extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cover-apple-login\">\r\n                <ReactAppleLogin clientId={SocialConfig.apple.client_id} redirectURI={SocialConfig.apple.redirect_url}\r\n                responseType={\"code id_token\"} \r\n                responseMode={\"fragment\"}\r\n                designProp={\r\n                    {\r\n                    height: 50,\r\n                    width: 255,\r\n                    color: \"black\",\r\n                    border: false,\r\n                    type: \"sign-in\",\r\n                    border_radius: 10,\r\n                    scale: 1,\r\n                    locale: \"vi_VI\", \r\n                    }\r\n                }\r\n                />\r\n                <a href=\"/#\" onClick={this.handleClick}>\r\n                    <div className=\"row-login\" id=\"btnApple\">\r\n                        <i className=\"fa fa-apple\" aria-hidden=\"true\" />\r\n                        <p>Đăng nhập bằng Apple ID</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppleLogin;","import React, { Component } from 'react'\r\nimport { Link, Redirect} from \"react-router-dom\";\r\nimport \"../assets/css/login.css\";\r\nimport Validate from './../utils/Validate';\r\nimport { connect } from \"react-redux\";  \r\nimport loginAction from '../actions/login.actions';\r\nimport FacebookLogin from \"./FacebookLogin\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport AppleLogin from \"./AppleLogin\";\r\nimport CommonConfig from '../config/CommonConfig';\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '', \r\n            password: '',\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(this.handleValidate())\r\n        {\r\n            this.props.userlogin(this.state.username, this.state.password);\r\n        }\r\n    }\r\n\r\n    handleValidate = () => {\r\n        const { username, password } = this.state;\r\n        let errors = {\r\n            username: [],\r\n            password: []\r\n        };\r\n        let isValid = true;\r\n        if (Validate.isRequired( username )) {\r\n            errors.username.push('Tài khoản bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( username, 255 )) {\r\n            errors.username.push('Tài khoản tối đa 255 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( username, 5)) {\r\n            errors.username.push('Tài khoản tối thiểu 5 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( password )) {\r\n            errors.password.push('Mật khẩu bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( password, 255 )) {\r\n            errors.username.push('Mật khẩu tối đa 255 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( password, 5)) {\r\n            errors.username.push('Mật khẩu tối thiểu 5 ký tự');\r\n            isValid = false;\r\n        }\r\n        this.setState({\r\n            errors: errors\r\n        })\r\n        return isValid;\r\n    }\r\n\r\n    render() {\r\n        let { errors } = this.state;\r\n        let { login } = this.props;\r\n        if (login.isLogged) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div className=\"container login_container\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Trang chủ</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Đăng nhập</li>\r\n                    </ol>\r\n                </nav>\r\n                <div className=\"col-md-4 box-left\">\r\n                    <h4>Đăng nhập bằng tài khoản khác</h4>\r\n                    <FacebookLogin></FacebookLogin>\r\n                    <GoogleLogin></GoogleLogin>\r\n                    <AppleLogin></AppleLogin>\r\n                </div>\r\n                <div className=\"col-md-8 box-right\">\r\n                    <h4>Đăng nhập bằng Phoeniz ID</h4>\r\n                    <form method=\"POST\" name=\"user\" id=\"user\" noValidate=\"novalidate\" onSubmit={this.handleSubmit}>\r\n                        <label htmlFor=\"username\" className=\"col-sm-12 controll-label\">Tên đăng nhập *</label>\r\n                        <input type=\"text\" name=\"username\" className=\"form-control\" id=\"username\" onChange={this.handleChange} />\r\n                        <small className=\"errorInput\">{errors.username?errors.username[0]:''}</small>\r\n                        <label htmlFor=\"password\" className=\"col-sm-12 controll-label\">Mật khẩu *</label>\r\n                        <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" onChange={this.handleChange} />\r\n                        <small className=\"errorInput\">{errors.password?errors.password[0]:''}</small>\r\n                        <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitbutton\">{this.props.isLoadingReducer.isLoading?\r\n                            <div className={'dot-loader'}>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                            :'Đăng nhập'}</button>\r\n                    </form>\r\n                    <div className=\"clearfix\" />\r\n                    <div className=\"forget-password\"><a href={CommonConfig.linkForgetPassword}>Quên mật khẩu</a></div>\r\n                    <div className=\"exist-account\">Bạn chưa có tài khoản. <a href={CommonConfig.linkRegister}>Đăng ký ngay</a></div>\r\n                    <div className=\"clearfix\" />\r\n                    { login.error && (<div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {login.error.messages}\r\n                                        </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n      isLoadingReducer: state.isLoadingReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        userlogin: (username, password) => {\r\n            dispatch(loginAction.Login(username, password))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login);\r\n  ","import React, { Component } from 'react'\r\nimport Login from '../../components/Login'\r\n\r\nexport default class Loginpage extends Component {\r\n    render() {\r\n        return (\r\n            <Login></Login>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport postActions from \"../actions/post.actions\";\r\n \r\nclass Detail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            postDetail: null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getDetailPost(this.props.slug);\r\n    }   \r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.slug !== this.props.slug) {\r\n            this.props.getDetailPost(this.props.slug);\r\n        }\r\n    }\r\n      \r\n    render() {\r\n        let {postsReducer} = this.props\r\n        return (\r\n            <div>\r\n            { \r\n                postsReducer.detailPost !== null ?\r\n                    <div className=\"container content\">\r\n                        <h3>{postsReducer.detailPost.title}</h3>\r\n                        <div className=\"desc\">\r\n                            <span>MKT</span>\r\n                            <span>{postsReducer.detailPost.created_at}</span>\r\n                        </div>\r\n                        <div className=\"main-content\" dangerouslySetInnerHTML={ { __html: postsReducer.detailPost.content } }>\r\n                        </div>\r\n                    </div>\r\n                :null\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postsReducer: state.postReducer\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getDetailPost: (slug) => {\r\n            return dispatch(postActions.getPostDetailRequest(slug))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Detail);","import React, { Component } from 'react'\r\nimport Detail from '../../components/Detail'\r\nimport MainSlider from '../../components/layout/MainSlider'\r\n\r\n\r\nexport default class Detailpage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MainSlider></MainSlider>\r\n                <Detail slug={this.props.match.params.slug}></Detail>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const paymentActionTypes = {\r\n    CHARGE_CARD: 'CHARGE_CARD',\r\n    CHARGE_ATM: 'CHARGE_ATM',\r\n    GET_USER_ROLE: 'GET_USER_ROLE',\r\n    CHARGE_ATM_SUCCESS: 'CHARGE_ATM_SUCCESS'\r\n}\r\nexport default paymentActionTypes;","import paymentActionTypes from '../actionTypes/payment.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\nimport isLoadingAction from \"./isloading.actions\";\r\nconst paymentActions = {};\r\n\r\npaymentActions.chargeCardRequest = (params) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(params.username + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.chargeCard + '?serial='+params.txtSerie+'&code='+params.txtCardPin+'&username='+params.username+'&productAgent='+params.gameInfo.agent+'&type='+params.sltCardType+'&server_id='+params.sltServer+'&sign='+sign+'';\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1 || result.data.status === 0){\r\n                dispatch(paymentActions.chargeCard(result))\r\n            }\r\n        })\r\n        dispatch(isLoadingAction.hideLoader())\r\n    }\r\n}\r\n\r\npaymentActions.chargeCard = (result) => {\r\n    return {\r\n        type: paymentActionTypes.CHARGE_CARD,\r\n        result\r\n    }\r\n}\r\n\r\npaymentActions.chargeAtmRequest = (params) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(params.username + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.chargeAtm + '?amount='+params.sltAmount+'&username='+params.username+'&productAgent='+params.gameInfo.agent+'&roleId='+params.sltRoleId+'&server_id='+params.sltServer+'&sign='+sign+'';\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                window.location.href = result.data.data.link;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\npaymentActions.getUserRoleRequest = (serverId, userId, agent) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(userId + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getRole + '?server_id=' + serverId+'&id_user='+userId+'&productAgent='+agent+'&sign='+sign;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(paymentActions.getUserRole(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npaymentActions.chargeAtmSuccess = (paramStr) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.paymentWalletChargeATMSuccess + paramStr;\r\n    console.log(endpoint)\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            dispatch(paymentActions.rsChargeAtmSuccess(result))\r\n        })\r\n    }\r\n}\r\n\r\npaymentActions.rsChargeAtmSuccess = (result) => {\r\n    return {\r\n        type: paymentActionTypes.CHARGE_ATM_SUCCESS,\r\n        result\r\n    }\r\n}\r\n\r\npaymentActions.getUserRole = (result) => {\r\n    return {\r\n        type: paymentActionTypes.GET_USER_ROLE,\r\n        result\r\n    }\r\n}\r\n\r\nexport default paymentActions;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"../assets/css/paytogame.css\"\r\nimport gameActions from \"../actions/games.actions\"\r\nimport paymentActions from \"../actions/payment.actions\"\r\nimport Validate from \"../utils/Validate\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as _ from 'lodash';\r\n\r\nclass Paytogame extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: JSON.parse(localStorage.getItem('user')).data.username,\r\n            userRole: {},\r\n            sltRoleId: '',\r\n            sltServer: '',\r\n            sltCardType: '',\r\n            txtSerie: '',\r\n            txtCardPin: '',\r\n            sltAmount: '',\r\n            gameInfo: {},\r\n            chargeSuccessMSG : '',\r\n            errorsAtm: [],\r\n            errorsCard: [],\r\n            errorSelectServer: [],\r\n            errorSelectRole: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {match} = this.props\r\n        this.props.getDetailGameToGame(match.params.id)\r\n        let queryString = require('query-string');\r\n        let strParams = this.props.location.search;\r\n        let params = queryString.parse(strParams);\r\n        if (_.has(params, 'trans_id')) {\r\n            this.props.chargeAtmSuccess(strParams)\r\n            console.log(this.props)\r\n            if(this.props.paymentReducer.chargeAtmSuccess.messages !== null)\r\n            {\r\n                let modalATMReport = window.$('.modal-atm-report');\r\n                modalATMReport.modal('show');\r\n                modalATMReport.on('click', function () {\r\n                    modalATMReport.modal('hide')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePayByCard = (e) =>{\r\n        e.preventDefault();\r\n        if(this.validatePayCard()){\r\n            this.props.chargeCard(this.state)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n        if(Object.keys(previousState.gameInfo).length === 0)\r\n        {\r\n            let gameData = previousProps.gamesReducer.data;\r\n            for (var key in gameData) {\r\n                if (gameData.hasOwnProperty(key)) {\r\n                    if(gameData[key].slug === previousProps.match.params.slug)\r\n                    {\r\n                        this.setState({\r\n                            gameInfo: gameData[key]\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        let userRole = nextProps.paymentReducer.userRole.data\r\n        \r\n        if(prevState.sltServer !== '' && userRole)\r\n        {\r\n            return {\r\n                userRole: nextProps.paymentReducer.userRole,\r\n                sltRoleId: prevState.sltRoleId!==''?prevState.sltRoleId:userRole.role[0].roleId\r\n            }            \r\n        }\r\n        return {\r\n            userRole: {},\r\n            sltRoleId: ''\r\n        }\r\n    }\r\n\r\n    handlePayByATM = (e) => {\r\n        e.preventDefault();\r\n        if(this.validatePayAtm()){\r\n            this.props.chargeAtm(this.state);\r\n        }\r\n    }\r\n\r\n    validatePayCard = () => {\r\n        const { sltServer, sltCardType, txtSerie, txtCardPin } = this.state;\r\n        let errorsCard = {\r\n            sltServer: [],\r\n            sltCardType: [],\r\n            txtSerie: [],\r\n            txtCardPin: [],\r\n            sltAmount: []\r\n        };\r\n        let errorSelectServer = [];\r\n        let errorSelectRole = [];\r\n        let isValid = true;\r\n        if (Validate.isRequired( sltServer )) {\r\n            errorSelectServer.push('Vui lòng chọn server');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( sltCardType )) {\r\n            errorsCard.sltCardType.push('Vui lòng chọn loại thẻ');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( txtSerie )) {\r\n            errorsCard.txtSerie.push('Series bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( txtSerie, 6 )) {\r\n            errorsCard.txtSerie.push('Series tối thiểu 6 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( txtSerie, 20 )) {\r\n            errorsCard.txtSerie.push('Series đa  20 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( txtCardPin )) {\r\n            errorsCard.txtCardPin.push('Mã thẻ bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( txtCardPin, 6 )) {\r\n            errorsCard.txtCardPin.push('Mã thẻ tối thiểu 6 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( txtCardPin, 20 )) {\r\n            errorsCard.txtCardPin.push('Mã thẻ đa 20 ký tự');\r\n            isValid = false;\r\n        }\r\n        if(this.state.sltRoleId === ''){\r\n            errorSelectRole.push('không tìm thấy nhân vật')\r\n            isValid = false;\r\n        }\r\n        this.setState({\r\n            errorsCard: errorsCard,\r\n            errorSelectServer: errorSelectServer,\r\n            errorSelectRole: errorSelectRole\r\n        })\r\n        return isValid\r\n    }\r\n\r\n    validatePayAtm = () => {\r\n        const { sltServer, sltAmount } = this.state;\r\n        let errorsAtm = {\r\n            sltServer: [],\r\n            sltAmount: []\r\n        };\r\n        let errorSelectServer = [];\r\n        let errorSelectRole = [];\r\n        let isValid = true;\r\n        if (Validate.isRequired( sltServer )) {\r\n            errorSelectServer.push('Vui lòng chọn server');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( sltAmount )) {\r\n            errorsAtm.sltAmount.push('Vui lòng chọn mệnh giá');\r\n            isValid = false;\r\n        }\r\n        if(this.state.sltRoleId === ''){\r\n            errorSelectRole.push('không tìm thấy nhân vật')\r\n            isValid = false;\r\n        }\r\n        this.setState({\r\n            errorsAtm: errorsAtm,\r\n            errorSelectServer: errorSelectServer,\r\n            errorSelectRole: errorSelectRole\r\n        })\r\n        \r\n        return isValid\r\n    }\r\n\r\n    hanleGetRole = (event) =>{\r\n        const target = event.target;\r\n        const serverId = target.value;\r\n        if(serverId !== '')\r\n        {\r\n            this.props.getUserRole(serverId, JSON.parse(localStorage.getItem('user')).data.id, this.state.gameInfo.agent);\r\n        }\r\n        this.setState({\r\n            sltServer: serverId\r\n        })\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let chargeAtmMSG = '';\r\n        if(this.props.paymentReducer.chargeAtmSuccess.data !== undefined)\r\n        {\r\n            chargeAtmMSG = this.props.paymentReducer.chargeAtmSuccess.data.messages\r\n        }\r\n        let server = this.props.gamesReducer.detail;\r\n        let serverElement = null;\r\n        if(server.length > 0)\r\n        {\r\n            serverElement = server.map((val, index) => {\r\n                return <option key={index} value={val.server_id}>{val.server_name}</option>\r\n            })\r\n        }\r\n        let {errorsCard, errorsAtm, errorSelectServer, gameInfo, userRole, errorSelectRole} = this.state;\r\n        let {paymentReducer} = this.props;\r\n        return (\r\n            <div className=\"container paytogame_container\">\r\n                <div className=\"row box\">\r\n                    <h2>{gameInfo.name}</h2>\r\n                    <div className=\"hd-Form\"> Bước 1: Chọn thông tin nhân vật (*)</div>\r\n                    <label htmlFor=\"sltServer\" className=\"col-sm-12 controll-label\" id=\"list_server\"> Chọn server:</label>\r\n                    {errorSelectServer && (<span className=\"input-error\">{errorSelectServer[0]}</span>)}\r\n                    <select name=\"sltServer\" onBlur={this.validatePayCard} value={this.state.sltServer} onChange={this.hanleGetRole} className=\"form-control \" id=\"server_list\">\r\n                        <option value=\"\">Chọn server</option>\r\n                        {serverElement}\r\n                    </select>\r\n                    {\r\n                        Object.keys(userRole).length > 0 ?\r\n                        (<div>\r\n                            <label htmlFor=\"sltRoleId\" className=\"col-sm-12 controll-label\"> Chọn nhân vật:</label>\r\n                            <select name=\"sltRoleId\" onChange={this.handleChange} className=\"form-control \" id=\"userRole\">\r\n                            {userRole.data.role.map((val, index) => {\r\n                                return <option key={index} value={val.roleId}>{val.roleName}</option>\r\n                            })}\r\n                            </select>\r\n                        </div>)\r\n                        :'Không tìm thấy nhân vật'\r\n                    }\r\n                    <div id=\"appentHtml\" />\r\n                    <div className=\"clearfix\" /> <input type=\"hidden\" name=\"id_user\" id=\"id_user\" />\r\n                    <div className=\"hd-Form\"> Bước 2: Chọn phương thức thanh toán (*)</div>\r\n                    <div className=\"panel-group paytogame\" id=\"accordion\">\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h4 className=\"panel-title\">\r\n                                    <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse1\">Nạp thẻ cào</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"collapse1\" className=\"panel-collapse collapse in\">\r\n                                <form onSubmit={this.handlePayByCard}>\r\n                                    <div className=\"panel-body\">\r\n                                        <label htmlFor=\"sltCardType\" className=\"col-sm-12 controll-label\">\r\n                                            <span>Loại thẻ</span>\r\n                                            {errorsCard.sltCardType && (<span className=\"input-error\">{errorsCard.sltCardType[0]}</span>)}\r\n                                            <select onBlur={this.validatePayCard} name=\"sltCardType\" onChange={this.handleChange} className=\"form-control\">\r\n                                                <option value=\"\">Chọn loại thẻ</option>\r\n                                                <option value=\"HPC\">HPCode</option>\r\n                                                <option value=\"GATE\">GATE</option>\r\n                                            </select>\r\n                                        </label>\r\n                                        <label htmlFor=\"txtSerie\" className=\"col-sm-12 controll-label\">\r\n                                            <span>Số serie</span>\r\n                                            {errorsCard.txtSerie && (<span className=\"input-error\">{errorsCard.txtSerie[0]}</span>)}\r\n                                            <input onBlur={this.validatePayCard} type=\"text\" name=\"txtSerie\" className=\"form-control\" onChange={this.handleChange} />\r\n                                        </label>\r\n                                        <label htmlFor=\"txtCardPin\" className=\"col-sm-12 controll-label\">\r\n                                            <span>Mã thẻ</span>\r\n                                            {errorsCard.txtCardPin && (<span className=\"input-error\">{errorsCard.txtCardPin[0]}</span>)}\r\n                                            <input onBlur={this.validatePayCard} type=\"text\" name=\"txtCardPin\" className=\"form-control\" onChange={this.handleChange} />\r\n                                        </label>\r\n                                        <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitCard\" className=\"col-sm-3 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                                        <div className={'dot-loader'}>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                        </div>\r\n                                        :'thanh toán'}</button>\r\n                                        {\r\n                                        paymentReducer.chargeCard.status === 1 ?(<span className=\"message-success\">\r\n                                            {paymentReducer.chargeCard.messages}\r\n                                        </span>):(<span className=\"message-alert\">\r\n                                            {paymentReducer.chargeCard.messages}\r\n                                        </span>)\r\n                                        }\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"panel panel-default\">\r\n                            <div className=\"panel-heading\">\r\n                                <h4 className=\"panel-title\">\r\n                                    <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse2\">Nạp thẻ ATM/iBanking</a>\r\n                                </h4>\r\n                            </div>\r\n                            <div id=\"collapse2\" className=\"panel-collapse collapse\">\r\n                                <form onSubmit={this.handlePayByATM}>\r\n                                    <div className=\"panel-body\">\r\n                                        <label htmlFor=\"sltAmount\" className=\"col-sm-12 controll-label\">\r\n                                            <span>Số tiền thanh toán (VNĐ)</span>\r\n                                            {errorsAtm.sltAmount && (<span className=\"input-error\">{errorsAtm.sltAmount[0]}</span>)}\r\n                                            <select onBlur={this.validatePayAtm} name=\"sltAmount\" className=\"form-control\" onChange={this.handleChange}>\r\n                                                <option value=\"\">Chọn số tiền</option>\r\n                                                <option value={10000}>10,000</option>\r\n                                                <option value={20000}>20,000</option>\r\n                                                <option value={50000}>50,000</option>\r\n                                                <option value={100000}>100,000</option>\r\n                                                <option value={200000}>200,000</option>\r\n                                                <option value={300000}>300,000</option>\r\n                                                <option value={500000}>500,000</option>\r\n                                                <option value={1000000}>1,000,000</option>\r\n                                                <option value={2000000}>2,000,000</option>\r\n                                            </select>\r\n                                        </label>\r\n                                        <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitAtm\" className=\"col-sm-3 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                                        <div className={'dot-loader'}>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                            <div></div>\r\n                                        </div>\r\n                                        :'thanh toán'}</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        {\r\n                            errorSelectRole.length > 0?\r\n                            <div style={{marginTop: \"10px\"}} className=\"alert alert-danger\" role=\"alert\">\r\n                                {errorSelectRole[0]}\r\n                            </div>:''\r\n                        }\r\n                        \r\n                        <div className=\"message-alert\">\r\n                            NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM = 100% (Thẻ HPCode có bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clearfix\" />\r\n                    <div className=\"modal modal-atm-report fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                        <div className=\"modal-dialog\" role=\"document\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-body\">\r\n                                    <p className={\"text-center\"}>{chargeAtmMSG}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n    paymentReducer: state.paymentReducer,\r\n    isLoadingReducer: state.isLoadingReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getDetailGameToGame: (productId) => {\r\n            dispatch(gameActions.getDetailGameToGameRequest(productId))\r\n        },\r\n        chargeCard: (params) => {\r\n            dispatch(paymentActions.chargeCardRequest(params))\r\n        },\r\n        chargeAtm: (params) => {\r\n            dispatch(paymentActions.chargeAtmRequest(params))\r\n        },\r\n        getUserRole: ( serverId, userId, agent) => {\r\n            dispatch(paymentActions.getUserRoleRequest(serverId, userId, agent))\r\n        },\r\n        chargeAtmSuccess: (paramStr) => {\r\n            dispatch(paymentActions.chargeAtmSuccess(paramStr))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Paytogame))","import React, { Component } from 'react'\r\nimport Paytogame from '../../components/Paytogame'\r\n\r\nclass PayToGamePage extends Component {\r\n    render() {\r\n        return (\r\n            <Paytogame match={this.props.match}></Paytogame>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PayToGamePage","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class PayBreadcrumb extends Component {\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let payUrl = \"/nap-vi/\"+match.params.slug+\"-g\"+match.params.id\r\n        return (\r\n            <div className=\"tab-Switch\">\r\n                <NavLink to={payUrl}>Nạp thẻ</NavLink>\r\n                <NavLink to={\"/lich-su-vi/\"+match.params.slug+\"-g\"+match.params.id}>Lịch sử ví</NavLink>\r\n                <NavLink to={\"/lich-su-game/\"+match.params.slug+\"-g\"+match.params.id}>Lịch sử game</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport '../assets/css/paytowallet.css'\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport api from '../utils/Api';\r\nimport apiConfig from '../config/ApiConfig';\r\nimport commonConfig from '../config/CommonConfig';\r\nimport Validate from \"../utils/Validate\";\r\n\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\n\r\nexport default class Paytowallet extends Component {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            balance: 0,\r\n            game: {},\r\n            cardsList: commonConfig.CardsList,\r\n            atmValuesList: commonConfig.ATMValuesList,\r\n            serverGroups: [],\r\n            serversList: [],\r\n            goldsList: [],\r\n            isDisableSelectServers: true,\r\n            payItem: {},\r\n            inLoadingPage: false,\r\n            inProcessing: false,\r\n            processingResult: {\r\n                status: null,\r\n                message: ''\r\n            },\r\n            errors: {},\r\n            chargeGameItem: {},\r\n            chargeGameResult: {},\r\n            rolesList: null,\r\n            modalContent: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On component did mount event\r\n     * @created 2020-03-18 LongTHk\r\n     */\r\n    componentDidMount() {\r\n        // get md5\r\n        let md5 = require('md5');\r\n        // get username\r\n        let username = JSON.parse(localStorage.getItem('user')).data.username;\r\n        // get query string\r\n        let queryString = require('query-string');\r\n\r\n        // set inLoadingPage status\r\n        this.setState({\r\n            inLoadingPage: true\r\n        });\r\n\r\n        // call api get page content\r\n        let slug = this.props.match.match.params.slug;\r\n        let sign = md5(username + apiConfig.jwtToken);\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getDetailGameToWallet + '?slug=' + slug + '&username=' + username + '&sign=' + sign;\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get return data\r\n                let data = response.data.data;\r\n                // spit servers list into server groups\r\n                let serverGroups = _.chunk(data.servers, 10);\r\n                // set state\r\n                this.setState({\r\n                    username: username,\r\n                    balance: data.balance,\r\n                    game: Object.keys(data).length > 0 ? data.game[0] : null,\r\n                    serverGroups: serverGroups,\r\n                    goldsList: data.golds\r\n                });\r\n\r\n                // call api check Charging ATM status\r\n                let strParams = this.props.match.location.search;\r\n                let params = queryString.parse(strParams);\r\n                if (_.has(params, 'trans_id')) {\r\n                    let endpointATMSuccess = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATMSuccess + strParams;\r\n                    api.call('GET', endpointATMSuccess)\r\n                        .then((response) => {\r\n                            // set atm response message\r\n                            this.setState({\r\n                                modalContent: response.data.messages\r\n                            });\r\n\r\n                            // create modal\r\n                            let modal = window.$('.modal-notification');\r\n                            // modal close action\r\n                            modal.on('click', function () {\r\n                                modal.modal('hide')\r\n                            });\r\n\r\n                            // show modal\r\n                            modal.modal('show');\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err)\r\n                        });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                // set inLoadingPage status\r\n                this.setState({\r\n                    inLoadingPage: false\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Action on server group changee\r\n     * @param event\r\n     * @crated 2020-03018 LongTHK\r\n     */\r\n    changeServerGroup = (event) => {\r\n        // get server group value\r\n        let serverGroupValue = event.target.value;\r\n\r\n        // load servers list base on group\r\n        if (serverGroupValue !== '') {\r\n            this.setState({\r\n                serversList: this.state.serverGroups[serverGroupValue],\r\n                isDisableSelectServers: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isDisableSelectServers: true\r\n            })\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle changing input data\r\n     * @param event\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                [name]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Get role name\r\n     * @param event\r\n     */\r\n    handleServerChanged = (event) => {\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // get params\r\n        let userId = JSON.parse(localStorage.getItem('user')).data.id;\r\n        let sign = md5(userId + apiConfig.jwtToken);\r\n        let serverId = event.target.value;\r\n\r\n        // define endpoint\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getRole +\r\n            '?server_id=' + serverId +\r\n            '&id_user=' + userId +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&sign=' + sign;\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set roles list\r\n                if (responseData.status) {\r\n                    // get roles list\r\n                    let rolesList = responseData.data.role;\r\n\r\n                    // set roles list\r\n                    this.setState({\r\n                        rolesList: rolesList\r\n                    });\r\n\r\n                    // set charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {\r\n                            serverId: serverId,\r\n                            roleId: rolesList[0].roleId\r\n                        }\r\n                    });\r\n                } else {\r\n                    // clear roles list\r\n                    this.setState({\r\n                        rolesList: []\r\n                    });\r\n\r\n                    // clear charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {}\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Open charge game modal\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    openModal = (event) => {\r\n        // get gold id\r\n        let goldId = window.$(event.target).data('gold-id');\r\n\r\n        if (window.$(event.target).data('amount') > this.state.balance) {\r\n            // set state\r\n            this.setState({\r\n                modalContent: 'Không đủ số dư trong tài khoản, hãy chọn mệnh giá thấp hơn hoặc nạp thêm tiền vào ví để tiếp tục giao dịch'\r\n            });\r\n            // create modal\r\n            let modal = window.$('.modal-notification');\r\n            // modal close action\r\n            modal.on('click', function () {\r\n                modal.modal('hide')\r\n            });\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        } else {\r\n            // get gold id\r\n            this.setState(prevState => ({\r\n                chargeGameItem: {\r\n                    ...prevState.chargeGameItem,\r\n                    goldId: goldId\r\n                }\r\n            }));\r\n\r\n            // create modal\r\n            let modal = window.$('.modal-confirm');\r\n            // modal close action\r\n            modal.on('hidden.bs.modal', function () {\r\n                this.setState({\r\n                    chargeGameResult: {}\r\n                })\r\n            }.bind(this));\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Action on change role\r\n     * @param event\r\n     */\r\n    changeRoleId = (event) => {\r\n        this.setState(prevState => ({\r\n            chargeGameItem: {\r\n                ...prevState,\r\n                roleId: event.target.value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Charge game\r\n     * @param event\r\n     */\r\n    chargeGame = (event) => {\r\n        // stop propagation\r\n        event.stopPropagation();\r\n\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // create end point\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.payToGame +\r\n            '?roleId=' + this.state.chargeGameItem.roleId +\r\n            '&goldId=' + this.state.chargeGameItem.goldId +\r\n            '&username=' + this.state.username +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&serverId=' + this.state.chargeGameItem.serverId +\r\n            '&sign=' + md5(this.state.username + apiConfig.jwtToken);\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set state\r\n                this.setState({\r\n                    chargeGameResult: {\r\n                        status: responseData.status,\r\n                        message: responseData.messages\r\n                    }\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log('err');\r\n            })\r\n    };\r\n\r\n    /**\r\n     * Change pay item\r\n     * @param payType\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    changePayItem = (payType) => {\r\n        switch (payType) {\r\n            case 'card':\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n                break;\r\n            case 'atm':\r\n                this.setState({\r\n                    payItem: {\r\n                        amount: '',\r\n                    }\r\n                });\r\n                break;\r\n            default :\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n        }\r\n\r\n        // push value to pay item\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                username: this.state.username,\r\n                productAgent: this.state.game.agent\r\n            }\r\n        }));\r\n\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Pay by card\r\n     * @created 2020-03-19 LongTHk\r\n     */\r\n    payByCard = async () => {\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n\r\n        if (await this.validatePayByCard()) {\r\n            // set inProcessing mode\r\n            this.setState({\r\n                inProcessing: true\r\n            });\r\n            // get md5\r\n            const md5 = require('md5');\r\n            // get pay item\r\n            const payItem = this.state.payItem;\r\n\r\n            // generate endpoint\r\n            const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeCard +\r\n                '?serial=' + payItem.serie +\r\n                '&code=' + payItem.number +\r\n                '&username=' + payItem.username +\r\n                '&productAgent=' + payItem.productAgent +\r\n                '&type=' + payItem.cardType +\r\n                '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n            // call api\r\n            api.call('GET', endPoint)\r\n                .then((response) => {\r\n                    // get response data\r\n                    let responseData = response.data;\r\n\r\n                    // set state\r\n                    if (responseData.status) {\r\n                        this.setState({\r\n                            balance: responseData.data.balance,\r\n                            processingResult: {\r\n                                status: true,\r\n                                message: responseData.messages\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            processingResult: {\r\n                                status: false,\r\n                                message: responseData.messages\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n                .finally(() => {\r\n                    // release inProcessing mode\r\n                    this.setState({\r\n                        inProcessing: false\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pay by ATM\r\n     * @created 2020-03-19 LongTHk\r\n     */\r\n    payByATM = async () => {\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n\r\n        if (await this.validatePayByATM()) {\r\n            // set inProcessing mode\r\n            this.setState({\r\n                inProcessing: true\r\n            });\r\n            // get md5\r\n            const md5 = require('md5');\r\n            // get pay item\r\n            const payItem = this.state.payItem;\r\n\r\n            // generate endpoint\r\n            const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATM +\r\n                '?username=' + payItem.username +\r\n                '&productAgent=' + payItem.productAgent +\r\n                '&amount=' + payItem.amount +\r\n                '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n            // call api\r\n            api.call('GET', endPoint)\r\n                .then((response) => {\r\n                    window.location.href = response.data.data.link;\r\n                })\r\n                .catch((err) => {\r\n                    // release inProcessing mode\r\n                    this.setState({\r\n                        inProcessing: false\r\n                    });\r\n                    console.log(err)\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Validate Pay by card input\r\n     * @returns {Promise<boolean>}\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    validatePayByCard = async () => {\r\n        // define valid status\r\n        let isValid = true;\r\n        // define errors\r\n        let errors = {};\r\n\r\n        // check card type\r\n        if (Validate.isRequired(this.state.payItem.cardType)) {\r\n            errors.cardType = 'Vui lòng chọn loại thẻ';\r\n            isValid = false;\r\n        }\r\n        // check serie\r\n        if (Validate.isRequired(this.state.payItem.serie)) {\r\n            errors.serie = 'Vui lòng nhập số seri';\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength(this.state.payItem.serie, 20)) {\r\n            errors.serie = 'Seri tối đa 20 ký tự';\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength(this.state.payItem.serie, 6)) {\r\n            errors.serie = 'Seri tối thiểu 6 ký tự';\r\n            isValid = false;\r\n        }\r\n        // check number\r\n        if (Validate.isRequired(this.state.payItem.number)) {\r\n            errors.number = 'Vui lòng nhập mã thẻ';\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength(this.state.payItem.number, 20)) {\r\n            errors.number = 'Mã thẻ tối đa 20 ký tự';\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength(this.state.payItem.number, 6)) {\r\n            errors.number = 'Mã thẻ tối thiểu 6 ký tự';\r\n            isValid = false;\r\n        }\r\n        // set errors\r\n        await this.setState({\r\n            errors: errors\r\n        });\r\n\r\n        return isValid;\r\n    };\r\n\r\n    /**\r\n     * Validate Pay by ATM input\r\n     * @returns {Promise<boolean>}\r\n     * @created 2020-03-19 LongTHk\r\n     */\r\n    validatePayByATM = async () => {\r\n        // define valid status\r\n        let isValid = true;\r\n        // define errors\r\n        let errors = {};\r\n\r\n        // check amount\r\n        if (Validate.isRequired(this.state.payItem.amount)) {\r\n            errors.amount = 'Vui lòng chọn số tiền nạp';\r\n            isValid = false;\r\n        }\r\n\r\n        // set errors\r\n        await this.setState({\r\n            errors: errors\r\n        });\r\n\r\n        return isValid;\r\n    };\r\n\r\n    /**\r\n     * Render layout\r\n     * @returns {*}\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    render() {\r\n        /**\r\n         * Loading page animation\r\n         */\r\n        if (this.state.inLoadingPage) {\r\n            return (\r\n                <div style={{textAlign: \"center\"}}>\r\n                    <div className=\"lds-dual-ring\"></div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        /**\r\n         * Render in case game not found\r\n         */\r\n        if (this.state.game === null) {\r\n            return (\r\n                <div>\r\n                    <h1 className='text-center'>Không tìm thấy game</h1>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        /**\r\n         * Page render\r\n         */\r\n        return (\r\n            <div className=\"container paytowallet_container\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={this.props.match.match}></PayBreadcrumb>\r\n                    <form method=\"POST\" name=\"napgold\" id=\"napgold\" noValidate=\"novalidate\">\r\n                        <h2>{this.state.game.name}</h2>\r\n                        <div className=\"qa-message-list\" id=\"wallmessages\">\r\n                            <div className=\"message-item\" id=\"accRole\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix handle-acc-role\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Tài khoản : {this.state.username}</h5>\r\n                                            <h6 className=\"handle\">Số dư : {this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</h6>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"balance\"/>\r\n                                            <input type=\"hidden\" defaultValue={771866} name=\"id_user\" id=\"id_user\"/>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"amount\" id=\"amount\"/>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"gold_id\" id=\"gold_id\"/>\r\n                                            <input type=\"hidden\" defaultValue name=\"theThang\" id=\"theThang\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"message-item\" id=\"accType\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Chọn phương thức để nạp tiền vào ví</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"qa-message-content\">\r\n                                        <div className=\"collapse-group\" id=\"accordion\">\r\n                                            <div className=\"panel panel-default\">\r\n                                                <div className=\"panel-heading\" role=\"tab\" id=\"headingOne\">\r\n                                                    <h4 className=\"panel-title\">\r\n                                                        <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseOne\"\r\n                                                           onClick={this.changePayItem.bind(window.event, 'card')}\r\n                                                           data-parent=\"#accordion\"\r\n                                                           aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n                                                           className=\"trigger collapsed\">\r\n                                                            Thẻ cào\r\n                                                        </a>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div id=\"collapseOne\" className=\"panel-collapse collapse\"\r\n                                                     role=\"tabpanel\"\r\n                                                     aria-labelledby=\"headingOne\" data-id=\"Thẻ cào\">\r\n                                                    <div className=\"panel-body\">\r\n                                                        <div className=\"tab-pane active\" id=\"tab_card_pay\">\r\n                                                            <label htmlFor=\"in_type\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Loại thẻ</span>\r\n                                                                {\r\n                                                                    this.state.errors.hasOwnProperty('cardType') &&\r\n                                                                    <span\r\n                                                                        className=\"input-error\">{this.state.errors.cardType}</span>\r\n                                                                }\r\n                                                                <select name=\"cardType\" className=\"form-control valid\"\r\n                                                                        aria-invalid=\"false\"\r\n                                                                        onChange={this.handleChange}\r\n                                                                        onBlur={this.validatePayByCard}\r\n                                                                >\r\n                                                                    <option value=\"\">Chọn loại thẻ</option>\r\n                                                                    {\r\n                                                                        _.map(this.state.cardsList, (itemValue, itemIndex) =>\r\n                                                                            <option key={itemIndex}\r\n                                                                                    value={itemValue.type}>{itemValue.name}</option>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </select>\r\n                                                            </label>\r\n                                                            <label htmlFor=\"in_serie\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Số serie</span>\r\n                                                                {\r\n                                                                    this.state.errors.hasOwnProperty('serie') &&\r\n                                                                    <span\r\n                                                                        className=\"input-error\">{this.state.errors.serie}</span>\r\n                                                                }\r\n                                                                <input type=\"text\" name=\"serie\"\r\n                                                                       className=\"form-control\"\r\n                                                                       onChange={this.handleChange}\r\n                                                                       onBlur={this.validatePayByCard}\r\n                                                                       />\r\n                                                            </label>\r\n                                                            <label htmlFor=\"in_pin\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Mã thẻ</span>\r\n                                                                {\r\n                                                                    this.state.errors.hasOwnProperty('number') &&\r\n                                                                    <span\r\n                                                                        className=\"input-error\">{this.state.errors.number}</span>\r\n                                                                }\r\n                                                                <input type=\"text\" name=\"number\"\r\n                                                                       className=\"form-control\"\r\n                                                                       onChange={this.handleChange}\r\n                                                                       onBlur={this.validatePayByCard}\r\n                                                                       />\r\n                                                            </label>\r\n                                                            <button className=\"btn btn-info\" id=\"btnXacnhan\"\r\n                                                                    type={\"button\"}\r\n                                                                    data-id=\"the-cao\"\r\n                                                                    onClick={this.payByCard}\r\n                                                                    disabled={this.state.inProcessing}>\r\n                                                                {\r\n                                                                    !this.state.inProcessing &&\r\n                                                                    <span>Thanh toán</span>\r\n                                                                }\r\n                                                                {\r\n                                                                    this.state.inProcessing &&\r\n                                                                    <div className={'dot-loader'}>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                    </div>\r\n                                                                }\r\n                                                            </button>\r\n                                                            {\r\n                                                                (\r\n                                                                    this.state.processingResult.status !== null &&\r\n                                                                    !this.state.processingResult.status &&\r\n                                                                    <span\r\n                                                                        className=\"message-alert\">{this.state.processingResult.message}</span>\r\n                                                                ) ||\r\n                                                                (\r\n                                                                    this.state.processingResult.status !== null &&\r\n                                                                    this.state.processingResult.status &&\r\n                                                                    <span\r\n                                                                        className=\"message-success\">{this.state.processingResult.message}</span>\r\n                                                                )\r\n                                                            }\r\n                                                            <div className=\"clearfix\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"panel panel-default\">\r\n                                                <div className=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n                                                    <h4 className=\"panel-title\">\r\n                                                        <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseTwo\"\r\n                                                           data-parent=\"#accordion\"\r\n                                                           onClick={this.changePayItem.bind(window.event, 'atm')}\r\n                                                           aria-expanded=\"true\" aria-controls=\"collapseTwo\"\r\n                                                           className=\"trigger collapsed\">\r\n                                                            Thẻ ATM/Nội địa/NAPAS\r\n                                                        </a>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div id=\"collapseTwo\" className=\"panel-collapse collapse\"\r\n                                                     role=\"tabpanel\"\r\n                                                     aria-labelledby=\"headingTwo\" data-id=\"Thẻ ATM/Nội địa/NAPAS\">\r\n                                                    <div className=\"panel-body\">\r\n                                                        <div id=\"tab_card_pay\">\r\n                                                            <label htmlFor=\"amount_pay\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Số tiền thanh toán (VNĐ)</span>\r\n                                                                {\r\n                                                                    this.state.errors.hasOwnProperty('amount') &&\r\n                                                                    <span\r\n                                                                        className=\"input-error\">{this.state.errors.amount}</span>\r\n                                                                }\r\n                                                                <select name=\"amount\" className=\"form-control\"\r\n                                                                        onChange={this.handleChange} onBlur={this.validatePayByATM}>\r\n                                                                    <option value=\"\">Chọn số tiền</option>\r\n                                                                    {\r\n                                                                        _.map(this.state.atmValuesList, (itemValue, itemIndex) =>\r\n                                                                            <option key={itemIndex}\r\n                                                                                    value={itemValue.value}>{itemValue.displayText}</option>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </select>\r\n                                                            </label>\r\n                                                            <button className=\"btn btn-info\" id=\"btnXacnhan\"\r\n                                                                    type={\"button\"} data-id=\"the-atm\"\r\n                                                                    onClick={this.payByATM}\r\n                                                                    disabled={this.state.inProcessing}>\r\n                                                                {\r\n                                                                    !this.state.inProcessing &&\r\n                                                                    <span>Thanh toán</span>\r\n                                                                }\r\n                                                                {\r\n                                                                    this.state.inProcessing &&\r\n                                                                    <div className={'dot-loader'}>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                    </div>\r\n                                                                }\r\n                                                            </button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"message-alert\">NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM =\r\n                                        100% (Thẻ HPCode có\r\n                                        bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"message-item\" id=\"accGetRole\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Chọn server để nạp tiền vào game</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"qa-message-content content_server\">\r\n                                        <div className=\"divserverList\">\r\n                                            <input type=\"hidden\" name=\"agent\" id=\"agent\" defaultValue=\"m002\"/>\r\n                                            <label htmlFor=\"server_group\" className=\"col-sm-12 controll-label\">\r\n                                                Chọn cụm máy chủ:\r\n                                            </label>\r\n                                            <select name=\"server_group\" className=\"form-control \"\r\n                                                    id=\"server_group\"\r\n                                                    onChange={this.changeServerGroup}\r\n                                            >\r\n                                                <option value=\"\">Chọn group server</option>\r\n                                                {\r\n                                                    _.map(this.state.serverGroups, (serverGroupValue, serverGroupIndex) =>\r\n                                                        <option key={serverGroupIndex} value={serverGroupIndex}>\r\n                                                            Cụm máy\r\n                                                            chủ {serverGroupIndex * 10 + 1} - {serverGroupIndex * 10 + 10}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                            <label htmlFor=\"server_list\" className=\"col-sm-12 controll-label\"\r\n                                                   style={{width: 'auto'}}>\r\n                                                Chọn server:\r\n                                            </label>\r\n                                            <select name=\"server_id\" className=\"form-control \"\r\n                                                    id=\"server_list\"\r\n                                                    disabled={this.state.isDisableSelectServers}\r\n                                                    onChange={this.handleServerChanged}\r\n                                            >\r\n                                                <option value=\"\">Chọn server</option>\r\n                                                {\r\n                                                    _.map(this.state.serversList, (serverValue, serverIndex) =>\r\n                                                        <option key={serverIndex} value={serverValue.server_id}>\r\n                                                            {serverValue.server_name}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div id=\"appentHtml\">\r\n                                            <label htmlFor=\"server_list\"\r\n                                                   className=\"col-sm-12 controll-label\"\r\n                                                   style={{width: 'auto'}}>&nbsp;\r\n                                            </label>\r\n                                            {\r\n                                                this.state.rolesList !== null &&\r\n                                                this.state.rolesList.length > 0 &&\r\n                                                <div>\r\n                                                    <select name=\"rolesList\" className=\"form-control \"\r\n                                                            id=\"server_list\" onChange={this.changeRoleId}>\r\n                                                        {\r\n                                                            _.map(this.state.rolesList, (roleValue, roleIndex) =>\r\n                                                                <option key={roleIndex}\r\n                                                                        value={roleValue.roleId}>{roleValue.roleName}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                this.state.rolesList !== null &&\r\n                                                this.state.rolesList.length === 0 &&\r\n                                                <div className=\"role-name\">\r\n                                                    Không tìm thấy nhân vật game\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"clearfix\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.rolesList !== null &&\r\n                                this.state.rolesList.length > 0 &&\r\n                                <div className=\"message-item\" id=\"accRang\">\r\n                                    <div className=\"message-inner\">\r\n                                        <div className=\"message-head clearfix\">\r\n                                            <div className=\"user-detail\">\r\n                                                <h5 className=\"handle\">Chọn gói vật phẩm</h5>\r\n                                                <p className=\"tab\" id=\"coingold\">Gói Nguyên Bảo</p>\r\n                                                <p className=\"tab\" id=\"coingift\">Gói Quà Đặc Biệt</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"qa-message-content\">\r\n                                            <div className=\"form-group resultCoin\">\r\n                                                <div id=\"showcoingold\">\r\n                                                    {\r\n                                                        _.map(this.state.goldsList, (goldItemValue, goldItemIndex) =>\r\n                                                            <div className=\"gold-item\" key={goldItemIndex}>\r\n                                                                <img\r\n                                                                    src={commonConfig.assetDomain + goldItemValue.image}\r\n                                                                    data-amount={goldItemValue.amount}\r\n                                                                    data-gold-id={goldItemValue.id}\r\n                                                                    onClick={this.openModal}\r\n                                                                />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                                <div id=\"showcoingift\"/>\r\n                                            </div>\r\n                                            <div className=\"clearfix\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"myModal\" className=\"modal\">\r\n                                <div className=\"modal-content clearfix\">\r\n                                    <h1>Xác nhận giao dịch</h1>\r\n                                    <input type=\"submit\" name=\"submit\" id=\"submitbutton\"\r\n                                           className=\"col-sm-3 btn btn-primary\"\r\n                                           defaultValue=\"Thanh toán\"/>\r\n                                    <div className=\"clearfix\"/>\r\n                                    <span className=\"close btn-danger\">Chấp nhận</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"modal modal-notification fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n                                <p className={\"text-center\"}>{this.state.modalContent}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal modal-confirm fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {\r\n                                Object.keys(this.state.chargeGameItem).length > 0 &&\r\n                                <div className=\"modal-body\">\r\n                                    <p>\r\n                                        <b>Server:</b>&nbsp;\r\n                                        {\r\n                                            this.state.serversList[_.findIndex(this.state.serversList, function (item) {\r\n                                                return item.server_id === this.state.chargeGameItem.serverId\r\n                                            }.bind(this))].server_name\r\n                                        }\r\n                                    </p>\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Gói nạp:</b>&nbsp;\r\n                                            {\r\n                                                this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].gold\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                    <p>\r\n                                        <b>Số dư hiện tại:</b>&nbsp;{ this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'}) }\r\n                                    </p>\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Số tiền cần thành toán:</b>&nbsp;\r\n                                            {\r\n                                                this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Số dư còn lại:</b>&nbsp;\r\n                                            {\r\n                                                (this.state.balance - this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            <div className=\"modal-footer\">\r\n                                <div\r\n                                    className={(this.state.chargeGameResult.status !== 0) ? 'text-center text-success' : 'text-center text-danger'}>\r\n                                    {this.state.chargeGameResult.message}\r\n                                </div>\r\n                                <button type={\"button\"} className=\"btn btn-primary\" onClick={this.chargeGame}>Nạp vào\r\n                                    game\r\n                                </button>\r\n                                <button type={\"button\"} className=\"btn btn-danger\" data-dismiss=\"modal\">Đóng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Paytowallet from \"../../components/Paytowallet\"\r\n\r\nexport default class PaytowalletPage extends Component {\r\n    render() {\r\n        return (\r\n            <Paytowallet match={this.props.match}></Paytowallet>\r\n        )\r\n    }\r\n}\r\n","const historyActionTypes = {\r\n    GET_CARD_HISTORY: 'GET_CARD_HISTORY',\r\n    GET_PAY_TO_GAME_HISTORY: 'GET_PAY_TO_GAME_HISTORY',\r\n}\r\nexport default historyActionTypes;","import historyActionTypes from \"../actionTypes/history.actiontypes\";\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from \"../config/ApiConfig\";\r\nimport apiConfig from \"../config/ApiConfig\";\r\nimport isloadingAction from \"../actions/isloading.actions\";\r\n\r\nconst historyActions = {};\r\n\r\nhistoryActions.getCardHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getCardHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getCardHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.filterPayToGameHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPayToGameHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getPayToGameHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.getPayToGameHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_PAY_TO_GAME_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nhistoryActions.getCardHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_CARD_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nexport default historyActions;","import React, { Component } from 'react'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport { connect } from 'react-redux'\r\nimport historyActions from \"../actions/history.actions\"\r\nimport gameActions from \"../actions/games.actions\"\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass HistoryPayFilter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = new Date();\r\n        var currentDate = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n        var currentDateRequest = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n        this.state = {\r\n            data: [],\r\n            sltGame: '',\r\n            inputStart: currentDate,\r\n            inputFinish: currentDate,\r\n            formDate: currentDateRequest,\r\n            toDate: currentDateRequest\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    handleEvent = (event, picker) => {\r\n        this.setState({\r\n          inputStart: picker.startDate.format('DD/MM/YYYY') ,\r\n          inputFinish: picker.endDate.format('DD/MM/YYYY') ,\r\n          formDate: picker.startDate.format('YYYY-MM-DD') ,\r\n          toDate: picker.endDate.format('YYYY-MM-DD') ,\r\n        });\r\n    }\r\n\r\n    handleFilter = (e) => {\r\n        e.preventDefault();\r\n        let username = 'testcuongthan'//JSON.parse(localStorage.getItem('user')).data.username;\r\n        if(this.props.match.url.includes('lich-su-game')){\r\n            this.props.filterPayToGameHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n        else{\r\n            this.props.filterCardHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.match.url.includes('lich-su-game')){\r\n            if(this.props.historyReducer.payToGameHistory.length > 0){\r\n                this.props.setData(this.props.historyReducer.payToGameHistory, this.props.gamesReducer.data)\r\n            }\r\n            else{\r\n                this.props.setData([])\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.props.historyReducer.cardHistory.length > 0){\r\n                this.props.setData(this.props.historyReducer.cardHistory, this.props.gamesReducer.data)\r\n            }\r\n            else{\r\n                this.props.setData([])\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if( Object.keys(nextProps.gamesReducer.data).length === 0){\r\n            nextProps.getGameList();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let gameElement = null\r\n        if(this.props.gamesReducer['data'].length > 0)\r\n        {\r\n            gameElement = this.props.gamesReducer['data'].map((val, index) => {\r\n                                    return <option key={index} value={val.agent}>{val.name}</option>\r\n                                })\r\n        }\r\n        return (\r\n            <form method=\"POST\" name=\"cardhistory\" onSubmit={this.handleFilter} id=\"cardhistory\">\r\n                <div className=\"box-row width-100\"><label htmlFor=\"config-form\" className=\"col-sm-2 controll-label\">Product:</label>\r\n                    <select name=\"sltGame\" className=\"form-control\" id=\"config-form\" onChange={this.handleChange}>\r\n                        <option value>All</option>\r\n                        {gameElement}\r\n                    </select>\r\n                </div>\r\n                <div className=\"box-row width-100\">\r\n                    <label htmlFor=\"config-demo\" className=\"controll-label col-sm-2\">Time:</label>\r\n                    <DateRangePicker\r\n                        autoApply={true}\r\n                        autoUpdateInput={false}\r\n                        startDate={this.state.inputStart}\r\n                        endDate={this.state.inputFinish}\r\n                        locale={{ format: \"DD/MM/YYYY\" }}\r\n                        onEvent={this.handleEvent}\r\n                        >\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"txtDaterange\"\r\n                            value={this.state.inputStart + ' - ' + this.state.inputFinish}\r\n                            readOnly={true}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </DateRangePicker>\r\n                </div>\r\n                {/* <button id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">Search</button> */}\r\n                <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                            <div className={'dot-loader'}>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                            :'Tìm kiếm'}</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n    historyReducer: state.historyReducer,\r\n    isLoadingReducer: state.isLoadingReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        filterCardHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.getCardHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        filterPayToGameHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.filterPayToGameHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HistoryPayFilter));","import React, { Component } from 'react'\r\nimport HistoryPayFilter from './HistoryPayFilter'\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PayToGameHistory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            payToGameHistory: [],\r\n            gameData: []\r\n        }\r\n    }\r\n\r\n    getChildData = (data, gameData) => {\r\n        this.setState({\r\n            payToGameHistory: data,\r\n            gameData: gameData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let {payToGameHistory, gameData} = this.state;\r\n        let dataElement = null;\r\n        if(payToGameHistory.length > 0)\r\n        {\r\n            dataElement = payToGameHistory.map((val, index) => {\r\n                const gameInfo = gameData.filter(e => e.agent.includes(val.product_id));\r\n                return (<tr key={index}>\r\n                            <td>{val.transaction_id}</td>\r\n                            <td>{val.amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                            <td>{val.gold}</td>\r\n                            <td>{gameInfo[0].name}</td>\r\n                            <td>{val.server_id}</td>\r\n                            <td>{val.card_status}</td>\r\n                            <td>{val.create_date}</td>\r\n                        </tr>)\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container paytogamehistory\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={match}></PayBreadcrumb>\r\n                    <h3>Lịch sử nạp vào game</h3>\r\n                    <HistoryPayFilter setData={this.getChildData}></HistoryPayFilter>\r\n                    <div className=\"table-responsive\" style={{width: '100%'}}>\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Transaction ID</td>\r\n                                    <td>Mệnh giá</td>\r\n                                    <td>Giá trị duy đổi</td>\r\n                                    <td>Game</td>\r\n                                    <td>Server</td>\r\n                                    <td>Trạng thái nạp vào game</td>\r\n                                    <td>Ngày thực hiện</td>\r\n                                </tr>\r\n                                {\r\n                                    dataElement !== null?dataElement:\r\n                                    <tr>\r\n                                        <td>Không có dữ liệu</td>\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                    </tr>\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    historyReducer: state.historyReducer,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PayToGameHistory));","import React, { Component } from 'react'\r\nimport PayToGameHistory from '../../components/PayToGameHistory';\r\n\r\nexport default class HistoryPayToGamePage extends Component {\r\n    render() {\r\n        return (\r\n            <PayToGameHistory />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport HistoryPayFilter from './HistoryPayFilter'\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PayToWalletHistory extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            historyCard: [],\r\n            gameData: []\r\n        }\r\n    }\r\n\r\n    getChildData = (data, gameData) => {\r\n        this.setState({\r\n            historyCard: data,\r\n            gameData: gameData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let {historyCard, gameData} = this.state;\r\n        let historyElement = null;\r\n        if(historyCard.length > 0)\r\n        {\r\n            historyElement = historyCard.map((val, index) => {\r\n                const gameInfo = gameData.filter(e => e.agent.includes(val.product_id));\r\n                return (<tr key={index}>\r\n                            <td>{val.transaction_id}</td>\r\n                            <td>{gameInfo[0].name}</td>\r\n                            <td>{val.card_type}</td>\r\n                            <td>{val.amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                            <td>{val.gold}</td>\r\n                            <td>{val.card_status}</td>\r\n                            <td>{val.card_message}</td>\r\n                            <td>{val.create_date}</td>\r\n                        </tr>)\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container paytogamehistory\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={match}></PayBreadcrumb>\r\n                    <h3>Lịch sử ví</h3>\r\n                    <HistoryPayFilter setData={this.getChildData}></HistoryPayFilter>\r\n                    <div className=\"table-responsive\" style={{width: '100%'}}>\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Transaction ID</td>\r\n                                    <td>Game</td>\r\n                                    <td>Loại thẻ</td>\r\n                                    <td>Mệnh giá</td>\r\n                                    <td>Giá trị duy đổi</td>\r\n                                    <td>Mã lỗi</td>\r\n                                    <td>Thông báo</td>\r\n                                    <td>Ngày thực hiện</td>\r\n                                </tr>\r\n                                {\r\n                                    historyElement !== null?\r\n                                    historyElement:\r\n                                    <tr>\r\n                                        <td>Không có dữ liệu</td>\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                    </tr>\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(PayToWalletHistory);","import React, { Component } from 'react'\r\nimport PayToWalletHistory from '../../components/PayToWalletHistory';\r\n\r\nexport default class HistoryPayToWalletPage extends Component {\r\n    render() {\r\n        return (\r\n            <PayToWalletHistory></PayToWalletHistory>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"../assets/css/404.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>404</h1>\r\n                    </div>\r\n                    <h2>Oops! Không có trang được tìm thấy</h2>\r\n                    <p>Trang đang tìm kiếm có thể bị xóa hoặc không tồn tại. <Link to=\"/\">Trang chủ</Link></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport loginAction from \"../actions/login.actions\"\r\nimport { connect } from \"react-redux\";  \r\n\r\nclass AppleLoginCallback extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    parseJwt = (token) => {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n\r\n    componentDidMount(){\r\n        let queryString = require('query-string');\r\n        let strParams = this.props.location.hash;\r\n        let params = queryString.parse(strParams);\r\n        if (this.props.login.isLogged === false && params.id_token !== undefined){\r\n            let tokenData = this.parseJwt(params.id_token)        \r\n            this.props.appleSignIn(tokenData.sub)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        appleSignIn: (sub) => {\r\n            dispatch(loginAction.LoginApple(sub))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(AppleLoginCallback))","import React from 'react'\r\nimport Homepage from './pages/homepage/Homepage';\r\nimport Loginpage from './pages/login/Loginpage';\r\nimport Detailpage from './pages/detailpage/Detailpage';\r\nimport PayToGamePage from './pages/paymentpage/PayToGamePage';\r\nimport PayToWalletPage from './pages/paymentpage/PayToWalletPage';\r\nimport HistoryPayToGamePage from './pages/paymentpage/HistoryPayToGamePage';\r\nimport HistoryPayToWalletPage from './pages/paymentpage/HistoryPayToWalletPage';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport AppleLoginCallBack from \"./components/AppleLoginCallback\";\r\n\r\nconst Routes = [\r\n    {\r\n        path: \"/login\",\r\n        exact: true,\r\n        main: () => <Loginpage />,\r\n    },\r\n    {\r\n        path: \"/login/appleCallback\",\r\n        exact: true,\r\n        main: () => <AppleLoginCallBack />,\r\n    },\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: () => <Homepage />,\r\n    },\r\n    {\r\n        path: \"/post-detail/:slug\",\r\n        exact: false,\r\n        main: ({match, history}) => <Detailpage match={match} history={history} />,\r\n    },\r\n    {\r\n        path: \"/nap-game/:slug-g:id\",\r\n        exact: false,\r\n        main: ({match}) => <PayToGamePage match={match} />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/nap-vi/:slug-g:id\",\r\n        exact: false,\r\n        main: (match) => <PayToWalletPage match={match} />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/lich-su-game/:slug-g:id\",\r\n        exact: true,\r\n        main: () => <HistoryPayToGamePage />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/lich-su-vi/:slug-g:id\",\r\n        exact: true,\r\n        main: () => <HistoryPayToWalletPage />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"*\",\r\n        exact: false,\r\n        main: () => <PageNotFound />\r\n    },\r\n]\r\n\r\nexport default Routes","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Private Route\r\n */\r\nconst PrivateRoutes = ({ component: Comp, isLogged, path, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        return isLogged ? (\r\n          <Comp {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: {\r\n                prevLocation: path,\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { connect } from \"react-redux\";  \r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport Routes from './routes';\r\nimport './assets/css/style.css';\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Header></Header>\r\n                        {this.InitRoute(Routes)}\r\n                    <Footer></Footer>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    InitRoute = (Routes) => {\r\n        let result = null;\r\n        if(Routes.length > 0){\r\n            result = Routes.map((val, index) => {\r\n                if(val.isLogged){\r\n                    return <PrivateRoutes key={index} path={val.path} isLogged={this.props.login.isLogged} component={val.main} exact={val.exact}></PrivateRoutes>\r\n                }\r\n                return (<Route key={index} path={val.path} component={val.main} exact={val.exact}></Route>)\r\n            })\r\n        }\r\n        return <Switch>{result}</Switch>\r\n    } \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","import gameActionTypes from \"../actionTypes/game.actiontypes\"; \r\n\r\nvar initialState = {\r\n    data: {},\r\n    detail: {},\r\n    errors: null\r\n};\r\n\r\nvar gameReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case gameActionTypes.GET_ALL_GAME:{\r\n            state.data = action.result.data.data;\r\n            return {...state};\r\n        }\r\n        case gameActionTypes.GET_DETAIL_GAME_TO_GAME:{\r\n            state.detail = action.result.data.data;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n}\r\n\r\nexport default gameReducer;","import sliderActionTypes from \"../actionTypes/slider.actiontypes\"; \r\nimport CommonConfig from \"../config/CommonConfig\";\r\nvar initialState = [\r\n];\r\n\r\nvar sliderReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case sliderActionTypes.GET_ALL:{\r\n            let data = JSON.parse(action.result.data.data[0].items);\r\n            let newSlider = [];\r\n            for(var i = 0; i < data.length; i++)\r\n            {\r\n                newSlider.push({\r\n                    title: data[i].imageTitle ,\r\n                    link: data[i].imageRedirect ,\r\n                    image: CommonConfig.assetDomain + data[i].imagePath ,\r\n                    description: data[i].imageDescription ,\r\n                });\r\n            }\r\n            state = newSlider\r\n            return state;\r\n        }\r\n            \r\n        default: {\r\n            return [...state];\r\n        }\r\n    }\r\n}\r\n\r\nexport default sliderReducer;","import loginActionTypes from '../actionTypes/login.actiontypes'; \r\n\r\nlet initialState = {\r\n    isLogged : localStorage.getItem('user') ? true : false,\r\n    data: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {\"id\": null,\"username\": null,\"email\": null,\"fullname\": null,\"birthday\": null,\"sex\": null,\"identityNumber\": null,\"mobile\": null,\"address\": null,\"city\": null,\"company\": null,\"companyAddress\": null,\"createDate\": null,\"fastReg\": null,\"lastLogin\": null,\"identityDate\": null,\"identityPlace\": null,\"ip\": null,\"status\": null},\r\n    error: null\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case loginActionTypes.LOGIN_RESQUEST: {\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case loginActionTypes.LOGIN_SUCCESS:{\r\n            localStorage.setItem(\"user\", JSON.stringify(action.result.data));\r\n            state.data = action.result.data;\r\n            state.isLogged = true;\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        }\r\n        case loginActionTypes.LOGIN_FAILURE:{\r\n            state.isLogged = false;\r\n            state.error = action.result.data\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case loginActionTypes.LOGOUT:{\r\n            console.log('1')\r\n            localStorage.removeItem(\"user\");\r\n            state.isLogged = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default: return {\r\n            ...state\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default loginReducer;","import postActionTypes from \"../actionTypes/post.actiontypes\"; \r\n\r\nvar initialState = {\r\n    listPost: {},\r\n    detailPost: null,\r\n    errors: null\r\n}\r\n;\r\n\r\nvar postReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case postActionTypes.GET_ALL_POST:{\r\n            state.listPost = action.result.data.data;\r\n            return state;\r\n        }\r\n        case postActionTypes.GET_DETAIL_POST:{\r\n            state.detailPost = action.result.data.data[0];\r\n            return {...state};\r\n\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default postReducer;","import paymentActionTypes from \"../actionTypes/payment.actiontypes\"; \r\nvar initialState = {\r\n    userRole: {},\r\n    chargeCard: {},\r\n    chargeAtm: {},\r\n    chargeAtmSuccess: {},\r\n}\r\n\r\nvar paymentReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case paymentActionTypes.CHARGE_CARD:{\r\n            state.chargeCard = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.CHARGE_ATM:{\r\n            state.chargeAtm = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.GET_USER_ROLE:{\r\n            state.userRole = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.CHARGE_ATM_SUCCESS:{\r\n            state.chargeAtmSuccess = action.result\r\n            return state;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default paymentReducer;","import isLoadingActionType from '../actionTypes/isloading.actiontypes';\r\n\r\nlet initialState = {\r\n  isLoading: false\r\n};\r\n\r\nconst isLoadingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case isLoadingActionType.SHOW_LOADING:{\r\n            return {\r\n                isLoading: true\r\n            };\r\n        }\r\n        // hide loader\r\n        case isLoadingActionType.HIDE_LOADING:{\r\n            return {\r\n                isLoading: false\r\n            };\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport default isLoadingReducer;","import historyActionTypes from \"../actionTypes/history.actiontypes\"; \r\n\r\nvar initialState = {\r\n    cardHistory: [],\r\n    payToGameHistory: []\r\n};\r\n\r\nvar historyReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case historyActionTypes.GET_CARD_HISTORY:{\r\n            state.cardHistory = action.result.data.data\r\n            return state;\r\n        }\r\n        case historyActionTypes.GET_PAY_TO_GAME_HISTORY:{\r\n            state.payToGameHistory = action.result.data.data\r\n            return state;\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n}\r\n\r\nexport default historyReducer;","import { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./game.reducer\";\r\nimport sliderReducer from \"./slider.reducer\";\r\nimport loginReducer from \"./login.reducer\";\r\nimport postReducer from \"./posts.reducer\";\r\nimport paymentReducer from \"./payment.reducer\";\r\nimport isLoadingReducer from \"./isloading.reducer\"\r\nimport historyReducer from \"./history.reducer\"\r\n\r\nconst appReducers = combineReducers({\r\n    gamesReducer,\r\n    sliderReducer,\r\n    loginReducer,\r\n    postReducer,\r\n    paymentReducer,\r\n    isLoadingReducer,\r\n    historyReducer\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'popper.js';\r\nimport App from './App';\r\n//store\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport appReducers from \"./reducers/index\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(appReducers, applyMiddleware(thunk));\r\n// console.log(store.getState());\r\nReactDOM.render(\r\n    <Provider store={ store }>\r\n        <App />\r\n    </Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}