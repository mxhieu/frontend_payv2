{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import historyActionTypes from\"../actionTypes/history.actiontypes\";import Api from'../utils/Api';import ApiConfig from\"../config/ApiConfig\";import apiConfig from\"../config/ApiConfig\";import isloadingAction from\"../actions/isloading.actions\";var historyActions={};historyActions.getCardHistoryRequest=function(username,game,formDate,toDate){var md5=require('md5');var sign=md5(username+apiConfig.jwtToken);var endpoint=ApiConfig.domain+ApiConfig.endpoint.getCardHistory+'?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch(isloadingAction.showLoader());_context.next=3;return Api.call('GET',endpoint).then(function(result){if(result.data.status===1){dispatch(historyActions.getCardHistory(result));}});case 3:dispatch(isloadingAction.hideLoader());case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};historyActions.filterPayToGameHistoryRequest=function(username,game,formDate,toDate){var md5=require('md5');var sign=md5(username+apiConfig.jwtToken);var endpoint=ApiConfig.domain+ApiConfig.endpoint.getPayToGameHistory+'?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch(isloadingAction.showLoader());_context2.next=3;return Api.call('GET',endpoint).then(function(result){if(result.data.status===1){dispatch(historyActions.getPayToGameHistory(result));}});case 3:dispatch(isloadingAction.hideLoader());case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};historyActions.getPayToGameHistory=function(result){return{type:historyActionTypes.GET_PAY_TO_GAME_HISTORY,result:result};};historyActions.getCardHistory=function(result){return{type:historyActionTypes.GET_CARD_HISTORY,result:result};};export default historyActions;","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/actions/history.actions.js"],"names":["historyActionTypes","Api","ApiConfig","apiConfig","isloadingAction","historyActions","getCardHistoryRequest","username","game","formDate","toDate","md5","require","sign","jwtToken","endpoint","domain","getCardHistory","dispatch","showLoader","call","then","result","data","status","hideLoader","filterPayToGameHistoryRequest","getPayToGameHistory","type","GET_PAY_TO_GAME_HISTORY","GET_CARD_HISTORY"],"mappings":"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","sourcesContent":["import historyActionTypes from \"../actionTypes/history.actiontypes\";\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from \"../config/ApiConfig\";\r\nimport apiConfig from \"../config/ApiConfig\";\r\nimport isloadingAction from \"../actions/isloading.actions\";\r\n\r\nconst historyActions = {};\r\n\r\nhistoryActions.getCardHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getCardHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getCardHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.filterPayToGameHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPayToGameHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getPayToGameHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.getPayToGameHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_PAY_TO_GAME_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nhistoryActions.getCardHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_CARD_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nexport default historyActions;"]},"metadata":{},"sourceType":"module"}