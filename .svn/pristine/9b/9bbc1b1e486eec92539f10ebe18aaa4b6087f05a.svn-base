{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\myapp\\\\src\\\\components\\\\HistoryPayFilter.js\";\nimport React, { Component } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport { connect } from 'react-redux';\nimport historyActions from \"../actions/history.actions\";\nimport gameActions from \"../actions/games.actions\";\nimport { withRouter } from 'react-router-dom';\n\nclass HistoryPayFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleEvent = (event, picker) => {\n      this.setState({\n        inputStart: picker.startDate.format('DD/MM/YYYY'),\n        inputFinish: picker.endDate.format('DD/MM/YYYY'),\n        formDate: picker.startDate.format('YYYY-MM-DD'),\n        toDate: picker.endDate.format('YYYY-MM-DD')\n      });\n    };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      let username = 'testcuongthan'; //JSON.parse(localStorage.getItem('user')).data.username;\n\n      if (this.props.match.url.includes('lich-su-game')) {\n        this.props.filterPayToGameHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate);\n      } else {\n        this.props.filterCardHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate);\n      }\n    };\n\n    var date = new Date();\n    var currentDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    var currentDateRequest = `${date.getFullYear()}-${date.getMonth() + 1}-${date.getDate()}`;\n    this.state = {\n      sltGame: '',\n      inputStart: currentDate,\n      inputFinish: currentDate,\n      formDate: currentDateRequest,\n      toDate: currentDateRequest\n    };\n  }\n\n  componentDidUpdate() {\n    // console.log(this.props.setDate([]))\n    if (this.props.historyReducer.cardHistory.length > 0) {\n      this.props.setData(this.props.historyReducer.cardHistory);\n    } else {\n      this.props.setData([]);\n    }\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (Object.keys(nextProps.gamesReducer.data).length === 0) {\n      nextProps.getGameList();\n    }\n\n    return null;\n  }\n\n  render() {\n    // console.log(this.props)\n    let gameElement = null;\n\n    if (this.props.gamesReducer['data'].length > 0) {\n      gameElement = this.props.gamesReducer['data'].map((val, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          value: val.agent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, val.name);\n      });\n    }\n\n    return React.createElement(\"form\", {\n      method: \"POST\",\n      name: \"cardhistory\",\n      onSubmit: this.handleFilter,\n      id: \"cardhistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"config-form\",\n      className: \"col-sm-2 controll-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Product:\"), React.createElement(\"select\", {\n      name: \"sltGame\",\n      className: \"form-control\",\n      id: \"config-form\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"All\"), gameElement)), React.createElement(\"div\", {\n      className: \"box-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"config-demo\",\n      className: \"controll-label col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Time:\"), React.createElement(DateRangePicker, {\n      autoApply: true,\n      autoUpdateInput: false,\n      startDate: this.state.inputStart,\n      endDate: this.state.inputFinish,\n      locale: {\n        format: \"DD/MM/YYYY\"\n      },\n      onEvent: this.handleEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"txtDaterange\",\n      value: this.state.inputStart + ' - ' + this.state.inputFinish,\n      readOnly: true,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      id: \"submitbutton\",\n      className: \"col-sm-2 btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  gamesReducer: state.gamesReducer,\n  historyReducer: state.historyReducer\n});\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    filterCardHistory: (username, game, formDate, toDate) => {\n      dispatch(historyActions.getCardHistoryRequest(username, game, formDate, toDate));\n    },\n    filterPayToGameHistory: (username, game, formDate, toDate) => {\n      dispatch(historyActions.filterPayToGameHistoryRequest(username, game, formDate, toDate));\n    },\n    getGameList: () => {\n      dispatch(gameActions.getAllRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HistoryPayFilter));","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/components/HistoryPayFilter.js"],"names":["React","Component","DateRangePicker","connect","historyActions","gameActions","withRouter","HistoryPayFilter","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleEvent","picker","inputStart","startDate","format","inputFinish","endDate","formDate","toDate","handleFilter","e","preventDefault","username","match","url","includes","filterPayToGameHistory","state","sltGame","filterCardHistory","date","Date","currentDate","getDate","getMonth","getFullYear","currentDateRequest","componentDidUpdate","historyReducer","cardHistory","length","setData","getDerivedStateFromProps","nextProps","prevState","Object","keys","gamesReducer","data","getGameList","render","gameElement","map","val","index","agent","mapStateToProps","mapDispatchToProps","dispatch","game","getCardHistoryRequest","filterPayToGameHistoryRequest","getAllRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport { connect } from 'react-redux'\r\nimport historyActions from \"../actions/history.actions\"\r\nimport gameActions from \"../actions/games.actions\"\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass HistoryPayFilter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = new Date();\r\n        var currentDate = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n        var currentDateRequest = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n        this.state = {\r\n            sltGame: '',\r\n            inputStart: currentDate,\r\n            inputFinish: currentDate,\r\n            formDate: currentDateRequest,\r\n            toDate: currentDateRequest\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    handleEvent = (event, picker) => {\r\n        this.setState({\r\n          inputStart: picker.startDate.format('DD/MM/YYYY') ,\r\n          inputFinish: picker.endDate.format('DD/MM/YYYY') ,\r\n          formDate: picker.startDate.format('YYYY-MM-DD') ,\r\n          toDate: picker.endDate.format('YYYY-MM-DD') ,\r\n        });\r\n    }\r\n\r\n    handleFilter = (e) => {\r\n        e.preventDefault();\r\n        let username = 'testcuongthan'//JSON.parse(localStorage.getItem('user')).data.username;\r\n        if(this.props.match.url.includes('lich-su-game')){\r\n            this.props.filterPayToGameHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n        else{\r\n            this.props.filterCardHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // console.log(this.props.setDate([]))\r\n        if(this.props.historyReducer.cardHistory.length > 0){\r\n            this.props.setData(this.props.historyReducer.cardHistory)\r\n        }\r\n        else{\r\n            this.props.setData([])\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if( Object.keys(nextProps.gamesReducer.data).length === 0)\r\n        {\r\n            nextProps.getGameList();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.props)\r\n        let gameElement = null\r\n        if(this.props.gamesReducer['data'].length > 0)\r\n        {\r\n            gameElement = this.props.gamesReducer['data'].map((val, index) => {\r\n                                    return <option key={index} value={val.agent}>{val.name}</option>\r\n                                })\r\n        }\r\n        return (\r\n            <form method=\"POST\" name=\"cardhistory\" onSubmit={this.handleFilter} id=\"cardhistory\">\r\n                <div className=\"box-row\"><label htmlFor=\"config-form\" className=\"col-sm-2 controll-label\">Product:</label>\r\n                <select name=\"sltGame\" className=\"form-control\" id=\"config-form\" onChange={this.handleChange}>\r\n                    <option value>All</option>\r\n                    {gameElement}\r\n                </select></div>\r\n                <div className=\"box-row\">\r\n                    <label htmlFor=\"config-demo\" className=\"controll-label col-sm-2\">Time:</label>\r\n                    <DateRangePicker\r\n                        autoApply={true}\r\n                        autoUpdateInput={false}\r\n                        startDate={this.state.inputStart}\r\n                        endDate={this.state.inputFinish}\r\n                        locale={{ format: \"DD/MM/YYYY\" }}\r\n                        onEvent={this.handleEvent}\r\n                        >\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"txtDaterange\"\r\n                            value={this.state.inputStart + ' - ' + this.state.inputFinish}\r\n                            readOnly={true}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </DateRangePicker>\r\n                </div>\r\n                <button id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">Search</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n    historyReducer: state.historyReducer,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        filterCardHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.getCardHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        filterPayToGameHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.filterPayToGameHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HistoryPayFilter));"]},"metadata":{},"sourceType":"module"}