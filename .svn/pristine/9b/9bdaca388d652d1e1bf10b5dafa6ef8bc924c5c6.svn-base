{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\src\\\\utils\\\\validateInput.js\";\nimport validator from 'validator';\nimport React, { Component } from 'react';\nexport const required = value => {\n  if (!value.toString().trim().length) {\n    return `${value} bắt buộc nhập.`;\n  }\n};\nexport const email = value => {\n  if (!validator.isEmail(value)) {\n    return `${value} is not a valid email.`;\n  }\n};\nexport const lt = (value, props) => {\n  if (!value.toString().trim().length > props.maxLength) {\n    return React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"The value exceeded \", props.maxLength, \" symbols.\");\n  }\n};\nexport const password = (value, props, components) => {\n  if (value !== components['confirm'][0].value) {\n    // components['password'][0].value !== components['confirm'][0].value\n    return React.createElement(\"span\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Passwords are not equal.\");\n  }\n};","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/utils/validateInput.js"],"names":["validator","React","Component","required","value","toString","trim","length","email","isEmail","lt","props","maxLength","password","components"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,MAAI,CAACA,KAAK,CAACC,QAAN,GAAiBC,IAAjB,GAAwBC,MAA7B,EAAqC;AACnC,WAAQ,GAAEH,KAAM,iBAAhB;AACD;AACF,CAJM;AAMP,OAAO,MAAMI,KAAK,GAAIJ,KAAD,IAAW;AAC9B,MAAI,CAACJ,SAAS,CAACS,OAAV,CAAkBL,KAAlB,CAAL,EAA+B;AAC7B,WAAQ,GAAEA,KAAM,wBAAhB;AACD;AACF,CAJM;AAMP,OAAO,MAAMM,EAAE,GAAG,CAACN,KAAD,EAAQO,KAAR,KAAkB;AAClC,MAAI,CAACP,KAAK,CAACC,QAAN,GAAiBC,IAAjB,GAAwBC,MAAzB,GAAkCI,KAAK,CAACC,SAA5C,EAAuD;AACrD,WAAO;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4CD,KAAK,CAACC,SAAlD,cAAP;AACD;AACF,CAJM;AAMP,OAAO,MAAMC,QAAQ,GAAG,CAACT,KAAD,EAAQO,KAAR,EAAeG,UAAf,KAA8B;AACpD,MAAIV,KAAK,KAAKU,UAAU,CAAC,SAAD,CAAV,CAAsB,CAAtB,EAAyBV,KAAvC,EAA8C;AAAE;AAC9C,WAAO;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAP;AACD;AACF,CAJM","sourcesContent":["import validator from 'validator';\r\nimport React, { Component } from 'react'\r\n\r\nexport const required = (value) => {\r\n  if (!value.toString().trim().length) {\r\n    return `${value} bắt buộc nhập.`;\r\n  }\r\n};\r\n \r\nexport const email = (value) => {\r\n  if (!validator.isEmail(value)) {\r\n    return `${value} is not a valid email.`\r\n  }\r\n};\r\n \r\nexport const lt = (value, props) => {\r\n  if (!value.toString().trim().length > props.maxLength) {\r\n    return <span className=\"error\">The value exceeded {props.maxLength} symbols.</span>\r\n  }\r\n};\r\n \r\nexport const password = (value, props, components) => {\r\n  if (value !== components['confirm'][0].value) { // components['password'][0].value !== components['confirm'][0].value\r\n    return <span className=\"error\">Passwords are not equal.</span>\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}