{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\src\\\\components\\\\AppleLogin.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport ReactAppleLogin from 'react-apple-login';\nimport SocialConfig from \"../config/SocialConfig\";\nimport { withRouter } from 'react-router-dom';\nimport loginAction from \"../actions/login.actions\";\n\nclass AppleLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.parseJwt = token => {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.login.isLogged === false) {\n      let queryString = require('query-string');\n\n      let strParams = this.props.location.hash;\n      let params = queryString.parse(strParams);\n      let tokenData = this.parseJwt(params.id_token);\n      console.log(tokenData);\n      this.props.appleSignIn(tokenData.sub);\n    }\n  }\n\n  render() {\n    // if (this.props.login.isLogged === true) {\n    //     return <Redirect to=\"/\" />;\n    // }\n    return React.createElement(ReactAppleLogin, {\n      clientId: SocialConfig.apple.client_id,\n      redirectURI: SocialConfig.apple.redirect_url,\n      responseType: \"id_token\",\n      responseMode: \"query\",\n      designProp: {\n        height: 50,\n        width: 255,\n        color: \"black\",\n        border: false,\n        type: \"sign-in\",\n        border_radius: 10,\n        scale: 1,\n        locale: \"vi_VI\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.loginReducer\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    appleSignIn: sub => {\n      dispatch(loginAction.LoginApple(sub));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AppleLogin));","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/components/AppleLogin.js"],"names":["React","Component","connect","ReactAppleLogin","SocialConfig","withRouter","loginAction","AppleLogin","constructor","props","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","componentDidMount","login","isLogged","queryString","require","strParams","location","hash","params","tokenData","id_token","console","log","appleSignIn","sub","render","apple","client_id","redirect_url","height","width","color","border","type","border_radius","scale","locale","mapStateToProps","state","loginReducer","mapDispatchToProps","dispatch","LoginApple"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAE/BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAIlBC,QAJkB,GAINC,KAAD,IAAW;AAClB,UAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,UAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,UAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AACxE,eAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,OAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAIA,aAAOC,IAAI,CAACC,KAAL,CAAWV,WAAX,CAAP;AACH,KAZiB;AAEjB;;AAYDW,EAAAA,iBAAiB,GAAE;AACf,QAAI,KAAKlB,KAAL,CAAWmB,KAAX,CAAiBC,QAAjB,KAA8B,KAAlC,EAAwC;AACpC,UAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,UAAIC,SAAS,GAAG,KAAKvB,KAAL,CAAWwB,QAAX,CAAoBC,IAApC;AACA,UAAIC,MAAM,GAAGL,WAAW,CAACJ,KAAZ,CAAkBM,SAAlB,CAAb;AACA,UAAII,SAAS,GAAG,KAAK1B,QAAL,CAAcyB,MAAM,CAACE,QAArB,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,SAAZ;AAEA,WAAK3B,KAAL,CAAW+B,WAAX,CAAuBJ,SAAS,CAACK,GAAjC;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL;AACA;AACA;AACA,WACI,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAEtC,YAAY,CAACuC,KAAb,CAAmBC,SAA9C;AAAyD,MAAA,WAAW,EAAExC,YAAY,CAACuC,KAAb,CAAmBE,YAAzF;AACA,MAAA,YAAY,EAAE,UADd;AAEA,MAAA,YAAY,EAAE,OAFd;AAGA,MAAA,UAAU,EACN;AACGC,QAAAA,MAAM,EAAE,EADX;AAEGC,QAAAA,KAAK,EAAE,GAFV;AAGGC,QAAAA,KAAK,EAAE,OAHV;AAIGC,QAAAA,MAAM,EAAE,KAJX;AAKGC,QAAAA,IAAI,EAAE,SALT;AAMGC,QAAAA,aAAa,EAAE,EANlB;AAOGC,QAAAA,KAAK,EAAE,CAPV;AAQGC,QAAAA,MAAM,EAAE;AARX,OAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAkBH;;AAlD8B;;AAqDnC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACL3B,IAAAA,KAAK,EAAE2B,KAAK,CAACC;AADR,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWjD,KAAX,KAAqB;AAC5C,SAAO;AACH+B,IAAAA,WAAW,EAAGC,GAAD,IAAS;AAClBiB,MAAAA,QAAQ,CAACpD,WAAW,CAACqD,UAAZ,CAAuBlB,GAAvB,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAevC,OAAO,CAClBoD,eADkB,EAElBG,kBAFkB,CAAP,CAGbpD,UAAU,CAACE,UAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";  \r\nimport ReactAppleLogin from 'react-apple-login'\r\nimport SocialConfig from \"../config/SocialConfig\"\r\nimport { withRouter } from 'react-router-dom';\r\nimport loginAction from \"../actions/login.actions\"\r\n\r\nclass AppleLogin extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    parseJwt = (token) => {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n\r\n    componentDidMount(){\r\n        if (this.props.login.isLogged === false){\r\n            let queryString = require('query-string');\r\n            let strParams = this.props.location.hash;\r\n            let params = queryString.parse(strParams);\r\n            let tokenData = this.parseJwt(params.id_token)\r\n            console.log(tokenData)\r\n        \r\n            this.props.appleSignIn(tokenData.sub)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // if (this.props.login.isLogged === true) {\r\n        //     return <Redirect to=\"/\" />;\r\n        // }\r\n        return (\r\n            <ReactAppleLogin clientId={SocialConfig.apple.client_id} redirectURI={SocialConfig.apple.redirect_url}\r\n            responseType={\"id_token\"} \r\n            responseMode={\"query\"}\r\n            designProp={\r\n                {\r\n                   height: 50,\r\n                   width: 255,\r\n                   color: \"black\",\r\n                   border: false,\r\n                   type: \"sign-in\",\r\n                   border_radius: 10,\r\n                   scale: 1,\r\n                   locale: \"vi_VI\", \r\n                }\r\n            }\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        appleSignIn: (sub) => {\r\n            dispatch(loginAction.LoginApple(sub))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(AppleLogin));"]},"metadata":{},"sourceType":"module"}