{"ast":null,"code":"import loginActionTypes from '../actionTypes/login.actiontypes';\nimport Api from '.././utils/Api';\nimport ApiConfig from '../config/ApiConfig';\nconst loginAction = {};\n\nloginAction.Login = (username, password) => {\n  let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username=' + username + '&password=' + password;\n  return async dispatch => {\n    await Api.call('GET', endpoint).then(result => {\n      if (result.data.status === 1) {\n        dispatch(loginAction.success(result));\n      } else {\n        dispatch(loginAction.failure(result));\n      }\n    });\n  };\n};\n\nloginAction.success = result => {\n  return {\n    type: loginActionTypes.LOGIN_SUCCESS,\n    result\n  };\n};\n\nloginAction.failure = result => {\n  return {\n    type: loginActionTypes.LOGIN_FAILURE,\n    result\n  };\n};\n\nloginAction.getBussinessToken = accessToken => {\n  let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token=' + accessToken;\n  return async dispatch => {\n    await Api.call('GET', endpoint).then(res => {\n      if (res.status === 200 && res.data.token_for_business) {\n        console.log(res.data.token_for_business);\n        dispatch(loginAction.loginFacebook(accessToken, res.data.token_for_business));\n      }\n    });\n  };\n};\n\nloginAction.loginFacebook = bussinessToken => {\n  let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginFb + \"?tokenForBusiness=\" + bussinessToken;\n  return async dispatch => {\n    await Api.call('GET', endpoint).then(result => {\n      if (result.data.status === 1) {\n        dispatch(loginAction.success(result));\n      } else {\n        dispatch(loginAction.failure(result));\n      }\n    });\n  };\n};\n\nexport default loginAction;","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/actions/login.actions.js"],"names":["loginActionTypes","Api","ApiConfig","loginAction","Login","username","password","endpoint","domain","login","dispatch","call","then","result","data","status","success","failure","type","LOGIN_SUCCESS","LOGIN_FAILURE","getBussinessToken","accessToken","res","token_for_business","console","log","loginFacebook","bussinessToken","loginFb"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEAA,WAAW,CAACC,KAAZ,GAAoB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxC,MAAIC,QAAQ,GAAGL,SAAS,CAACM,MAAV,GAAmBN,SAAS,CAACK,QAAV,CAAmBE,KAAtC,GAA8C,YAA9C,GAA4DJ,QAA5D,GAAuE,YAAvE,GAAsFC,QAArG;AACA,SAAO,MAAOI,QAAP,IAAoB;AACvB,UAAMT,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBJ,QAAhB,EAA2BK,IAA3B,CAAiCC,MAAM,IAAI;AAC7C,UAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACxBL,QAAAA,QAAQ,CAACP,WAAW,CAACa,OAAZ,CAAoBH,MAApB,CAAD,CAAR;AACH,OAFD,MAGI;AACAH,QAAAA,QAAQ,CAACP,WAAW,CAACc,OAAZ,CAAoBJ,MAApB,CAAD,CAAR;AACH;AACJ,KAPK,CAAN;AASH,GAVD;AAWH,CAbD;;AAeAV,WAAW,CAACa,OAAZ,GAAuBH,MAAD,IAAY;AAC9B,SAAO;AACHK,IAAAA,IAAI,EAAElB,gBAAgB,CAACmB,aADpB;AAEHN,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAV,WAAW,CAACc,OAAZ,GAAuBJ,MAAD,IAAY;AAC9B,SAAO;AACHK,IAAAA,IAAI,EAAElB,gBAAgB,CAACoB,aADpB;AAEHP,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAV,WAAW,CAACkB,iBAAZ,GAAiCC,WAAD,IAAiB;AAC7C,MAAIf,QAAQ,GAAG,0EAAwEe,WAAvF;AACA,SAAO,MAAOZ,QAAP,IAAoB;AACvB,UAAMT,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBJ,QAAhB,EAA2BK,IAA3B,CAAgCW,GAAG,IAAI;AACzC,UAAGA,GAAG,CAACR,MAAJ,KAAe,GAAf,IAAsBQ,GAAG,CAACT,IAAJ,CAASU,kBAAlC,EACA;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACT,IAAJ,CAASU,kBAArB;AACAd,QAAAA,QAAQ,CAACP,WAAW,CAACwB,aAAZ,CAA0BL,WAA1B,EAAuCC,GAAG,CAACT,IAAJ,CAASU,kBAAhD,CAAD,CAAR;AACH;AACJ,KANK,CAAN;AAQH,GATD;AAUH,CAZD;;AAcArB,WAAW,CAACwB,aAAZ,GAA6BC,cAAD,IAAoB;AAC5C,MAAIrB,QAAQ,GAAGL,SAAS,CAACM,MAAV,GAAmBN,SAAS,CAACK,QAAV,CAAmBsB,OAAtC,GAAgD,oBAAhD,GAAsED,cAArF;AACA,SAAO,MAAOlB,QAAP,IAAoB;AACvB,UAAMT,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBJ,QAAhB,EAA2BK,IAA3B,CAAgCC,MAAM,IAAI;AAC5C,UAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACxBL,QAAAA,QAAQ,CAACP,WAAW,CAACa,OAAZ,CAAoBH,MAApB,CAAD,CAAR;AACH,OAFD,MAGI;AACAH,QAAAA,QAAQ,CAACP,WAAW,CAACc,OAAZ,CAAoBJ,MAApB,CAAD,CAAR;AACH;AACJ,KAPK,CAAN;AASH,GAVD;AAWH,CAbD;;AAeA,eAAeV,WAAf","sourcesContent":["import loginActionTypes from '../actionTypes/login.actiontypes';\r\nimport Api from '.././utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst loginAction = {};\r\n\r\nloginAction.Login = (username, password) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username='+ username + '&password=' + password;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n          \r\n    }\r\n}\r\n\r\nloginAction.success = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_SUCCESS,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.failure = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_FAILURE,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.getBussinessToken = (accessToken) => {\r\n    let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token='+accessToken;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then(res => {\r\n            if(res.status === 200 && res.data.token_for_business)\r\n            {\r\n                console.log(res.data.token_for_business);\r\n                dispatch(loginAction.loginFacebook(accessToken, res.data.token_for_business));\r\n            }            \r\n        })\r\n        \r\n    }\r\n}\r\n\r\nloginAction.loginFacebook = (bussinessToken) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginFb + \"?tokenForBusiness=\"+ bussinessToken;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport default loginAction;"]},"metadata":{},"sourceType":"module"}