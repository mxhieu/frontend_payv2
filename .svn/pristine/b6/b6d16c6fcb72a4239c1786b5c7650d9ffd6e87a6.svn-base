{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\myapp\\\\src\\\\components\\\\HistoryPayFilter.js\";\nimport React, { Component } from 'react';\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap-daterangepicker/daterangepicker.css';\nimport { connect } from 'react-redux';\nimport historyActions from \"../actions/history.actions\";\nimport gameActions from \"../actions/games.actions\";\n\nclass HistoryPayFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleEvent = (event, picker) => {\n      this.setState({\n        inputStart: picker.startDate.format(\"DD/MM/YYYY\"),\n        inputFinish: picker.endDate.format(\"DD/MM/YYYY\")\n      });\n    };\n\n    this.handleFilter = e => {\n      e.preventDefault();\n      this.props.filterCardHistory(this.state.sltGame, this.state.inputStart, this.state.inputFinish);\n    };\n\n    var date = new Date();\n    var currentDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\n    this.state = {\n      sltGame: '',\n      inputStart: currentDate,\n      inputFinish: currentDate\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (Object.keys(nextProps.gamesReducer.data).length === 0) {\n      nextProps.getGameList();\n    }\n\n    return null;\n  }\n\n  render() {\n    let gameElement = null;\n\n    if (this.props.gamesReducer['data'].length > 0) {\n      gameElement = this.props.gamesReducer['data'].map((val, index) => {\n        return React.createElement(\"option\", {\n          key: index,\n          value: val.agent,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, val.name);\n      });\n    }\n\n    return React.createElement(\"form\", {\n      method: \"POST\",\n      name: \"cardhistory\",\n      onSubmit: this.handleFilter,\n      id: \"cardhistory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"box-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"config-form\",\n      className: \"col-sm-2 controll-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Product:\"), React.createElement(\"select\", {\n      name: \"sltGame\",\n      className: \"form-control\",\n      id: \"config-form\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"All\"), gameElement)), React.createElement(\"div\", {\n      className: \"box-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"config-demo\",\n      className: \"controll-label col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Time:\"), React.createElement(DateRangePicker, {\n      autoApply: true,\n      autoUpdateInput: false,\n      startDate: this.state.inputStart,\n      endDate: this.state.inputFinish,\n      locale: {\n        format: \"DD/MM/YYYY\"\n      },\n      onEvent: this.handleEvent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"txtDaterange\",\n      value: this.state.inputStart + ' - ' + this.state.inputFinish,\n      readOnly: true,\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }))), React.createElement(\"button\", {\n      id: \"submitbutton\",\n      className: \"col-sm-2 btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  gamesReducer: state.gamesReducer\n});\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    filterCardHistory: (game, formDate, toDate) => {\n      dispatch(historyActions.getUserRoleRequest(game, formDate, toDate));\n    },\n    getGameList: () => {\n      dispatch(gameActions.getAllRequest());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryPayFilter);","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/components/HistoryPayFilter.js"],"names":["React","Component","DateRangePicker","connect","historyActions","gameActions","HistoryPayFilter","constructor","props","handleChange","event","target","value","type","checked","name","setState","handleEvent","picker","inputStart","startDate","format","inputFinish","endDate","handleFilter","e","preventDefault","filterCardHistory","state","sltGame","date","Date","currentDate","getDate","getMonth","getFullYear","getDerivedStateFromProps","nextProps","prevState","Object","keys","gamesReducer","data","length","getGameList","render","gameElement","map","val","index","agent","mapStateToProps","mapDispatchToProps","dispatch","game","formDate","toDate","getUserRoleRequest","getAllRequest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport { connect } from 'react-redux'\r\nimport historyActions from \"../actions/history.actions\"\r\nimport gameActions from \"../actions/games.actions\"\r\n\r\nclass HistoryPayFilter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = new Date();\r\n        var currentDate = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n        this.state = {\r\n            sltGame: '',\r\n            inputStart: currentDate,\r\n            inputFinish: currentDate\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    handleEvent = (event, picker) => {\r\n        this.setState({\r\n          inputStart: picker.startDate.format(\"DD/MM/YYYY\"),\r\n          inputFinish: picker.endDate.format(\"DD/MM/YYYY\")\r\n        });\r\n    }\r\n\r\n    handleFilter = (e) => {\r\n        e.preventDefault();\r\n        this.props.filterCardHistory(this.state.sltGame, this.state.inputStart, this.state.inputFinish)\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if( Object.keys(nextProps.gamesReducer.data).length === 0)\r\n        {\r\n            nextProps.getGameList();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let gameElement = null\r\n        if(this.props.gamesReducer['data'].length > 0)\r\n        {\r\n            gameElement = this.props.gamesReducer['data'].map((val, index) => {\r\n                                    return <option key={index} value={val.agent}>{val.name}</option>\r\n                                })\r\n        }\r\n        \r\n        return (\r\n            <form method=\"POST\" name=\"cardhistory\" onSubmit={this.handleFilter} id=\"cardhistory\">\r\n                <div className=\"box-row\"><label htmlFor=\"config-form\" className=\"col-sm-2 controll-label\">Product:</label>\r\n                <select name=\"sltGame\" className=\"form-control\" id=\"config-form\" onChange={this.handleChange}>\r\n                    <option value>All</option>\r\n                    {gameElement}\r\n                </select></div>\r\n                <div className=\"box-row\">\r\n                    <label htmlFor=\"config-demo\" className=\"controll-label col-sm-2\">Time:</label>\r\n                    <DateRangePicker\r\n                        autoApply={true}\r\n                        autoUpdateInput={false}\r\n                        startDate={this.state.inputStart}\r\n                        endDate={this.state.inputFinish}\r\n                        locale={{ format: \"DD/MM/YYYY\" }}\r\n                        onEvent={this.handleEvent}\r\n                        >\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"txtDaterange\"\r\n                            value={this.state.inputStart + ' - ' + this.state.inputFinish}\r\n                            readOnly={true}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </DateRangePicker>\r\n                </div>\r\n                <button id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">Search</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        filterCardHistory: ( game, formDate, toDate ) => {\r\n            dispatch(historyActions.getUserRoleRequest(game, formDate, toDate))\r\n        },\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HistoryPayFilter);"]},"metadata":{},"sourceType":"module"}