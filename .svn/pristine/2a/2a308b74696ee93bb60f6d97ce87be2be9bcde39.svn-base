{"ast":null,"code":"import loginType from '../actionTypes/login.actiontypes';\nimport Api from '.././utils/Api';\nimport ApiConfig from '../config/ApiConfig';\nconst loginAction = {};\n\nloginAction.Login = (username, password) => {\n  let endpoint = ApiConfig.endpoint.login + '?username=' + username + '&password=' + password;\n  return async dispatch => {\n    await Api.call('GET', endpoint).then(result => {\n      if (result.data.status === 1) {\n        console.log('dasdas');\n        dispatch(loginAction.success(result));\n      } else {\n        dispatch(loginAction.failure(result));\n      }\n    });\n  };\n};\n\nloginAction.success = result => {\n  return {\n    type: loginType.LOGIN_SUCCESS,\n    result\n  };\n};\n\nloginAction.failure = result => {\n  return {\n    type: loginType.LOGIN_FAILURE,\n    result\n  };\n};\n\nexport default loginAction;","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/actions/login.actions.js"],"names":["loginType","Api","ApiConfig","loginAction","Login","username","password","endpoint","login","dispatch","call","then","result","data","status","console","log","success","failure","type","LOGIN_SUCCESS","LOGIN_FAILURE"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEAA,WAAW,CAACC,KAAZ,GAAoB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxC,MAAIC,QAAQ,GAAGL,SAAS,CAACK,QAAV,CAAmBC,KAAnB,GAA2B,YAA3B,GAAyCH,QAAzC,GAAoD,YAApD,GAAmEC,QAAlF;AACA,SAAO,MAAOG,QAAP,IAAoB;AACvB,UAAMR,GAAG,CAACS,IAAJ,CAAS,KAAT,EAAgBH,QAAhB,EAA2BI,IAA3B,CAAiCC,MAAM,IAAI;AAC7C,UAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACxBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAP,QAAAA,QAAQ,CAACN,WAAW,CAACc,OAAZ,CAAoBL,MAApB,CAAD,CAAR;AACH,OAHD,MAII;AACAH,QAAAA,QAAQ,CAACN,WAAW,CAACe,OAAZ,CAAoBN,MAApB,CAAD,CAAR;AACH;AACJ,KARK,CAAN;AAUH,GAXD;AAYH,CAdD;;AAgBAT,WAAW,CAACc,OAAZ,GAAuBL,MAAD,IAAY;AAC9B,SAAO;AACHO,IAAAA,IAAI,EAAEnB,SAAS,CAACoB,aADb;AAEHR,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAT,WAAW,CAACe,OAAZ,GAAuBN,MAAD,IAAY;AAC9B,SAAO;AACHO,IAAAA,IAAI,EAAEnB,SAAS,CAACqB,aADb;AAEHT,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOA,eAAeT,WAAf","sourcesContent":["import loginType from '../actionTypes/login.actiontypes';\r\nimport Api from '.././utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst loginAction = {};\r\n\r\nloginAction.Login = (username, password) => {\r\n    let endpoint = ApiConfig.endpoint.login + '?username='+ username + '&password=' + password;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                console.log('dasdas');\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n          \r\n    }\r\n}\r\n\r\nloginAction.success = (result) => {\r\n    return {\r\n        type: loginType.LOGIN_SUCCESS,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.failure = (result) => {\r\n    return {\r\n        type: loginType.LOGIN_FAILURE,\r\n        result\r\n    };\r\n}\r\n\r\nexport default loginAction;"]},"metadata":{},"sourceType":"module"}