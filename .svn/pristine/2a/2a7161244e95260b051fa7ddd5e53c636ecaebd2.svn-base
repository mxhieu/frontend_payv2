{"version":3,"sources":["serviceWorker.js","actionTypes/login.actiontypes.js","config/ApiConfig.js","utils/Api.js","actionTypes/isloading.actiontypes.js","actions/isloading.actions.js","actions/login.actions.js","actionTypes/post.actiontypes.js","actions/post.actions.js","config/CommonConfig.js","components/layout/Header.js","components/layout/Footer.js","actionTypes/game.actiontypes.js","actions/games.actions.js","components/layout/Games.js","actionTypes/slider.actiontypes.js","actions/slider.actions.js","components/layout/MainSlider.js","pages/homepage/Homepage.js","utils/Validate.js","config/SocialConfig.js","components/FacebookLogin.js","components/GoogleLogin.js","components/AppleLogin.js","utils/validateInput.js","components/Login.js","pages/login/Loginpage.js","components/Detail.js","pages/detailpage/Detailpage.js","actionTypes/payment.actiontypes.js","actions/payment.actions.js","components/Paytogame.js","pages/paymentpage/PayToGamePage.js","components/PayBreadcrumb.js","components/Paytowallet.js","pages/paymentpage/PayToWalletPage.js","actionTypes/history.actiontypes.js","actions/history.actions.js","components/HistoryPayFilter.js","components/PayToGameHistory.js","pages/paymentpage/HistoryPayToGamePage.js","components/PayToWalletHistory.js","pages/paymentpage/HistoryPayToWalletPage.js","pages/PageNotFound.js","components/AppleLoginCallback.js","routes.js","components/PrivateRoutes.js","App.js","reducers/game.reducer.js","reducers/slider.reducer.js","reducers/login.reducer.js","reducers/posts.reducer.js","reducers/payment.reducer.js","reducers/isloading.reducer.js","reducers/history.reducer.js","reducers/index.js","index.js"],"names":["Boolean","window","location","hostname","match","loginActionTypes","LOGIN_RESQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","LOGIN_FACEBOOK","LOGIN_GOOGLE","LOGIN_APPLE","apiConfig","login","loginFb","loginGg","loginApple","getSlider","getPosts","getDetailPost","getGame","getDetailGameToGame","chargeCard","getRole","chargeAtm","getDetailGameToWallet","paymentWalletChargeCard","paymentWalletChargeATM","paymentWalletChargeATMSuccess","getCardHistory","getPayToGameHistory","payToGame","contentJson","Api","method","url","body","header","ApiConfig","axios","data","isLoadingActionTypes","SHOW_LOADING","HIDE_LOADING","isLoadingActions","dispatch","showLoaderRequest","hideLoaderRequest","type","loginAction","username","password","endpoint","domain","a","isLoading","showLoader","call","then","result","status","success","failure","hideLoader","accessToken","res","token_for_business","loginFacebook","bussinessToken","email","sub","console","log","postActionTypes","GET_ALL_POST","GET_DETAIL_POST","postActions","isloadingAction","getAllPost","slug","CommonConfig","name","value","displayText","Header","logout","e","preventDefault","props","isLogged","userLogout","reload","this","postsReducer","rightTopBar","to","className","href","data-toggle","role","aria-haspopup","aria-expanded","linkChangePassword","linkAccountInfo","onClick","postsElement","listPost","length","map","val","index","key","title","data-target","id","Component","connect","state","loginReducer","postReducer","postAction","getAllPostRequest","Footer","Fragment","style","padding","gameActionTypes","GET_ALL_GAME","GET_DETAIL_GAME_TO_GAME","GET_DETAIL_GAME_TO_WALLET","gameActions","getAll","productId","getAllRequest","Games","getGameList","gamesReducer","gameElemnt","gameItem","payment_type","src","assetDomain","avatar","alt","target","rel","url_redirect","sliderActionTypes","GET_ALL","sliderActions","MainSlider","sliders","loop","items","link","image","sliderReducer","Homepage","Validate","trim","min","max","SocialConfig","app_id","redirect_uri","app_secret","client_id","redirect_url","FacebookLogin","callApi","token","facebookLogin","handleClick","FB","getLoginStatus","response","fbAsyncInit","init","appId","fb","false","xfbml","version","Event","subscribe","authResponse","setState","bind","d","s","js","fjs","getElementsByTagName","getElementById","createElement","parentNode","insertBefore","document","aria-hidden","loginFacebookRequest","GoogleLogin","prepareLoginButton","auth2","attachClickHandler","refs","googleLoginBtn","googleUser","profile","getBasicProfile","getEmail","googleLogin","onHandleClick","load","google","cookiepolicy","scope","ref","loginGoogle","AppleLogin","clientId","apple","redirectURI","responseType","responseMode","designProp","height","width","color","border","border_radius","scale","locale","required","toString","minLength","maxLength","alpha","test","Login","handleChange","event","checked","handleSubmit","formCardPay","validateAll","checkBtn1","context","_errors","userlogin","handleValidate","errors","isValid","isRequired","push","aria-label","aria-current","onSubmit","c","htmlFor","onChange","placeholder","validations","display","disabled","isLoadingReducer","linkForgetPassword","linkRegister","error","messages","Loginpage","Detail","postDetail","prevProps","detailPost","created_at","dangerouslySetInnerHTML","__html","content","getPostDetailRequest","Detailpage","params","paymentActionTypes","CHARGE_CARD","CHARGE_ATM","GET_USER_ROLE","CHARGE_ATM_SUCCESS","paymentActions","sign","require","md5","jwtToken","txtSerie","txtCardPin","gameInfo","agent","sltCardType","sltServer","isLoadingAction","sltAmount","sltRoleId","serverId","userId","getUserRole","paramStr","rsChargeAtmSuccess","Paytogame","checkHasRole","errorSelectRole","handlePayByCard","errorRole","handlePayByATM","formAtmPay","checkBtn2","hanleGetRole","JSON","parse","localStorage","getItem","undefined","paymentReducer","userRole","chargeSuccessMSG","errorsAtm","errorsCard","errorSelectServer","queryString","strParams","search","_","chargeAtmSuccess","modalATMReport","$","modal","on","previousProps","previousState","Object","keys","gameData","hasOwnProperty","chargeAtmMSG","server","detail","serverElement","server_id","server_name","textAlign","roleId","roleName","data-parent","tabIndex","data-backdrop","nextProps","prevState","getDetailGameToGameRequest","chargeCardRequest","chargeAtmRequest","getUserRoleRequest","withRouter","PayToGamePage","PayBreadcrumb","payUrl","Paytowallet","changeServerGroup","serverGroupValue","serversList","serverGroups","isDisableSelectServers","payItem","handleServerChanged","endPoint","game","api","responseData","rolesList","chargeGameItem","catch","openModal","goldId","balance","modalContent","chargeGameResult","changeRoleId","chargeGame","stopPropagation","message","err","changePayItem","payType","cardType","serie","number","amount","productAgent","payByCard","inProcessing","processingResult","finally","payByATM","cardsList","commonConfig","CardsList","atmValuesList","ATMValuesList","goldsList","inLoadingPage","servers","golds","endpointATMSuccess","toLocaleString","currency","defaultValue","aria-controls","aria-labelledby","data-id","itemValue","itemIndex","serverGroupIndex","serverValue","serverIndex","roleValue","roleIndex","goldItemValue","goldItemIndex","data-amount","data-gold-id","item","gold","data-dismiss","PaytowalletPage","historyActionTypes","GET_CARD_HISTORY","GET_PAY_TO_GAME_HISTORY","historyActions","formDate","toDate","HistoryPayFilter","handleEvent","picker","inputStart","startDate","format","inputFinish","endDate","handleFilter","includes","filterPayToGameHistory","sltGame","filterCardHistory","date","Date","currentDate","getDate","getMonth","getFullYear","currentDateRequest","historyReducer","payToGameHistory","setData","cardHistory","gameElement","autoApply","autoUpdateInput","onEvent","readOnly","getCardHistoryRequest","filterPayToGameHistoryRequest","PayToGameHistory","getChildData","dataElement","filter","product_id","transaction_id","card_status","create_date","HistoryPayToGamePage","PayToWalletHistory","historyCard","historyElement","card_type","card_message","HistoryPayToWalletPage","PageNotFound","AppleLoginCallback","parseJwt","base64","split","replace","jsonPayload","decodeURIComponent","atob","charCodeAt","slice","join","hash","id_token","tokenData","appleSignIn","LoginApple","Routes","path","exact","main","history","PrivateRoutes","Comp","component","rest","render","pathname","prevLocation","App","InitRoute","initialState","gameReducer","action","newSlider","i","imageTitle","imageRedirect","imagePath","description","imageDescription","setItem","stringify","removeItem","isLoadingActionType","appReducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e14bbac4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const loginActionTypes = {\r\n    LOGIN_RESQUEST: 'LOGIN_RESQUEST',\r\n    LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n    LOGOUT: 'LOGOUT',\r\n\r\n    LOGIN_FACEBOOK: 'LOGIN_FACEBOOK',\r\n    LOGIN_GOOGLE: 'LOGIN_GOOGLE',\r\n    LOGIN_APPLE: 'LOGIN_APPLE',\r\n}\r\nexport default  loginActionTypes;","const apiConfig = {};\r\n\r\napiConfig.domain = 'https://2ca352f6.ngrok.io/';\r\n\r\napiConfig.endpoint = {\r\n    login: 'passport/login',\r\n    loginFb: 'passport/loginFB',\r\n    loginGg: 'passport/loginGoogle',\r\n    loginApple: 'passport/loginApple',\r\n    getSlider: 'sliders/get-default-slider',\r\n    getPosts: 'post/get-list',\r\n    getDetailPost: 'post/get-detail/',\r\n    getGame: 'game/get-list',\r\n    getDetailGameToGame: 'server/list',\r\n    chargeCard: 'paymentGame/charge-card',\r\n    getRole: 'game/get-role',\r\n    chargeAtm: 'paymentGame/charge-atm',\r\n    getDetailGameToWallet: 'game/detail',\r\n    paymentWalletChargeCard: 'paymentWallet/charge-card',\r\n    paymentWalletChargeATM: 'paymentWallet/charge-atm',\r\n    paymentWalletChargeATMSuccess: 'paymentWallet/success-charge-atm',\r\n    getCardHistory: 'history/card',\r\n    getPayToGameHistory: 'history/paytogame',\r\n    payToGame: 'paymentWallet/pay-to-game'\r\n};\r\napiConfig.jwtToken = 'ADFASVASVASCAS';\r\napiConfig.header = {\r\n    contentJson: {\r\n        \"Content-Type\": \"application/json\"\r\n    },\r\n};\r\n\r\nexport default apiConfig;","import axios from 'axios';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\n// define util of api\r\nconst Api = {};\r\n\r\nApi.call = (method ,url, body= {} , header = `${ApiConfig.header.contentJson}`) => {\r\n    return axios({\r\n                method: method,\r\n                url: url,\r\n                data: body,\r\n                header: header\r\n            })\r\n};\r\n\r\nexport default Api;","const isLoadingActionTypes = {\r\n    SHOW_LOADING: 'SHOW_LOADING',\r\n    HIDE_LOADING: 'HIDE_LOADING',\r\n}\r\nexport default isLoadingActionTypes;","import isLoadingActionTypes from \"../actionTypes/isloading.actiontypes\";\r\n\r\n// define action of loader\r\nconst isLoadingActions = {};\r\n\r\n/**\r\n * show loader\r\n * @return {} dispatch\r\n */\r\nisLoadingActions.showLoader = () => {\r\n  return dispatch => {\r\n      dispatch(isLoadingActions.showLoaderRequest());\r\n  };\r\n};\r\n\r\n/**\r\n * hide loader\r\n * @return {} dispatch\r\n */\r\nisLoadingActions.hideLoader = () => {\r\n  return dispatch => {\r\n      dispatch(isLoadingActions.hideLoaderRequest());\r\n  };\r\n};\r\n\r\n/**\r\n * show loader request\r\n * @return {Action Creator}\r\n */\r\nisLoadingActions.showLoaderRequest = () => {\r\n  return {\r\n    type: isLoadingActionTypes.SHOW_LOADING\r\n  };\r\n};\r\n\r\n/**\r\n * hide loader request\r\n * @return {Action Creator}\r\n */\r\nisLoadingActions.hideLoaderRequest = () => {\r\n  return {\r\n    type: isLoadingActionTypes.HIDE_LOADING\r\n  };\r\n};\r\n\r\nexport default isLoadingActions;\r\n","import loginActionTypes from '../actionTypes/login.actiontypes';\r\nimport Api from '.././utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\nimport isLoading from \"./isloading.actions\";\r\n\r\nconst loginAction = {};\r\n\r\nloginAction.Login = (username, password) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username='+ username + '&password=' + password;\r\n    return async (dispatch) => {\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.loginFacebookRequest = (accessToken) => {\r\n    let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token='+accessToken;\r\n    return async (dispatch) => {\r\n        //Get bussiness token\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(res => {\r\n            if(res.status === 200 && res.data.token_for_business)\r\n            {\r\n                dispatch(loginAction.loginFacebook(accessToken, res.data.token_for_business));\r\n            }            \r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.loginFacebook = (bussinessToken) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginFb + \"?tokenForBusiness=\"+ bussinessToken;\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nloginAction.loginGoogle = (email) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginGg + \"?email=\"+ email;\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.LoginApple = (sub) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.loginApple + \"?sub=\"+sub;\r\n    console.log(endpoint);\r\n    return async (dispatch) => {\r\n        //Get data form api\r\n        dispatch(isLoading.showLoader())\r\n        await Api.call('GET', endpoint ).then(result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n        dispatch(isLoading.hideLoader())\r\n    }\r\n}\r\n\r\nloginAction.success = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_SUCCESS,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.failure = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_FAILURE,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.logout = () => {\r\n    return {\r\n        type: loginActionTypes.LOGOUT,\r\n    };\r\n}\r\n\r\nexport default loginAction;","const postActionTypes = {\r\n    GET_ALL_POST: 'GET_ALL_POST',\r\n    GET_DETAIL_POST: 'GET_DETAIL_POST'\r\n}\r\nexport default  postActionTypes;","import postActionTypes from '../actionTypes/post.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\nimport isloadingAction from \"../actions/isloading.actions\";\r\n\r\nconst postActions = {};\r\n\r\npostActions.getAllPostRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPosts;\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getAllPost(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\npostActions.getAllPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_ALL_POST,\r\n        result\r\n    }\r\n}\r\n\r\npostActions.getPostDetailRequest = (slug) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getDetailPost + slug;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getDetailPost(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npostActions.getDetailPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_DETAIL_POST,\r\n        result\r\n    }\r\n}\r\n\r\nexport default postActions;","const CommonConfig = {};\r\n\r\nCommonConfig.assetDomain = 'http://dev-assets.phoeniz.com';\r\nCommonConfig.linkChangePassword = 'https://id.100d.mobi/';\r\nCommonConfig.linkAccountInfo = 'https://id.100d.mobi/';\r\nCommonConfig.linkRegister = 'https://id.100d.mobi/register';\r\nCommonConfig.linkForgetPassword = 'https://id.100d.mobi/forgetpassword';\r\n\r\n/**\r\n * Cards list\r\n * @type {{\"4\": {name: string, type: string}, \"6\": {name: string, type: string}, \"7\": {name: string, type: string}}}\r\n */\r\nCommonConfig.CardsList = {\r\n    '6': {\r\n        type: 'HPC',\r\n        name: 'HPCode'\r\n    },\r\n    '7': {\r\n        type: 'GATE',\r\n        name: 'GATE'\r\n    },\r\n    '4': {\r\n        type: 'VTC',\r\n        name: 'VTCVcoin'\r\n    }\r\n};\r\n\r\n/**\r\n * ATM values list\r\n * @type {{}[]}\r\n */\r\nCommonConfig.ATMValuesList = [\r\n    {\r\n        value: 10000,\r\n        displayText: '10.000'\r\n    },\r\n    {\r\n        value: 20000,\r\n        displayText: '20.000'\r\n    },\r\n    {\r\n        value: 50000,\r\n        displayText: '50.000'\r\n    },\r\n    {\r\n        value: 100000,\r\n        displayText: '100.000'\r\n    },\r\n    {\r\n        value: 200000,\r\n        displayText: '200.000'\r\n    },\r\n    {\r\n        value: 300000,\r\n        displayText: '300.000'\r\n    },\r\n    {\r\n        value: 500000,\r\n        displayText: '500.000'\r\n    },\r\n    {\r\n        value: 1000000,\r\n        displayText: '1.000.000'\r\n    },\r\n    {\r\n        value: 2000000,\r\n        displayText: '2.000.000'\r\n    }\r\n];\r\n\r\nexport default CommonConfig;","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport loginAction from \"../../actions/login.actions.js\";\r\nimport postAction from \"../../actions/post.actions\";\r\nimport CommonConfig from \"../../config/CommonConfig\";\r\n\r\nclass Header extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getAllPost();\r\n    }\r\n\r\n    logout = (e) => {\r\n        e.preventDefault();\r\n        let { login } = this.props;\r\n        if(login.isLogged === true){\r\n            this.props.userLogout();\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let {login, postsReducer} = this.props;\r\n        let rightTopBar = '';\r\n        if(login.isLogged !== true){\r\n            rightTopBar = <li><Link to=\"/login\">Đăng nhập </Link></li>\r\n        }\r\n        else{\r\n            rightTopBar = <li className=\" dropdown\"><a href=\"/\" className=\"dropdown-toggle active\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">{login.data.data.username} <span className=\"caret\" /></a>\r\n                            <ul className=\"dropdown-menu dropdown-menu-right\">\r\n                                <li><a href={CommonConfig.linkChangePassword}>Đổi mật khẩu</a></li>\r\n                                <li><a href={CommonConfig.linkAccountInfo}>Thông tin tài khoản</a></li>\r\n                                <li onClick={this.logout}><a href=\"/#\">Đăng xuất</a></li>\r\n                            </ul>\r\n                        </li>\r\n        }\r\n        let postsElement = '';\r\n        if(postsReducer.listPost.length > 0)\r\n        {\r\n            postsElement = postsReducer.listPost.map((val, index) => {\r\n                return <li key={index}><Link to={\"/post-detail/\" + val.slug}>{val.title}</Link></li>\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container-fuild menu\">\r\n                <nav className=\"navbar navbar-default\" role=\"navigation\">\r\n                    <div className=\"navbar-header\">\r\n                    <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n                        <span className=\"sr-only\">Toggle navigation</span>\r\n                        <span className=\"icon-bar\" />\r\n                        <span className=\"icon-bar\" />\r\n                        <span className=\"icon-bar\" />\r\n                    </button>\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        Phoeniz pay\r\n                    </Link>\r\n                    </div>\r\n                    <div className=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n                    <ul className=\"nav navbar-nav\">\r\n                        <li><Link to=\"/\">Trang chủ </Link></li>\r\n                        <li className=\"dropdown\">\r\n                        <a href=\"/\" className=\"dropdown-toggle\" data-toggle=\"dropdown\">Hướng dẫn <span className=\"caret\" /></a>\r\n                        <ul className=\"dropdown-menu\" role=\"menu\">\r\n                            {postsElement}\r\n                        </ul>\r\n                        </li>\r\n                    </ul>\r\n                    <ul className=\"nav navbar-nav pull-right\">\r\n                        {rightTopBar}\r\n                    </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n      postsReducer: state.postReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        userLogout: () =>{\r\n            dispatch(loginAction.logout())\r\n        },\r\n        getAllPost: () => {\r\n            dispatch(postAction.getAllPostRequest())\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)((Header));","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"clearfix\"></div>\r\n                <hr></hr>\r\n                <div className=\"container-fuild footer text-center\">\r\n                    <p className=\"text-muted credit\" style={{padding: '1em'}}>Đơn vị chủ quản: Công Ty TNHH Dịch Vụ Giải Trí Phượng Hoàng</p>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const gameActionTypes = {\r\n    GET_ALL_GAME: 'GET_ALL_GAME',\r\n    GET_DETAIL_GAME_TO_GAME: 'GET_DETAIL_GAME_TO_GAME',\r\n    GET_DETAIL_GAME_TO_WALLET: 'GET_DETAIL_GAME_TO_WALLET',\r\n}\r\nexport default gameActionTypes;","import gameActionTypes from \"../actionTypes/game.actiontypes\";\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from \"../config/ApiConfig\";\r\n\r\nconst gameActions = {};\r\n\r\ngameActions.getAllRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getGame;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(gameActions.getAll(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ngameActions.getAll = (result) => {\r\n    return {\r\n        type: gameActionTypes.GET_ALL_GAME,\r\n        result\r\n    }\r\n}\r\n\r\ngameActions.getDetailGameToGameRequest = (productId) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getDetailGameToGame + '?productId='+productId ;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(gameActions.getDetailGameToGame(result))\r\n                dispatch(gameActions.getAllRequest())\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\ngameActions.getDetailGameToGame = (result) => {\r\n    return {\r\n        type: gameActionTypes.GET_DETAIL_GAME_TO_GAME,\r\n        result\r\n    }\r\n}\r\n\r\n\r\nexport default gameActions;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from \"react-router-dom\";\r\nimport gameActions from \"../../actions/games.actions\";\r\nimport CommonConfig from \"../../config/CommonConfig\";\r\n\r\nexport class Games extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getGameList();\r\n    }\r\n\r\n    render() {\r\n        if(this.props.gamesReducer.data.length > 0 )\r\n        {\r\n            var { gamesReducer } = this.props;\r\n            var gameElemnt = gamesReducer.data.map((val, index) => {\r\n                let gameItem = '';\r\n                // console.log(val.status)\r\n                if(val.status === 1)\r\n                {\r\n                    if(val.payment_type === 'wallet')\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <Link to={`/nap-vi/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/nap-vi/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </Link>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    else if(val.payment_type === 'none_wallet')\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <Link to={`/nap-game/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </Link>\r\n                                        <Link to={`/nap-game/${val.slug}-g${val.id}`}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </Link>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    else\r\n                    {\r\n                        gameItem =   <React.Fragment>\r\n                                        <a target=\"blank\" rel=\"noopener noreferrer\" href={val.url_redirect}>\r\n                                            <div className=\"item-image\">\r\n                                                <img src={CommonConfig.assetDomain + val.avatar} alt={val.name} />\r\n                                            </div>\r\n                                        </a>\r\n                                        <a target=\"blank\" rel=\"noopener noreferrer\" href={val.url_redirect}>\r\n                                            <div className=\"title-item\">{val.name}</div>\r\n                                        </a>       \r\n                                    </React.Fragment>\r\n                    }\r\n                    return <div className=\"item\" key={index}>\r\n                                {gameItem}\r\n                            </div>\r\n                }\r\n                return null;\r\n            })\r\n            \r\n        }\r\n        \r\n        return (\r\n            <div className=\"container-fuild product\">\r\n                <h3>SẢN PHẨM NỔI BẬT</h3>\r\n                {gameElemnt}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Games)","const sliderActionTypes = {\r\n    GET_ALL: 'GET_ALL_SLIDER'\r\n}\r\nexport default sliderActionTypes;","import sliderActionTypes from '../actionTypes/slider.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst sliderActions = {};\r\n\r\nsliderActions.getAllRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getSlider;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(sliderActions.getAll(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nsliderActions.getAll = (result) => {\r\n    return {\r\n        type: sliderActionTypes.GET_ALL,\r\n        result\r\n    }\r\n}\r\n\r\nexport default sliderActions;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport OwlCarousel from 'react-owl-carousel';\r\nimport 'owl.carousel/dist/assets/owl.carousel.css';\r\nimport 'owl.carousel/dist/assets/owl.theme.default.css';\r\nimport sliderActions from \"../../actions/slider.actions\";\r\n\r\nclass MainSlider extends Component {\r\n    \r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            sliders: {}\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getAllRequest();\r\n    }\r\n\r\n    static getDerivedStateFromProps(props) {\r\n        return {\r\n            sliders: props.sliders\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var { sliders } = this.state;\r\n        return (\r\n            <div>\r\n                {\r\n                    sliders.length > 0 \r\n                    ?\r\n                    <OwlCarousel\r\n                        className=\"owl-theme\"\r\n                        loop\r\n                        items={1}\r\n                    >\r\n                        {sliders.map((val, index) => (\r\n                            <div className=\"main_slide_item\" key={index}>\r\n                                <a target=\"blank\" rel=\"noopener noreferrer\" href={val.link}>\r\n                                    <img className=\"img-responsive\" alt={val.image} src={val.image} />\r\n                                </a>\r\n                            </div>\r\n                        ))}\r\n                    </OwlCarousel>\r\n                    :\r\n                    null\r\n                }   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    sliders: state.sliderReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getAllRequest: async () => {\r\n            await dispatch(sliderActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainSlider)","import React, { Component } from 'react'\r\nimport Games from '../../components/layout/Games'\r\nimport MainSlider from '../../components/layout/MainSlider';\r\n\r\nexport default class Homepage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MainSlider></MainSlider>\r\n                <Games></Games>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const Validate = {};\r\n\r\nValidate.isRequired = (value) => {\r\n    if (value.trim().length === 0) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Check minlength\r\n */\r\nValidate.minLength = (value, min) => {\r\n    return value.length < min;\r\n}\r\n  \r\n  /**\r\n   * Check maxlength\r\n   */\r\nValidate.maxLength = (value, max) => {\r\n    return value.length > max;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Validate;","const SocialConfig = {};\r\n\r\nSocialConfig.fb = {\r\n    domain: 'https://www.facebook.com/v6.0/dialog/oauth?',\r\n    app_id: '800624447114245',\r\n    redirect_uri: 'http://localhost:3000/passport/loginFB/callback',\r\n    app_secret: '84d2f2b54343dad2b8cebdd199c72d81'\r\n}\r\n\r\nSocialConfig.google = {\r\n    app_id: '640078091216-oq0vn2oheote5b129sc4gn7d7d51r9r0.apps.googleusercontent.com',\r\n    app_secret: '4Ydu3UzLk7FympAARoobcyCg'\r\n}\r\n\r\nSocialConfig.apple = {\r\n    client_id: 'v2signin.100d.mobi',\r\n    redirect_url: 'https://dev-pay-v2.phoeniz.com/login/appleCallback'\r\n}\r\n\r\nexport default SocialConfig;","import React, { Component } from 'react'\r\nimport SocialConfig from '../config/SocialConfig';\r\nimport { connect } from \"react-redux\";\r\nimport loginAction from '../actions/login.actions';\r\n\r\nclass FacebookLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            accessToken : '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.fbAsyncInit = function () {\r\n            window.FB.init({\r\n                appId: SocialConfig.fb.app_id,\r\n                false: true,  // enable cookies to allow the server to access\r\n                xfbml: true,  // parse social plugins on this page\r\n                version: 'v6.0' // use version 2.1\r\n            });\r\n\r\n            window.FB.Event.subscribe('auth.statusChange', function(response) {\r\n                if (response.authResponse && response.status === \"connected\") {\r\n                    this.setState({\r\n                        accessToken: response.authResponse.accessToken\r\n                    })\r\n                    this.callApi(this.state.accessToken);\r\n                }\r\n            }.bind(this));\r\n        }.bind(this);\r\n\r\n        // Load the SDK asynchronously\r\n        (function (d, s, id) {\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) return;\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"//connect.facebook.net/en_US/sdk.js\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'facebook-jssdk'));\r\n    }\r\n\r\n    callApi = (token) => {\r\n        this.props.facebookLogin(token)\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.preventDefault();        \r\n        window.FB.getLoginStatus(function (response) {\r\n            if(response.status !== 'connected'){\r\n                window.FB.login();\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"/#\" onClick={this.handleClick}>\r\n                <div className=\"row-login\" id=\"btnFacebook\">\r\n                    <i className=\"fa fa-facebook\" aria-hidden=\"true\" />\r\n                    <p>Đăng nhập bằng Facebook</p>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        facebookLogin: (token) => {\r\n            dispatch(loginAction.loginFacebookRequest(token))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(FacebookLogin);","import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport SocialConfig from \"../config/SocialConfig\";\r\nimport loginAction from '../actions/login.actions';\r\n\r\nclass GoogleLogin extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email : '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() { \r\n        window['googleSDKLoaded'] = () => {\r\n            window['gapi'].load('auth2', () => {\r\n                this.auth2 = window['gapi'].auth2.init({\r\n                    client_id: SocialConfig.google.app_id,\r\n                    cookiepolicy: 'single_host_origin',\r\n                    scope: 'profile email'\r\n                });\r\n                this.prepareLoginButton();\r\n            });\r\n        }\r\n        \r\n        (function(d, s, id){\r\n            var js, fjs = d.getElementsByTagName(s)[0];\r\n            if (d.getElementById(id)) {return;}\r\n            js = d.createElement(s); js.id = id;\r\n            js.src = \"https://apis.google.com/js/platform.js?onload=googleSDKLoaded\";\r\n            fjs.parentNode.insertBefore(js, fjs);\r\n        }(document, 'script', 'google-jssdk'));\r\n    }\r\n\r\n    prepareLoginButton = () => {     \r\n        this.auth2.attachClickHandler(this.refs.googleLoginBtn, {},\r\n        (googleUser) => {\r\n            let profile = googleUser.getBasicProfile();\r\n            this.setState({\r\n                email: profile.getEmail()\r\n            })\r\n            this.props.googleLogin(this.state.email);\r\n        });\r\n    }\r\n\r\n    onHandleClick = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"/#\" onClick={this.onHandleClick} ref=\"googleLoginBtn\"><div className=\"row-login\" id=\"btnGoogle\">\r\n                <i className=\"fa fa-google\" aria-hidden=\"true\" />\r\n                <p>Đăng nhập bằng Google</p>\r\n                </div>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        googleLogin: (email) => {\r\n            dispatch(loginAction.loginGoogle(email))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(GoogleLogin);","import React, { Component } from 'react'\r\nimport ReactAppleLogin from 'react-apple-login'\r\nimport SocialConfig from \"../config/SocialConfig\"\r\n\r\nclass AppleLogin extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"cover-apple-login\">\r\n                <ReactAppleLogin clientId={SocialConfig.apple.client_id} redirectURI={SocialConfig.apple.redirect_url}\r\n                responseType={\"code id_token\"} \r\n                responseMode={\"fragment\"}\r\n                designProp={\r\n                    {\r\n                    height: 50,\r\n                    width: 255,\r\n                    color: \"black\",\r\n                    border: false,\r\n                    type: \"sign-in\",\r\n                    border_radius: 10,\r\n                    scale: 1,\r\n                    locale: \"vi_VI\", \r\n                    }\r\n                }\r\n                />\r\n                <a href=\"/#\" onClick={this.handleClick}>\r\n                    <div className=\"row-login\" id=\"btnApple\">\r\n                        <i className=\"fa fa-apple\" aria-hidden=\"true\" />\r\n                        <p>Đăng nhập bằng Apple ID</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppleLogin;","import React from 'react'\r\n\r\nexport const required = (value) => {\r\n  if (!value.toString().trim().length) {\r\n    return <span className={'input-error'}>Bắt buộc nhập.</span>;\r\n  }\r\n};\r\nexport const minLength = (value) => {\r\n    if (value.length < 5) {\r\n        return <span className={'input-error'}>Ít nhất 5 ký tự.</span>;\r\n    }\r\n}\r\nexport const maxLength = (value) => {\r\n    if (value.length > 20) {\r\n        return <span className={'input-error'}>Tối đa 20 ký tự.</span>;\r\n    }\r\n}\r\n\r\nexport const alpha = (value) => {\r\n  if(/[^0-9a-zA-Z]/.test(value)) {\r\n      return <span className={'input-error'}>Không được có dấu và ký tự đặc biệt.</span>;\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Link, Redirect} from \"react-router-dom\";\r\nimport \"../assets/css/login.css\";\r\nimport Validate from './../utils/Validate';\r\nimport { connect } from \"react-redux\";  \r\nimport loginAction from '../actions/login.actions';\r\nimport FacebookLogin from \"./FacebookLogin\";\r\nimport GoogleLogin from \"./GoogleLogin\";\r\nimport AppleLogin from \"./AppleLogin\";\r\nimport CommonConfig from '../config/CommonConfig';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport {required, minLength, maxLength, alpha} from \"../utils/validateInput\";\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: '', \r\n            password: '',\r\n            errors: []\r\n        }\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        this.formCardPay.validateAll();\r\n        if(this.checkBtn1.context._errors.length === 0)\r\n        {\r\n            await this.props.userlogin(this.state.username, this.state.password);\r\n        }\r\n    }\r\n\r\n    handleValidate = () => {\r\n        const { username, password } = this.state;\r\n        let errors = {\r\n            username: [],\r\n            password: []\r\n        };\r\n        let isValid = true;\r\n        if (Validate.isRequired( username )) {\r\n            errors.username.push('Tài khoản bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( username, 255 )) {\r\n            errors.username.push('Tài khoản tối đa 255 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( username, 5)) {\r\n            errors.username.push('Tài khoản tối thiểu 5 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.isRequired( password )) {\r\n            errors.password.push('Mật khẩu bắt buộc nhập');\r\n            isValid = false;\r\n        }\r\n        if (Validate.maxLength( password, 255 )) {\r\n            errors.username.push('Mật khẩu tối đa 255 ký tự');\r\n            isValid = false;\r\n        }\r\n        if (Validate.minLength( password, 5)) {\r\n            errors.username.push('Mật khẩu tối thiểu 5 ký tự');\r\n            isValid = false;\r\n        }\r\n        this.setState({\r\n            errors: errors\r\n        })\r\n        return isValid;\r\n    }\r\n\r\n    render() {\r\n        let { errors } = this.state;\r\n        let { login } = this.props;\r\n        if (login.isLogged) {\r\n            return <Redirect to=\"/\" />;\r\n        }\r\n        return (\r\n            <div className=\"container login_container\">\r\n                <nav aria-label=\"breadcrumb\">\r\n                    <ol className=\"breadcrumb\">\r\n                    <li className=\"breadcrumb-item\"><Link to=\"/\">Trang chủ</Link></li>\r\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">Đăng nhập</li>\r\n                    </ol>\r\n                </nav>\r\n                <div className=\"col-md-4 box-left\">\r\n                    <h4>Đăng nhập bằng tài khoản khác</h4>\r\n                    <FacebookLogin></FacebookLogin>\r\n                    <GoogleLogin></GoogleLogin>\r\n                    <AppleLogin></AppleLogin>\r\n                </div>\r\n                <div className=\"col-md-8 box-right\">\r\n                    <h4>Đăng nhập bằng Phoeniz ID</h4>\r\n                    {/* <form method=\"POST\" name=\"user\" id=\"user\" noValidate=\"novalidate\" onSubmit={this.handleSubmit}> */}\r\n                    <Form onSubmit={e => this.handleSubmit(e)} ref={c => { this.formCardPay = c }}>\r\n                        <label htmlFor=\"username\" className=\"col-sm-12 controll-label\">Tên đăng nhập *</label>\r\n                        {/* <input type=\"text\" name=\"username\" className=\"form-control\" id=\"username\" onChange={this.handleChange} /> */}\r\n                        <Input \r\n                            name=\"username\" \r\n                            id=\"username\"\r\n                            onChange={this.handleChange}\r\n                            type=\"text\" \r\n                            placeholder=\"\"\r\n                            className=\"form-control\" \r\n                            validations={[required, minLength, maxLength, alpha]}\r\n                        />\r\n                        <small className=\"errorInput\">{errors.username?errors.username[0]:''}</small>\r\n                        <label htmlFor=\"password\" className=\"col-sm-12 controll-label\">Mật khẩu *</label>\r\n                        {/* <input type=\"password\" name=\"password\" className=\"form-control\" id=\"password\" onChange={this.handleChange} /> */}\r\n                        <Input \r\n                            name=\"password\" \r\n                            id=\"password\"\r\n                            onChange={this.handleChange}\r\n                            type=\"password\" \r\n                            placeholder=\"\"\r\n                            className=\"form-control\" \r\n                            validations={[required, minLength, maxLength]}\r\n                        />\r\n                        <small className=\"errorInput\">{errors.password?errors.password[0]:''}</small>\r\n                        <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn1 = c }} />\r\n                        <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitbutton\">{this.props.isLoadingReducer.isLoading?\r\n                            <div className={'dot-loader'}>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                            :'Đăng nhập'}</button>\r\n                    </Form>\r\n                    {/* </form> */}\r\n                    <div className=\"clearfix\" />\r\n                    <div className=\"forget-password\"><a href={CommonConfig.linkForgetPassword}>Quên mật khẩu</a></div>\r\n                    <div className=\"exist-account\">Bạn chưa có tài khoản. <a href={CommonConfig.linkRegister}>Đăng ký ngay</a></div>\r\n                    <div className=\"clearfix\" />\r\n                    { login.error && (<div className=\"alert alert-danger\" role=\"alert\">\r\n                                            {login.error.messages}\r\n                                        </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n      isLoadingReducer: state.isLoadingReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        userlogin: async (username, password) => {\r\n            await dispatch(loginAction.Login(username, password))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Login);\r\n  ","import React, { Component } from 'react'\r\nimport Login from '../../components/Login'\r\n\r\nexport default class Loginpage extends Component {\r\n    render() {\r\n        return (\r\n            <Login></Login>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport postActions from \"../actions/post.actions\";\r\n \r\nclass Detail extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            postDetail: null\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getDetailPost(this.props.slug);\r\n    }   \r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.slug !== this.props.slug) {\r\n            this.props.getDetailPost(this.props.slug);\r\n        }\r\n    }\r\n      \r\n    render() {\r\n        let {postsReducer} = this.props\r\n        return (\r\n            <div>\r\n            { \r\n                postsReducer.detailPost !== null ?\r\n                    <div className=\"container content\">\r\n                        <h3>{postsReducer.detailPost.title}</h3>\r\n                        <div className=\"desc\">\r\n                            <span>MKT</span>\r\n                            <span>{postsReducer.detailPost.created_at}</span>\r\n                        </div>\r\n                        <div className=\"main-content\" dangerouslySetInnerHTML={ { __html: postsReducer.detailPost.content } }>\r\n                        </div>\r\n                    </div>\r\n                :null\r\n            }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        postsReducer: state.postReducer\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getDetailPost: (slug) => {\r\n            return dispatch(postActions.getPostDetailRequest(slug))\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(Detail);","import React, { Component } from 'react'\r\nimport Detail from '../../components/Detail'\r\nimport MainSlider from '../../components/layout/MainSlider'\r\n\r\n\r\nexport default class Detailpage extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <MainSlider></MainSlider>\r\n                <Detail slug={this.props.match.params.slug}></Detail>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n","const paymentActionTypes = {\r\n    CHARGE_CARD: 'CHARGE_CARD',\r\n    CHARGE_ATM: 'CHARGE_ATM',\r\n    GET_USER_ROLE: 'GET_USER_ROLE',\r\n    CHARGE_ATM_SUCCESS: 'CHARGE_ATM_SUCCESS'\r\n}\r\nexport default paymentActionTypes;","import paymentActionTypes from '../actionTypes/payment.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\nimport isLoadingAction from \"./isloading.actions\";\r\nconst paymentActions = {};\r\n\r\npaymentActions.chargeCardRequest = (params) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(params.username + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.chargeCard + '?serial='+params.txtSerie+'&code='+params.txtCardPin+'&username='+params.username+'&productAgent='+params.gameInfo.agent+'&type='+params.sltCardType+'&server_id='+params.sltServer+'&sign='+sign+'';\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1 || result.data.status === 0){\r\n                dispatch(paymentActions.chargeCard(result))\r\n            }\r\n        })\r\n        dispatch(isLoadingAction.hideLoader())\r\n    }\r\n}\r\n\r\npaymentActions.chargeCard = (result) => {\r\n    return {\r\n        type: paymentActionTypes.CHARGE_CARD,\r\n        result\r\n    }\r\n}\r\n\r\npaymentActions.chargeAtmRequest = (params) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(params.username + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.chargeAtm + '?amount='+params.sltAmount+'&username='+params.username+'&productAgent='+params.gameInfo.agent+'&roleId='+params.sltRoleId+'&server_id='+params.sltServer+'&sign='+sign+'';\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                window.location.href = result.data.data.link;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\npaymentActions.getUserRoleRequest = (serverId, userId, agent) => {\r\n    let md5 = require('md5')\r\n    let sign = md5(userId + ApiConfig.jwtToken)\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getRole + '?server_id=' + serverId+'&id_user='+userId+'&productAgent='+agent+'&sign='+sign;\r\n    return async (dispatch) => {\r\n        dispatch(isLoadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(paymentActions.getUserRole(result))\r\n            }\r\n        })\r\n        dispatch(isLoadingAction.hideLoader());\r\n    }\r\n}\r\n\r\npaymentActions.chargeAtmSuccess = (paramStr) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.paymentWalletChargeATMSuccess + paramStr;\r\n    console.log(endpoint)\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            dispatch(paymentActions.rsChargeAtmSuccess(result))\r\n        })\r\n    }\r\n}\r\n\r\npaymentActions.rsChargeAtmSuccess = (result) => {\r\n    return {\r\n        type: paymentActionTypes.CHARGE_ATM_SUCCESS,\r\n        result\r\n    }\r\n}\r\n\r\npaymentActions.getUserRole = (result) => {\r\n    return {\r\n        type: paymentActionTypes.GET_USER_ROLE,\r\n        result\r\n    }\r\n}\r\n\r\nexport default paymentActions;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport \"../assets/css/paytogame.css\"\r\nimport gameActions from \"../actions/games.actions\"\r\nimport paymentActions from \"../actions/payment.actions\"\r\nimport { withRouter } from 'react-router-dom';\r\nimport * as _ from 'lodash';\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport Select from 'react-validation/build/select';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport {required, minLength, maxLength} from \"../utils/validateInput\";\r\n\r\n\r\nclass Paytogame extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            username: JSON.parse(localStorage.getItem('user')).data.username,\r\n            userRole: {},\r\n            sltRoleId: '',\r\n            sltServer: '',\r\n            sltCardType: '',\r\n            txtSerie: '',\r\n            txtCardPin: '',\r\n            sltAmount: '',\r\n            gameInfo: {},\r\n            chargeSuccessMSG : '',\r\n            errorsAtm: [],\r\n            errorsCard: [],\r\n            errorSelectServer: [],\r\n            errorSelectRole: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        let {match} = this.props\r\n        this.props.getDetailGameToGame(match.params.id)\r\n        let queryString = require('query-string');\r\n        let strParams = this.props.location.search;\r\n        let params = queryString.parse(strParams);\r\n        if (_.has(params, 'trans_id')) {\r\n            this.props.chargeAtmSuccess(strParams)\r\n            console.log(this.props)\r\n            if(this.props.paymentReducer.chargeAtmSuccess.messages !== null)\r\n            {\r\n                let modalATMReport = window.$('.modal-atm-report');\r\n                modalATMReport.modal('show');\r\n                modalATMReport.on('click', function () {\r\n                    modalATMReport.modal('hide')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n        if(Object.keys(previousState.gameInfo).length === 0)\r\n        {\r\n            let gameData = previousProps.gamesReducer.data;\r\n            for (var key in gameData) {\r\n                if (gameData.hasOwnProperty(key)) {\r\n                    if(gameData[key].slug === previousProps.match.params.slug)\r\n                    {\r\n                        this.setState({\r\n                            gameInfo: gameData[key]\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        let userRole = nextProps.paymentReducer.userRole.data\r\n        \r\n        if(prevState.sltServer !== '' && userRole)\r\n        {\r\n            return {\r\n                userRole: nextProps.paymentReducer.userRole,\r\n                sltRoleId: prevState.sltRoleId!==''?prevState.sltRoleId:userRole.role[0].roleId,\r\n                errorSelectRole: []\r\n            }            \r\n        }\r\n        return {\r\n            userRole: {},\r\n            sltRoleId: '',\r\n        }\r\n    }\r\n\r\n    checkHasRole = () => {\r\n        let errorSelectRole = [];\r\n        if(this.state.sltRoleId === ''){\r\n            errorSelectRole.push('không tìm thấy thông tin nhân vật')\r\n        }\r\n        this.setState({\r\n            errorSelectRole: errorSelectRole\r\n        })\r\n        return errorSelectRole;\r\n    }\r\n\r\n    handlePayByCard = (e) =>{\r\n        e.preventDefault();\r\n        this.formCardPay.validateAll();\r\n        let errorRole =  this.checkHasRole();\r\n        if ( this.checkBtn1.context._errors.length === 0 && errorRole.length === 0) {\r\n            this.props.chargeCard(this.state)\r\n        }\r\n    }\r\n\r\n    handlePayByATM = (e) => {\r\n        e.preventDefault();\r\n        this.formAtmPay.validateAll();\r\n        let errorRole =  this.checkHasRole();\r\n        if ( this.checkBtn2.context._errors.length === 0 && errorRole.length === 0 ) {\r\n            this.props.chargeAtm(this.state)\r\n        }\r\n    }\r\n\r\n    hanleGetRole = async (event) =>{\r\n        const target = event.target;\r\n        const serverId = target.value;\r\n        if(serverId !== ''){\r\n            await this.props.getUserRole(serverId, JSON.parse(localStorage.getItem('user')).data.id, this.state.gameInfo.agent);\r\n            if(this.props.paymentReducer.userRole.data === undefined){\r\n                this.setState({\r\n                    errorSelectRole: ['không tìm thấy thông tin nhân vật']\r\n                })\r\n            }\r\n        }else{\r\n            this.setState({\r\n                errorSelectRole: ''\r\n            })      \r\n        }\r\n        this.setState({\r\n            sltServer: serverId,\r\n        })\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state)\r\n        let chargeAtmMSG = '';\r\n        if(this.props.paymentReducer.chargeAtmSuccess.data !== undefined)\r\n        {\r\n            chargeAtmMSG = this.props.paymentReducer.chargeAtmSuccess.data.messages\r\n        }\r\n        let server = this.props.gamesReducer.detail;\r\n        let serverElement = null;\r\n        if(server.length > 0)\r\n        {\r\n            serverElement = server.map((val, index) => {\r\n                return <option key={index} value={val.server_id}>{val.server_name}</option>\r\n            })\r\n        }\r\n        let {errorSelectServer, gameInfo, userRole, errorSelectRole} = this.state;\r\n        let {paymentReducer} = this.props;\r\n        if(Object.keys(gameInfo).length === 0 || server.length === 0){\r\n            return (<div style={{textAlign: \"center\"}}>\r\n                        <div className=\"lds-dual-ring\"></div>\r\n                    </div>)\r\n        }else{\r\n            return (\r\n                <div className=\"container paytogame_container\">\r\n                    <div className=\"row box\">\r\n                        <h2>{gameInfo.name}</h2>\r\n                        <div className=\"hd-Form\"> Bước 1: Chọn thông tin nhân vật (*)</div>\r\n                        <label htmlFor=\"sltServer\" className=\"col-sm-12 controll-label\" id=\"list_server\"> Chọn server:</label>\r\n                        {errorSelectServer && (<span className=\"input-error\">{errorSelectServer[0]}</span>)}\r\n                        <select name=\"sltServer\" value={this.state.sltServer} onChange={this.hanleGetRole} className=\"form-control \" id=\"server_list\">\r\n                            <option value=\"\">Chọn server</option>\r\n                            {serverElement}\r\n                        </select>\r\n                        {\r\n                            Object.keys(userRole).length > 0 ?\r\n                            (<div>\r\n                                <label htmlFor=\"sltRoleId\" className=\"col-sm-12 controll-label\"> Chọn nhân vật:</label>\r\n                                <select name=\"sltRoleId\" onChange={this.handleChange} className=\"form-control \" id=\"userRole\">\r\n                                {userRole.data.role.map((val, index) => {\r\n                                    return <option key={index} value={val.roleId}>{val.roleName}</option>\r\n                                })}\r\n                                </select>\r\n                            </div>)\r\n                            :<span className=\"input-error\">{errorSelectRole[0]}</span>\r\n                        }\r\n                        <div id=\"appentHtml\" />\r\n                        <div className=\"clearfix\" /> <input type=\"hidden\" name=\"id_user\" id=\"id_user\" />\r\n                        <div className=\"hd-Form\"> Bước 2: Chọn phương thức thanh toán (*)</div>\r\n                        <div className=\"panel-group paytogame\" id=\"accordion\">\r\n                            <div className=\"panel panel-default\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h4 className=\"panel-title\">\r\n                                        <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse1\">Nạp thẻ cào</a>\r\n                                    </h4>\r\n                                </div>\r\n                                <div id=\"collapse1\" className=\"panel-collapse collapse in\">\r\n                                    <Form onSubmit={e => this.handlePayByCard(e)} ref={c => { this.formCardPay = c }}>\r\n                                        <div className=\"panel-body\">\r\n                                            <label htmlFor=\"sltCardType\" className=\"col-sm-12 controll-label\">\r\n                                                <span>Loại thẻ</span>\r\n                                                <Select name='sltCardType' onChange={this.handleChange} className=\"form-control\" validations={[required]}>\r\n                                                    <option value=\"\">Chọn loại thẻ</option>\r\n                                                    <option value=\"HPC\">HPCode</option>\r\n                                                    <option value=\"GATE\">GATE</option>\r\n                                                </Select>\r\n                                            </label>\r\n                                            <label htmlFor=\"txtSerie\" className=\"col-sm-12 controll-label\">\r\n                                                <span>Số serie</span>\r\n                                                <Input \r\n                                                    name=\"txtSerie\" \r\n                                                    onChange={this.handleChange}\r\n                                                    type=\"text\" \r\n                                                    placeholder=\"\"\r\n                                                    className=\"form-control\" \r\n                                                    validations={[required, minLength, maxLength]}\r\n                                                />\r\n                                            </label>\r\n                                            <label htmlFor=\"txtCardPin\" className=\"col-sm-12 controll-label\">\r\n                                                <span>Mã thẻ</span>\r\n                                                <Input \r\n                                                    name=\"txtCardPin\" \r\n                                                    onChange={this.handleChange}\r\n                                                    type=\"text\" \r\n                                                    placeholder=\"\"\r\n                                                    className=\"form-control\" \r\n                                                    validations={[required, minLength, maxLength]}\r\n                                                />\r\n                                            </label>\r\n                                            <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitCard\" className=\"col-sm-3 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                                            <div className={'dot-loader'}>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                            </div>\r\n                                            :'thanh toán'}</button>\r\n                                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn1 = c }} />\r\n                                            {\r\n                                            paymentReducer.chargeCard.status === 1 ?(<span className=\"message-success\">\r\n                                                {paymentReducer.chargeCard.messages}\r\n                                            </span>):(<span className=\"message-alert\">\r\n                                                {paymentReducer.chargeCard.messages}\r\n                                            </span>)\r\n                                            }\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"panel panel-default\">\r\n                                <div className=\"panel-heading\">\r\n                                    <h4 className=\"panel-title\">\r\n                                        <a data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#collapse2\">Nạp thẻ ATM/iBanking</a>\r\n                                    </h4>\r\n                                </div>\r\n                                <div id=\"collapse2\" className=\"panel-collapse collapse\">\r\n                                    <Form onSubmit={e => this.handlePayByATM(e)} ref={c => { this.formAtmPay = c }}>\r\n                                        <div className=\"panel-body\">\r\n                                            <label htmlFor=\"sltAmount\" className=\"col-sm-12 controll-label\">\r\n                                                <span>Số tiền thanh toán (VNĐ)</span>\r\n                                                <Select name='sltAmount' onChange={this.handleChange} className=\"form-control\" validations={[required]}>\r\n                                                    <option value=\"\">Chọn số tiền</option>\r\n                                                    <option value={10000}>10,000</option>\r\n                                                    <option value={20000}>20,000</option>\r\n                                                    <option value={50000}>50,000</option>\r\n                                                    <option value={100000}>100,000</option>\r\n                                                    <option value={200000}>200,000</option>\r\n                                                    <option value={300000}>300,000</option>\r\n                                                    <option value={500000}>500,000</option>\r\n                                                    <option value={1000000}>1,000,000</option>\r\n                                                    <option value={2000000}>2,000,000</option>\r\n                                                </Select>\r\n                                            </label>\r\n                                            <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitAtm\" className=\"col-sm-3 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                                            <div className={'dot-loader'}>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                                <div></div>\r\n                                            </div>\r\n                                            :'thanh toán'}</button>\r\n                                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn2 = c }} />\r\n                                        </div>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"message-alert\">\r\n                                NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM = 100% (Thẻ HPCode có bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"clearfix\" />\r\n                        <div className=\"modal modal-atm-report fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                            <div className=\"modal-dialog\" role=\"document\">\r\n                                <div className=\"modal-content\">\r\n                                    <div className=\"modal-body\">\r\n                                        <p className={\"text-center\"}>{chargeAtmMSG}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n    paymentReducer: state.paymentReducer,\r\n    isLoadingReducer: state.isLoadingReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        getDetailGameToGame: (productId) => {\r\n            dispatch(gameActions.getDetailGameToGameRequest(productId))\r\n        },\r\n        chargeCard: (params) => {\r\n            dispatch(paymentActions.chargeCardRequest(params))\r\n        },\r\n        chargeAtm: (params) => {\r\n            dispatch(paymentActions.chargeAtmRequest(params))\r\n        },\r\n        getUserRole: async ( serverId, userId, agent) => {\r\n            await dispatch(paymentActions.getUserRoleRequest(serverId, userId, agent))\r\n        },\r\n        chargeAtmSuccess: (paramStr) => {\r\n            dispatch(paymentActions.chargeAtmSuccess(paramStr))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Paytogame))","import React, { Component } from 'react'\r\nimport Paytogame from '../../components/Paytogame'\r\n\r\nclass PayToGamePage extends Component {\r\n    render() {\r\n        return (\r\n            <Paytogame match={this.props.match}></Paytogame>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PayToGamePage","import React, { Component } from 'react'\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default class PayBreadcrumb extends Component {\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let payUrl = \"/nap-vi/\"+match.params.slug+\"-g\"+match.params.id\r\n        return (\r\n            <div className=\"tab-Switch\">\r\n                <NavLink to={payUrl}>Nạp thẻ</NavLink>\r\n                <NavLink to={\"/lich-su-vi/\"+match.params.slug+\"-g\"+match.params.id}>Lịch sử ví</NavLink>\r\n                <NavLink to={\"/lich-su-game/\"+match.params.slug+\"-g\"+match.params.id}>Lịch sử game</NavLink>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport '../assets/css/paytowallet.css'\r\n\r\nimport * as _ from 'lodash';\r\n\r\nimport api from '../utils/Api';\r\nimport apiConfig from '../config/ApiConfig';\r\nimport commonConfig from '../config/CommonConfig';\r\n\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\n\r\nimport Form from 'react-validation/build/form';\r\nimport Input from 'react-validation/build/input';\r\nimport Select from 'react-validation/build/select';\r\nimport CheckButton from 'react-validation/build/button';\r\nimport {required, minLength, maxLength} from \"../utils/validateInput\";\r\n\r\nexport default class Paytowallet extends Component {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param props\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            balance: 0,\r\n            game: {},\r\n            cardsList: commonConfig.CardsList,\r\n            atmValuesList: commonConfig.ATMValuesList,\r\n            serverGroups: [],\r\n            serversList: [],\r\n            goldsList: [],\r\n            isDisableSelectServers: true,\r\n            payItem: {},\r\n            inLoadingPage: false,\r\n            inProcessing: false,\r\n            processingResult: {\r\n                status: null,\r\n                message: ''\r\n            },\r\n            errors: {},\r\n            chargeGameItem: {},\r\n            chargeGameResult: {},\r\n            rolesList: null,\r\n            modalContent: ''\r\n        }\r\n    }\r\n\r\n    /**\r\n     * On component did mount event\r\n     * @created 2020-03-18 LongTHk\r\n     */\r\n    componentDidMount() {\r\n        // get md5\r\n        let md5 = require('md5');\r\n        // get username\r\n        let username = JSON.parse(localStorage.getItem('user')).data.username;\r\n        // get query string\r\n        let queryString = require('query-string');\r\n\r\n        // set inLoadingPage status\r\n        this.setState({\r\n            inLoadingPage: true\r\n        });\r\n\r\n        // call api get page content\r\n        let slug = this.props.match.match.params.slug;\r\n        let sign = md5(username + apiConfig.jwtToken);\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getDetailGameToWallet + '?slug=' + slug + '&username=' + username + '&sign=' + sign;\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get return data\r\n                let data = response.data.data;\r\n                // spit servers list into server groups\r\n                let serverGroups = _.chunk(data.servers, 10);\r\n                // set state\r\n                this.setState({\r\n                    username: username,\r\n                    balance: data.balance,\r\n                    game: Object.keys(data).length > 0 ? data.game[0] : null,\r\n                    serverGroups: serverGroups,\r\n                    goldsList: data.golds\r\n                });\r\n\r\n                // call api check Charging ATM status\r\n                let strParams = this.props.match.location.search;\r\n                let params = queryString.parse(strParams);\r\n                if (_.has(params, 'trans_id')) {\r\n                    let endpointATMSuccess = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATMSuccess + strParams;\r\n                    api.call('GET', endpointATMSuccess)\r\n                        .then((response) => {\r\n                            // set atm response message\r\n                            this.setState({\r\n                                modalContent: response.data.messages\r\n                            });\r\n\r\n                            // create modal\r\n                            let modal = window.$('.modal-notification');\r\n                            // modal close action\r\n                            modal.on('click', function () {\r\n                                modal.modal('hide')\r\n                            });\r\n\r\n                            // show modal\r\n                            modal.modal('show');\r\n                        })\r\n                        .catch((err) => {\r\n                            console.log(err)\r\n                        });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n            .finally(() => {\r\n                // set inLoadingPage status\r\n                this.setState({\r\n                    inLoadingPage: false\r\n                });\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Action on server group changee\r\n     * @param event\r\n     * @crated 2020-03018 LongTHK\r\n     */\r\n    changeServerGroup = (event) => {\r\n        // get server group value\r\n        let serverGroupValue = event.target.value;\r\n\r\n        // load servers list base on group\r\n        if (serverGroupValue !== '') {\r\n            this.setState({\r\n                serversList: this.state.serverGroups[serverGroupValue],\r\n                isDisableSelectServers: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isDisableSelectServers: true\r\n            })\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Handle changing input data\r\n     * @param event\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                [name]: value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Get role name\r\n     * @param event\r\n     */\r\n    handleServerChanged = (event) => {\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // get params\r\n        let userId = JSON.parse(localStorage.getItem('user')).data.id;\r\n        let sign = md5(userId + apiConfig.jwtToken);\r\n        let serverId = event.target.value;\r\n\r\n        // define endpoint\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.getRole +\r\n            '?server_id=' + serverId +\r\n            '&id_user=' + userId +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&sign=' + sign;\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set roles list\r\n                if (responseData.status) {\r\n                    // get roles list\r\n                    let rolesList = responseData.data.role;\r\n\r\n                    // set roles list\r\n                    this.setState({\r\n                        rolesList: rolesList\r\n                    });\r\n\r\n                    // set charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {\r\n                            serverId: serverId,\r\n                            roleId: rolesList[0].roleId\r\n                        }\r\n                    });\r\n                } else {\r\n                    // clear roles list\r\n                    this.setState({\r\n                        rolesList: []\r\n                    });\r\n\r\n                    // clear charge game item\r\n                    this.setState({\r\n                        chargeGameItem: {}\r\n                    })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n    };\r\n\r\n    /**\r\n     * Open charge game modal\r\n     * @param event\r\n     * @returns {Promise<void>}\r\n     */\r\n    openModal = (event) => {\r\n        // get gold id\r\n        let goldId = window.$(event.target).data('gold-id');\r\n\r\n        if (window.$(event.target).data('amount') > this.state.balance) {\r\n            // set state\r\n            this.setState({\r\n                modalContent: 'Không đủ số dư trong tài khoản, hãy chọn mệnh giá thấp hơn hoặc nạp thêm tiền vào ví để tiếp tục giao dịch'\r\n            });\r\n            // create modal\r\n            let modal = window.$('.modal-notification');\r\n            // modal close action\r\n            modal.on('click', function () {\r\n                modal.modal('hide')\r\n            });\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        } else {\r\n            // get gold id\r\n            this.setState(prevState => ({\r\n                chargeGameItem: {\r\n                    ...prevState.chargeGameItem,\r\n                    goldId: goldId\r\n                }\r\n            }));\r\n\r\n            // create modal\r\n            let modal = window.$('.modal-confirm');\r\n            // modal close action\r\n            modal.on('hidden.bs.modal', function () {\r\n                this.setState({\r\n                    chargeGameResult: {}\r\n                })\r\n            }.bind(this));\r\n\r\n            // show modal\r\n            modal.modal('show');\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Action on change role\r\n     * @param event\r\n     */\r\n    changeRoleId = (event) => {\r\n        this.setState(prevState => ({\r\n            chargeGameItem: {\r\n                ...prevState,\r\n                roleId: event.target.value\r\n            }\r\n        }))\r\n    };\r\n\r\n    /**\r\n     * Charge game\r\n     * @param event\r\n     */\r\n    chargeGame = (event) => {\r\n        // stop propagation\r\n        event.stopPropagation();\r\n\r\n        // get md5\r\n        let md5 = require('md5');\r\n\r\n        // create end point\r\n        let endPoint = apiConfig.domain + apiConfig.endpoint.payToGame +\r\n            '?roleId=' + this.state.chargeGameItem.roleId +\r\n            '&goldId=' + this.state.chargeGameItem.goldId +\r\n            '&username=' + this.state.username +\r\n            '&productAgent=' + this.state.game.agent +\r\n            '&serverId=' + this.state.chargeGameItem.serverId +\r\n            '&sign=' + md5(this.state.username + apiConfig.jwtToken);\r\n\r\n        // call api\r\n        api.call('GET', endPoint)\r\n            .then((response) => {\r\n                // get response data\r\n                let responseData = response.data;\r\n\r\n                // set state\r\n                this.setState({\r\n                    chargeGameResult: {\r\n                        status: responseData.status,\r\n                        message: responseData.messages\r\n                    }\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log('err');\r\n            })\r\n    };\r\n\r\n    /**\r\n     * Change pay item\r\n     * @param payType\r\n     * @created 2020-03-19 LongTHK\r\n     */\r\n    changePayItem = (payType) => {\r\n        switch (payType) {\r\n            case 'card':\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n                break;\r\n            case 'atm':\r\n                this.setState({\r\n                    payItem: {\r\n                        amount: '',\r\n                    }\r\n                });\r\n                break;\r\n            default :\r\n                this.setState({\r\n                    payItem: {\r\n                        cardType: '',\r\n                        serie: '',\r\n                        number: ''\r\n                    }\r\n                });\r\n        }\r\n\r\n        // push value to pay item\r\n        this.setState(prevState => ({\r\n            payItem: {\r\n                ...prevState.payItem,\r\n                username: this.state.username,\r\n                productAgent: this.state.game.agent\r\n            }\r\n        }));\r\n\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Pay by card\r\n     * @created 2020-03-19 LongTHk\r\n     */\r\n    payByCard = async () => {\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n        this.formCardPay.validateAll();\r\n        if ( this.checkBtn1.context._errors.length === 0) {\r\n            // set inProcessing mode\r\n            this.setState({\r\n                inProcessing: true\r\n            });\r\n            // get md5\r\n            const md5 = require('md5');\r\n            // get pay item\r\n            const payItem = this.state.payItem;\r\n\r\n            // generate endpoint\r\n            const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeCard +\r\n                '?serial=' + payItem.serie +\r\n                '&code=' + payItem.number +\r\n                '&username=' + payItem.username +\r\n                '&productAgent=' + payItem.productAgent +\r\n                '&type=' + payItem.cardType +\r\n                '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n            // call api\r\n            api.call('GET', endPoint)\r\n                .then((response) => {\r\n                    // get response data\r\n                    let responseData = response.data;\r\n\r\n                    // set state\r\n                    if (responseData.status) {\r\n                        this.setState({\r\n                            balance: responseData.data.balance,\r\n                            processingResult: {\r\n                                status: true,\r\n                                message: responseData.messages\r\n                            }\r\n                        });\r\n                    } else {\r\n                        this.setState({\r\n                            processingResult: {\r\n                                status: false,\r\n                                message: responseData.messages\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                })\r\n                .finally(() => {\r\n                    // release inProcessing mode\r\n                    this.setState({\r\n                        inProcessing: false\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Pay by ATM\r\n     * @created 2020-03-19 LongTHk\r\n     */\r\n    payByATM = async () => {\r\n        // reset error\r\n        this.setState({\r\n            errors: {}\r\n        });\r\n        this.formAtmPay.validateAll();\r\n        if (this.checkBtn2.context._errors.length === 0) {\r\n            // set inProcessing mode\r\n            this.setState({\r\n                inProcessing: true\r\n            });\r\n            // get md5\r\n            const md5 = require('md5');\r\n            // get pay item\r\n            const payItem = this.state.payItem;\r\n\r\n            // generate endpoint\r\n            const endPoint = apiConfig.domain + apiConfig.endpoint.paymentWalletChargeATM +\r\n                '?username=' + payItem.username +\r\n                '&productAgent=' + payItem.productAgent +\r\n                '&amount=' + payItem.amount +\r\n                '&sign=' + md5(payItem.username + apiConfig.jwtToken);\r\n\r\n            // call api\r\n            api.call('GET', endPoint)\r\n                .then((response) => {\r\n                    window.location.href = response.data.data.link;\r\n                })\r\n                .catch((err) => {\r\n                    // release inProcessing mode\r\n                    this.setState({\r\n                        inProcessing: false\r\n                    });\r\n                    console.log(err)\r\n                });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Render layout\r\n     * @returns {*}\r\n     * @created 2020-03-18 LongTHK\r\n     */\r\n    render() {\r\n        /**\r\n         * Render in case game not found\r\n         */\r\n        if (Object.keys(this.state.game).length === 0 || this.state.game === undefined) {\r\n            return (<div style={{textAlign: \"center\"}}>\r\n                        <div className=\"lds-dual-ring\"></div>\r\n                    </div>)\r\n        }\r\n\r\n        /**\r\n         * Page render\r\n         */\r\n        return (\r\n            \r\n            <div className=\"container paytowallet_container\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={this.props.match.match}></PayBreadcrumb>\r\n                        <h2>{this.state.game.name}</h2>\r\n                        <div className=\"qa-message-list\" id=\"wallmessages\">\r\n                            <div className=\"message-item\" id=\"accRole\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix handle-acc-role\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Tài khoản : {this.state.username}</h5>\r\n                                            <h6 className=\"handle\">Số dư : {this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</h6>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"balance\"/>\r\n                                            <input type=\"hidden\" defaultValue={771866} name=\"id_user\" id=\"id_user\"/>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"amount\" id=\"amount\"/>\r\n                                            <input type=\"hidden\" defaultValue={0} name=\"gold_id\" id=\"gold_id\"/>\r\n                                            <input type=\"hidden\" defaultValue name=\"theThang\" id=\"theThang\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"message-item\" id=\"accType\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Chọn phương thức để nạp tiền vào ví</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"qa-message-content\">\r\n                                        <div className=\"collapse-group\" id=\"accordion\">\r\n                                            <div className=\"panel panel-default\">\r\n                                                <div className=\"panel-heading\" role=\"tab\" id=\"headingOne\">\r\n                                                    <h4 className=\"panel-title\">\r\n                                                        <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseOne\"\r\n                                                           onClick={this.changePayItem.bind(window.event, 'card')}\r\n                                                           data-parent=\"#accordion\"\r\n                                                           aria-expanded=\"true\" aria-controls=\"collapseOne\"\r\n                                                           className=\"trigger collapsed\">\r\n                                                            Thẻ cào\r\n                                                        </a>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div id=\"collapseOne\" className=\"panel-collapse collapse\"\r\n                                                     role=\"tabpanel\"\r\n                                                     aria-labelledby=\"headingOne\" data-id=\"Thẻ cào\">\r\n                                                    <Form ref={c => { this.formCardPay = c }}>\r\n                                                    <div className=\"panel-body\">\r\n                                                        <div className=\"tab-pane active\" id=\"tab_card_pay\">\r\n                                                            <label htmlFor=\"in_type\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Loại thẻ</span>\r\n                                                                <Select name='sltCardType' onChange={this.handleChange} className=\"form-control\" validations={[required]}>\r\n                                                                    <option value=\"\">Chọn loại thẻ</option>\r\n                                                                    {\r\n                                                                        _.map(this.state.cardsList, (itemValue, itemIndex) =>\r\n                                                                            <option key={itemIndex}\r\n                                                                                    value={itemValue.type}>{itemValue.name}</option>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </label>\r\n                                                            <label htmlFor=\"in_serie\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Số serie</span>\r\n                                                                <Input \r\n                                                                    name=\"serie\" \r\n                                                                    onChange={this.handleChange}\r\n                                                                    type=\"text\" \r\n                                                                    placeholder=\"\"\r\n                                                                    className=\"form-control\" \r\n                                                                    validations={[required, minLength, maxLength]}\r\n                                                                />\r\n                                                            </label>\r\n                                                            <label htmlFor=\"in_pin\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Mã thẻ</span>\r\n                                                                <Input \r\n                                                                    name=\"number\" \r\n                                                                    onChange={this.handleChange}\r\n                                                                    type=\"text\" \r\n                                                                    placeholder=\"\"\r\n                                                                    className=\"form-control\" \r\n                                                                    validations={[required, minLength, maxLength]}\r\n                                                                />\r\n                                                            </label>\r\n                                                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn1 = c }} />\r\n                                                            <button className=\"btn btn-info\" id=\"btnCardPay\"\r\n                                                                    type={\"button\"}\r\n                                                                    data-id=\"the-cao\"\r\n                                                                    onClick={this.payByCard}\r\n                                                                    disabled={this.state.inProcessing}>\r\n                                                                {\r\n                                                                    !this.state.inProcessing &&\r\n                                                                    <span>Thanh toán</span>\r\n                                                                }\r\n                                                                {\r\n                                                                    this.state.inProcessing &&\r\n                                                                    <div className={'dot-loader'}>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                    </div>\r\n                                                                }\r\n                                                            </button>\r\n                                                            {\r\n                                                                (\r\n                                                                    this.state.processingResult.status !== null &&\r\n                                                                    !this.state.processingResult.status &&\r\n                                                                    <span\r\n                                                                        className=\"message-alert\">{this.state.processingResult.message}</span>\r\n                                                                ) ||\r\n                                                                (\r\n                                                                    this.state.processingResult.status !== null &&\r\n                                                                    this.state.processingResult.status &&\r\n                                                                    <span\r\n                                                                        className=\"message-success\">{this.state.processingResult.message}</span>\r\n                                                                )\r\n                                                            }\r\n                                                            <div className=\"clearfix\"/>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    </Form>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"panel panel-default\">\r\n                                                <div className=\"panel-heading\" role=\"tab\" id=\"headingTwo\">\r\n                                                    <h4 className=\"panel-title\">\r\n                                                        <a role=\"button\" data-toggle=\"collapse\" href=\"#collapseTwo\"\r\n                                                           data-parent=\"#accordion\"\r\n                                                           onClick={this.changePayItem.bind(window.event, 'atm')}\r\n                                                           aria-expanded=\"true\" aria-controls=\"collapseTwo\"\r\n                                                           className=\"trigger collapsed\">\r\n                                                            Thẻ ATM/Nội địa/NAPAS\r\n                                                        </a>\r\n                                                    </h4>\r\n                                                </div>\r\n                                                <div id=\"collapseTwo\" className=\"panel-collapse collapse\"\r\n                                                     role=\"tabpanel\"\r\n                                                     aria-labelledby=\"headingTwo\" data-id=\"Thẻ ATM/Nội địa/NAPAS\">\r\n                                                    <Form ref={c => { this.formAtmPay = c }}>\r\n                                                    <div className=\"panel-body\">\r\n                                                        <div id=\"tab_card_pay\">\r\n                                                            <label htmlFor=\"amount_pay\"\r\n                                                                   className=\"col-sm-12 controll-label\">\r\n                                                                <span>Số tiền thanh toán (VNĐ)</span>\r\n                                                                <Select name='amount' onChange={this.handleChange} className=\"form-control\" validations={[required]}>\r\n                                                                    <option value=\"\">Chọn số tiền</option>\r\n                                                                    {\r\n                                                                        _.map(this.state.atmValuesList, (itemValue, itemIndex) =>\r\n                                                                            <option key={itemIndex}\r\n                                                                                    value={itemValue.value}>{itemValue.displayText}</option>\r\n                                                                        )\r\n                                                                    }\r\n                                                                </Select>\r\n                                                            </label>\r\n                                                            <button className=\"btn btn-info\" id=\"btnXacnhan\"\r\n                                                                    type={\"button\"} data-id=\"the-atm\"\r\n                                                                    onClick={this.payByATM}\r\n                                                                    disabled={this.state.inProcessing}>\r\n                                                                {\r\n                                                                    !this.state.inProcessing &&\r\n                                                                    <span>Thanh toán</span>\r\n                                                                }\r\n                                                                {\r\n                                                                    this.state.inProcessing &&\r\n                                                                    <div className={'dot-loader'}>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                        <div></div>\r\n                                                                    </div>\r\n                                                                }\r\n                                                            </button>\r\n                                                            <CheckButton style={{ display: 'none' }} ref={c => { this.checkBtn2 = c }} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    </Form>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"message-alert\">NẠP HPCODE = 100% ; GATE = 100% ; VCOIN = 90% ; ATM =\r\n                                        100% (Thẻ HPCode có\r\n                                        bán ở các cửa hàng của Payoo &amp; bán online tại Website Napthegame.net )\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"message-item\" id=\"accGetRole\">\r\n                                <div className=\"message-inner\">\r\n                                    <div className=\"message-head clearfix\">\r\n                                        <div className=\"user-detail\">\r\n                                            <h5 className=\"handle\">Chọn server để nạp tiền vào game</h5>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"qa-message-content content_server\">\r\n                                        <div className=\"divserverList\">\r\n                                            <input type=\"hidden\" name=\"agent\" id=\"agent\" defaultValue=\"m002\"/>\r\n                                            <label htmlFor=\"server_group\" className=\"col-sm-12 controll-label\">\r\n                                                Chọn cụm máy chủ:\r\n                                            </label>\r\n                                            <select name=\"server_group\" className=\"form-control \"\r\n                                                    id=\"server_group\"\r\n                                                    onChange={this.changeServerGroup}\r\n                                            >\r\n                                                <option value=\"\">Chọn group server</option>\r\n                                                {\r\n                                                    _.map(this.state.serverGroups, (serverGroupValue, serverGroupIndex) =>\r\n                                                        <option key={serverGroupIndex} value={serverGroupIndex}>\r\n                                                            Cụm máy\r\n                                                            chủ {serverGroupIndex * 10 + 1} - {serverGroupIndex * 10 + 10}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                            <label htmlFor=\"server_list\" className=\"col-sm-12 controll-label\"\r\n                                                   style={{width: 'auto'}}>\r\n                                                Chọn server:\r\n                                            </label>\r\n                                            <select name=\"server_id\" className=\"form-control \"\r\n                                                    id=\"server_list\"\r\n                                                    disabled={this.state.isDisableSelectServers}\r\n                                                    onChange={this.handleServerChanged}\r\n                                            >\r\n                                                <option value=\"\">Chọn server</option>\r\n                                                {\r\n                                                    _.map(this.state.serversList, (serverValue, serverIndex) =>\r\n                                                        <option key={serverIndex} value={serverValue.server_id}>\r\n                                                            {serverValue.server_name}\r\n                                                        </option>\r\n                                                    )\r\n                                                }\r\n                                            </select>\r\n                                        </div>\r\n                                        <div id=\"appentHtml\">\r\n                                            <label htmlFor=\"server_list\"\r\n                                                   className=\"col-sm-12 controll-label\"\r\n                                                   style={{width: 'auto'}}>&nbsp;\r\n                                            </label>\r\n                                            {\r\n                                                this.state.rolesList !== null &&\r\n                                                this.state.rolesList.length > 0 &&\r\n                                                <div>\r\n                                                    <select name=\"rolesList\" className=\"form-control \"\r\n                                                            id=\"server_list\" onChange={this.changeRoleId}>\r\n                                                        {\r\n                                                            _.map(this.state.rolesList, (roleValue, roleIndex) =>\r\n                                                                <option key={roleIndex}\r\n                                                                        value={roleValue.roleId}>{roleValue.roleName}</option>\r\n                                                            )\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            }\r\n                                            {\r\n                                                this.state.rolesList !== null &&\r\n                                                this.state.rolesList.length === 0 &&\r\n                                                <div className=\"role-name\">\r\n                                                    Không tìm thấy nhân vật game\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"clearfix\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {\r\n                                this.state.rolesList !== null &&\r\n                                this.state.rolesList.length > 0 &&\r\n                                <div className=\"message-item\" id=\"accRang\">\r\n                                    <div className=\"message-inner\">\r\n                                        <div className=\"message-head clearfix\">\r\n                                            <div className=\"user-detail\">\r\n                                                <h5 className=\"handle\">Chọn gói vật phẩm</h5>\r\n                                                <p className=\"tab\" id=\"coingold\">Gói Nguyên Bảo</p>\r\n                                                <p className=\"tab\" id=\"coingift\">Gói Quà Đặc Biệt</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"qa-message-content\">\r\n                                            <div className=\"form-group resultCoin\">\r\n                                                <div id=\"showcoingold\">\r\n                                                    {\r\n                                                        _.map(this.state.goldsList, (goldItemValue, goldItemIndex) =>\r\n                                                            <div className=\"gold-item\" key={goldItemIndex}>\r\n                                                                <img\r\n                                                                    src={commonConfig.assetDomain + goldItemValue.image}\r\n                                                                    data-amount={goldItemValue.amount}\r\n                                                                    data-gold-id={goldItemValue.id}\r\n                                                                    onClick={this.openModal}\r\n                                                                    alt={goldItemValue.amount}\r\n                                                                />\r\n                                                            </div>\r\n                                                        )\r\n                                                    }\r\n                                                </div>\r\n                                                <div id=\"showcoingift\"/>\r\n                                            </div>\r\n                                            <div className=\"clearfix\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div id=\"myModal\" className=\"modal\">\r\n                                <div className=\"modal-content clearfix\">\r\n                                    <h1>Xác nhận giao dịch</h1>\r\n                                    <input type=\"submit\" name=\"submit\" id=\"submitbutton\"\r\n                                           className=\"col-sm-3 btn btn-primary\"\r\n                                           defaultValue=\"Thanh toán\"/>\r\n                                    <div className=\"clearfix\"/>\r\n                                    <span className=\"close btn-danger\">Chấp nhận</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                </div>\r\n\r\n                <div className=\"modal modal-notification fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-body\">\r\n                                <p className={\"text-center\"}>{this.state.modalContent}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"modal modal-confirm fade\" tabIndex=\"-1\" role=\"dialog\" data-backdrop=\"false\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            {\r\n                                Object.keys(this.state.chargeGameItem).length > 0 &&\r\n                                <div className=\"modal-body\">\r\n                                    <p>\r\n                                        <b>Server:</b>&nbsp;\r\n                                        {\r\n                                            this.state.serversList[_.findIndex(this.state.serversList, function (item) {\r\n                                                return item.server_id === this.state.chargeGameItem.serverId\r\n                                            }.bind(this))].server_name\r\n                                        }\r\n                                    </p>\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Gói nạp:</b>&nbsp;\r\n                                            {\r\n                                                this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].gold\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                    <p>\r\n                                        <b>Số dư hiện tại:</b>&nbsp;{ this.state.balance.toLocaleString('it-IT', {style : 'currency', currency : 'VND'}) }\r\n                                    </p>\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Số tiền cần thành toán:</b>&nbsp;\r\n                                            {\r\n                                                this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                    {\r\n                                        this.state.chargeGameItem.hasOwnProperty('goldId') &&\r\n                                        <p>\r\n                                            <b>Số dư còn lại:</b>&nbsp;\r\n                                            {\r\n                                                (this.state.balance - this.state.goldsList[_.findIndex(this.state.goldsList, function (item) {\r\n                                                    return item.id === this.state.chargeGameItem.goldId\r\n                                                }.bind(this))].amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n                                            }\r\n                                        </p>\r\n                                    }\r\n                                </div>\r\n                            }\r\n                            <div className=\"modal-footer\">\r\n                                <div\r\n                                    className={(this.state.chargeGameResult.status !== 0) ? 'text-center text-success' : 'text-center text-danger'}>\r\n                                    {this.state.chargeGameResult.message}\r\n                                </div>\r\n                                <button type={\"button\"} className=\"btn btn-primary\" onClick={this.chargeGame}>Nạp vào\r\n                                    game\r\n                                </button>\r\n                                <button type={\"button\"} className=\"btn btn-danger\" data-dismiss=\"modal\">Đóng</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Paytowallet from \"../../components/Paytowallet\"\r\n\r\nexport default class PaytowalletPage extends Component {\r\n    render() {\r\n        return (\r\n            <Paytowallet match={this.props.match}></Paytowallet>\r\n        )\r\n    }\r\n}\r\n","const historyActionTypes = {\r\n    GET_CARD_HISTORY: 'GET_CARD_HISTORY',\r\n    GET_PAY_TO_GAME_HISTORY: 'GET_PAY_TO_GAME_HISTORY',\r\n}\r\nexport default historyActionTypes;","import historyActionTypes from \"../actionTypes/history.actiontypes\";\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from \"../config/ApiConfig\";\r\nimport apiConfig from \"../config/ApiConfig\";\r\nimport isloadingAction from \"../actions/isloading.actions\";\r\n\r\nconst historyActions = {};\r\n\r\nhistoryActions.getCardHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getCardHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getCardHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.filterPayToGameHistoryRequest = (username, game, formDate, toDate) => {\r\n    let md5 = require('md5');\r\n    let sign = md5(username+apiConfig.jwtToken);\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPayToGameHistory + '?productAgent='+game+'&sign='+sign+'&username='+username+'&fromDate='+formDate+'&toDate='+toDate+'';\r\n    return async (dispatch) => {\r\n        dispatch(isloadingAction.showLoader())\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(historyActions.getPayToGameHistory(result))\r\n            }\r\n        })\r\n        dispatch(isloadingAction.hideLoader())\r\n    }\r\n}\r\n\r\nhistoryActions.getPayToGameHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_PAY_TO_GAME_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nhistoryActions.getCardHistory = (result) => {\r\n    return {\r\n        type: historyActionTypes.GET_CARD_HISTORY,\r\n        result\r\n    }\r\n}\r\n\r\nexport default historyActions;","import React, { Component } from 'react'\r\nimport DateRangePicker from 'react-bootstrap-daterangepicker';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap-daterangepicker/daterangepicker.css';\r\nimport { connect } from 'react-redux'\r\nimport historyActions from \"../actions/history.actions\"\r\nimport gameActions from \"../actions/games.actions\"\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass HistoryPayFilter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        var date = new Date();\r\n        var currentDate = `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`\r\n        var currentDateRequest = `${date.getFullYear()}-${date.getMonth()+1}-${date.getDate()}`\r\n        this.state = {\r\n            data: [],\r\n            sltGame: '',\r\n            inputStart: currentDate,\r\n            inputFinish: currentDate,\r\n            formDate: currentDateRequest,\r\n            toDate: currentDateRequest\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n    \r\n    handleEvent = (event, picker) => {\r\n        this.setState({\r\n          inputStart: picker.startDate.format('DD/MM/YYYY') ,\r\n          inputFinish: picker.endDate.format('DD/MM/YYYY') ,\r\n          formDate: picker.startDate.format('YYYY-MM-DD') ,\r\n          toDate: picker.endDate.format('YYYY-MM-DD') ,\r\n        });\r\n    }\r\n\r\n    handleFilter = (e) => {\r\n        e.preventDefault();\r\n        let username = JSON.parse(localStorage.getItem('user')).data.username;\r\n        if(this.props.match.url.includes('lich-su-game')){\r\n            this.props.filterPayToGameHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n        else{\r\n            this.props.filterCardHistory(username, this.state.sltGame, this.state.formDate, this.state.toDate)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        if(this.props.match.url.includes('lich-su-game')){\r\n            if(this.props.historyReducer.payToGameHistory.length > 0){\r\n                this.props.setData(this.props.historyReducer.payToGameHistory, this.props.gamesReducer.data)\r\n            }\r\n            else{\r\n                this.props.setData([])\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.props.historyReducer.cardHistory.length > 0){\r\n                this.props.setData(this.props.historyReducer.cardHistory, this.props.gamesReducer.data)\r\n            }\r\n            else{\r\n                this.props.setData([])\r\n            }\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState){\r\n        if( Object.keys(nextProps.gamesReducer.data).length === 0){\r\n            nextProps.getGameList();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let gameElement = null\r\n        if(this.props.gamesReducer['data'].length > 0)\r\n        {\r\n            gameElement = this.props.gamesReducer['data'].map((val, index) => {\r\n                                    return <option key={index} value={val.agent}>{val.name}</option>\r\n                                })\r\n        }\r\n        return (\r\n            <form method=\"POST\" name=\"cardhistory\" onSubmit={this.handleFilter} id=\"cardhistory\">\r\n                <div className=\"box-row width-100\"><label htmlFor=\"config-form\" className=\"col-sm-2 controll-label\">Product:</label>\r\n                    <select name=\"sltGame\" className=\"form-control\" id=\"config-form\" onChange={this.handleChange}>\r\n                        <option value>All</option>\r\n                        {gameElement}\r\n                    </select>\r\n                </div>\r\n                <div className=\"box-row width-100\">\r\n                    <label htmlFor=\"config-demo\" className=\"controll-label col-sm-2\">Time:</label>\r\n                    <DateRangePicker\r\n                        autoApply={true}\r\n                        autoUpdateInput={false}\r\n                        startDate={this.state.inputStart}\r\n                        endDate={this.state.inputFinish}\r\n                        locale={{ format: \"DD/MM/YYYY\" }}\r\n                        onEvent={this.handleEvent}\r\n                        >\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"txtDaterange\"\r\n                            value={this.state.inputStart + ' - ' + this.state.inputFinish}\r\n                            readOnly={true}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </DateRangePicker>\r\n                </div>\r\n                {/* <button id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">Search</button> */}\r\n                <button disabled={this.props.isLoadingReducer.isLoading} id=\"submitbutton\" className=\"col-sm-2 btn btn-primary\">{this.props.isLoadingReducer.isLoading?\r\n                            <div className={'dot-loader'}>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                                <div></div>\r\n                            </div>\r\n                            :'Tìm kiếm'}</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    gamesReducer: state.gamesReducer,\r\n    historyReducer: state.historyReducer,\r\n    isLoadingReducer: state.isLoadingReducer\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        filterCardHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.getCardHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        filterPayToGameHistory: (username, game, formDate, toDate ) => {\r\n            dispatch(historyActions.filterPayToGameHistoryRequest(username, game, formDate, toDate))\r\n        },\r\n        getGameList: () => {\r\n            dispatch(gameActions.getAllRequest())\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(HistoryPayFilter));","import React, { Component } from 'react'\r\nimport HistoryPayFilter from './HistoryPayFilter'\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PayToGameHistory extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            payToGameHistory: [],\r\n            gameData: []\r\n        }\r\n    }\r\n\r\n    getChildData = (data, gameData) => {\r\n        this.setState({\r\n            payToGameHistory: data,\r\n            gameData: gameData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let {payToGameHistory, gameData} = this.state;\r\n        let dataElement = null;\r\n        if(payToGameHistory.length > 0)\r\n        {\r\n            dataElement = payToGameHistory.map((val, index) => {\r\n                const gameInfo = gameData.filter(e => e.agent.includes(val.product_id));\r\n                return (<tr key={index}>\r\n                            <td>{val.transaction_id}</td>\r\n                            <td>{val.amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                            <td>{val.gold}</td>\r\n                            <td>{gameInfo[0].name}</td>\r\n                            <td>{val.server_id}</td>\r\n                            <td>{val.card_status}</td>\r\n                            <td>{val.create_date}</td>\r\n                        </tr>)\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container paytogamehistory\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={match}></PayBreadcrumb>\r\n                    <h3>Lịch sử nạp vào game</h3>\r\n                    <HistoryPayFilter setData={this.getChildData}></HistoryPayFilter>\r\n                    <div className=\"table-responsive\" style={{width: '100%'}}>\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Transaction ID</td>\r\n                                    <td>Mệnh giá</td>\r\n                                    <td>Giá trị duy đổi</td>\r\n                                    <td>Game</td>\r\n                                    <td>Server</td>\r\n                                    <td>Trạng thái nạp vào game</td>\r\n                                    <td>Ngày thực hiện</td>\r\n                                </tr>\r\n                                {\r\n                                    dataElement !== null?dataElement:\r\n                                    <tr>\r\n                                        <td>Không có dữ liệu</td>\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                    </tr>\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    historyReducer: state.historyReducer,\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(PayToGameHistory));","import React, { Component } from 'react'\r\nimport PayToGameHistory from '../../components/PayToGameHistory';\r\n\r\nexport default class HistoryPayToGamePage extends Component {\r\n    render() {\r\n        return (\r\n            <PayToGameHistory />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport HistoryPayFilter from './HistoryPayFilter'\r\nimport PayBreadcrumb from './PayBreadcrumb'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nclass PayToWalletHistory extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state= {\r\n            historyCard: [],\r\n            gameData: []\r\n        }\r\n    }\r\n\r\n    getChildData = (data, gameData) => {\r\n        this.setState({\r\n            historyCard: data,\r\n            gameData: gameData\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let {match} = this.props\r\n        let {historyCard, gameData} = this.state;\r\n        let historyElement = null;\r\n        if(historyCard.length > 0)\r\n        {\r\n            historyElement = historyCard.map((val, index) => {\r\n                const gameInfo = gameData.filter(e => e.agent.includes(val.product_id));\r\n                return (<tr key={index}>\r\n                            <td>{val.transaction_id}</td>\r\n                            <td>{gameInfo[0].name}</td>\r\n                            <td>{val.card_type}</td>\r\n                            <td>{val.amount.toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                            <td>{val.gold}</td>\r\n                            <td>{val.card_status}</td>\r\n                            <td>{val.card_message}</td>\r\n                            <td>{val.create_date}</td>\r\n                        </tr>)\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"container paytogamehistory\">\r\n                <div className=\"row box\">\r\n                    <PayBreadcrumb match={match}></PayBreadcrumb>\r\n                    <h3>Lịch sử ví</h3>\r\n                    <HistoryPayFilter setData={this.getChildData}></HistoryPayFilter>\r\n                    <div className=\"table-responsive\" style={{width: '100%'}}>\r\n                        <table className=\"table table-bordered\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Transaction ID</td>\r\n                                    <td>Game</td>\r\n                                    <td>Loại thẻ</td>\r\n                                    <td>Mệnh giá</td>\r\n                                    <td>Giá trị duy đổi</td>\r\n                                    <td>Mã lỗi</td>\r\n                                    <td>Thông báo</td>\r\n                                    <td>Ngày thực hiện</td>\r\n                                </tr>\r\n                                {\r\n                                    historyElement !== null?\r\n                                    historyElement:\r\n                                    <tr>\r\n                                        <td>Không có dữ liệu</td>\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                        <td />\r\n                                    </tr>\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(PayToWalletHistory);","import React, { Component } from 'react'\r\nimport PayToWalletHistory from '../../components/PayToWalletHistory';\r\n\r\nexport default class HistoryPayToWalletPage extends Component {\r\n    render() {\r\n        return (\r\n            <PayToWalletHistory></PayToWalletHistory>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport \"../assets/css/404.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class PageNotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"notfound\">\r\n                <div className=\"notfound\">\r\n                    <div className=\"notfound-404\">\r\n                        <h1>404</h1>\r\n                    </div>\r\n                    <h2>Oops! Không có trang được tìm thấy</h2>\r\n                    <p>Trang đang tìm kiếm có thể bị xóa hoặc không tồn tại. <Link to=\"/\">Trang chủ</Link></p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport loginAction from \"../actions/login.actions\"\r\nimport { connect } from \"react-redux\";  \r\n\r\nclass AppleLoginCallback extends Component {\r\n\r\n    parseJwt = (token) => {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n\r\n    componentDidMount(){\r\n        let queryString = require('query-string');\r\n        let strParams = this.props.location.hash;\r\n        let params = queryString.parse(strParams);\r\n        if (this.props.login.isLogged === false && params.id_token !== undefined){\r\n            let tokenData = this.parseJwt(params.id_token)        \r\n            this.props.appleSignIn(tokenData.sub)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        appleSignIn: (sub) => {\r\n            dispatch(loginAction.LoginApple(sub))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(AppleLoginCallback))","import React from 'react'\r\nimport Homepage from './pages/homepage/Homepage';\r\nimport Loginpage from './pages/login/Loginpage';\r\nimport Detailpage from './pages/detailpage/Detailpage';\r\nimport PayToGamePage from './pages/paymentpage/PayToGamePage';\r\nimport PayToWalletPage from './pages/paymentpage/PayToWalletPage';\r\nimport HistoryPayToGamePage from './pages/paymentpage/HistoryPayToGamePage';\r\nimport HistoryPayToWalletPage from './pages/paymentpage/HistoryPayToWalletPage';\r\nimport PageNotFound from './pages/PageNotFound';\r\nimport AppleLoginCallBack from \"./components/AppleLoginCallback\";\r\n\r\nconst Routes = [\r\n    {\r\n        path: \"/login\",\r\n        exact: true,\r\n        main: () => <Loginpage />,\r\n    },\r\n    {\r\n        path: \"/login/appleCallback\",\r\n        exact: true,\r\n        main: () => <AppleLoginCallBack />,\r\n    },\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        main: () => <Homepage />,\r\n    },\r\n    {\r\n        path: \"/post-detail/:slug\",\r\n        exact: false,\r\n        main: ({match, history}) => <Detailpage match={match} history={history} />,\r\n    },\r\n    {\r\n        path: \"/nap-game/:slug-g:id\",\r\n        exact: false,\r\n        main: ({match}) => <PayToGamePage match={match} />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/nap-vi/:slug-g:id\",\r\n        exact: false,\r\n        main: (match) => <PayToWalletPage match={match} />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/lich-su-game/:slug-g:id\",\r\n        exact: true,\r\n        main: () => <HistoryPayToGamePage />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"/lich-su-vi/:slug-g:id\",\r\n        exact: true,\r\n        main: () => <HistoryPayToWalletPage />,\r\n        isLogged: true\r\n    },\r\n    {\r\n        path: \"*\",\r\n        exact: false,\r\n        main: () => <PageNotFound />\r\n    },\r\n]\r\n\r\nexport default Routes","import React from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\n/**\r\n * Private Route\r\n */\r\nconst PrivateRoutes = ({ component: Comp, isLogged, path, ...rest }) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      render={(props) => {\r\n        return isLogged ? (\r\n          <Comp {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/login\",\r\n              state: {\r\n                prevLocation: path,\r\n              },\r\n            }}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoutes;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { connect } from \"react-redux\";  \r\nimport Header from './components/layout/Header';\r\nimport Footer from './components/layout/Footer';\r\nimport Routes from './routes';\r\nimport './assets/css/style.css';\r\nimport PrivateRoutes from \"./components/PrivateRoutes\";\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch\r\n} from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <Router>\r\n                    <Header></Header>\r\n                        {this.InitRoute(Routes)}\r\n                    <Footer></Footer>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    InitRoute = (Routes) => {\r\n        let result = null;\r\n        if(Routes.length > 0){\r\n            result = Routes.map((val, index) => {\r\n                if(val.isLogged){\r\n                    return <PrivateRoutes key={index} path={val.path} isLogged={this.props.login.isLogged} component={val.main} exact={val.exact}></PrivateRoutes>\r\n                }\r\n                return (<Route key={index} path={val.path} component={val.main} exact={val.exact}></Route>)\r\n            })\r\n        }\r\n        return <Switch>{result}</Switch>\r\n    } \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(App);\r\n","import gameActionTypes from \"../actionTypes/game.actiontypes\"; \r\n\r\nvar initialState = {\r\n    data: {},\r\n    detail: {},\r\n    errors: null\r\n};\r\n\r\nvar gameReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case gameActionTypes.GET_ALL_GAME:{\r\n            state.data = action.result.data.data;\r\n            return {...state};\r\n        }\r\n        case gameActionTypes.GET_DETAIL_GAME_TO_GAME:{\r\n            state.detail = action.result.data.data;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n}\r\n\r\nexport default gameReducer;","import sliderActionTypes from \"../actionTypes/slider.actiontypes\"; \r\nimport CommonConfig from \"../config/CommonConfig\";\r\nvar initialState = [\r\n];\r\n\r\nvar sliderReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case sliderActionTypes.GET_ALL:{\r\n            if(action.result.data.length > 0){\r\n                let data = JSON.parse(action.result.data.data[0].items);\r\n                let newSlider = [];\r\n                for(var i = 0; i < data.length; i++)\r\n                {\r\n                    newSlider.push({\r\n                        title: data[i].imageTitle ,\r\n                        link: data[i].imageRedirect ,\r\n                        image: CommonConfig.assetDomain + data[i].imagePath ,\r\n                        description: data[i].imageDescription ,\r\n                    });\r\n                }\r\n                state = newSlider\r\n            }\r\n            \r\n            return state;\r\n        }\r\n            \r\n        default: {\r\n            return [...state];\r\n        }\r\n    }\r\n}\r\n\r\nexport default sliderReducer;","import loginActionTypes from '../actionTypes/login.actiontypes'; \r\n\r\nlet initialState = {\r\n    isLogged : localStorage.getItem('user') ? true : false,\r\n    data: localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {\"id\": null,\"username\": null,\"email\": null,\"fullname\": null,\"birthday\": null,\"sex\": null,\"identityNumber\": null,\"mobile\": null,\"address\": null,\"city\": null,\"company\": null,\"companyAddress\": null,\"createDate\": null,\"fastReg\": null,\"lastLogin\": null,\"identityDate\": null,\"identityPlace\": null,\"ip\": null,\"status\": null},\r\n    error: null\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case loginActionTypes.LOGIN_RESQUEST: {\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case loginActionTypes.LOGIN_SUCCESS:{\r\n            localStorage.setItem(\"user\", JSON.stringify(action.result.data));\r\n            state.data = action.result.data;\r\n            state.isLogged = true;\r\n            return {\r\n                ...state,\r\n                error: null\r\n            };\r\n        }\r\n        case loginActionTypes.LOGIN_FAILURE:{\r\n            state.isLogged = false;\r\n            state.error = action.result.data\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        case loginActionTypes.LOGOUT:{\r\n            localStorage.removeItem(\"user\");\r\n            state.isLogged = false;\r\n            return {\r\n                ...state\r\n            };\r\n        }\r\n        default: return {\r\n            ...state\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default loginReducer;","import postActionTypes from \"../actionTypes/post.actiontypes\"; \r\n\r\nvar initialState = {\r\n    listPost: {},\r\n    detailPost: null,\r\n    errors: null\r\n}\r\n;\r\n\r\nvar postReducer = (state = initialState, action) => {\r\n    \r\n    switch(action.type){\r\n        case postActionTypes.GET_ALL_POST:{\r\n            state.listPost = action.result.data.data;\r\n            return state;\r\n        }\r\n        case postActionTypes.GET_DETAIL_POST:{\r\n            state.detailPost = action.result.data.data[0];\r\n            return {...state};\r\n\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default postReducer;","import paymentActionTypes from \"../actionTypes/payment.actiontypes\"; \r\nvar initialState = {\r\n    userRole: {},\r\n    chargeCard: {},\r\n    chargeAtm: {},\r\n    chargeAtmSuccess: {},\r\n}\r\n\r\nvar paymentReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case paymentActionTypes.CHARGE_CARD:{\r\n            state.chargeCard = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.CHARGE_ATM:{\r\n            state.chargeAtm = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.GET_USER_ROLE:{\r\n            state.userRole = action.result.data\r\n            return state;\r\n        }\r\n        case paymentActionTypes.CHARGE_ATM_SUCCESS:{\r\n            state.chargeAtmSuccess = action.result\r\n            return state;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default paymentReducer;","import isLoadingActionType from '../actionTypes/isloading.actiontypes';\r\n\r\nlet initialState = {\r\n  isLoading: false\r\n};\r\n\r\nconst isLoadingReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case isLoadingActionType.SHOW_LOADING:{\r\n            return {\r\n                isLoading: true\r\n            };\r\n        }\r\n        // hide loader\r\n        case isLoadingActionType.HIDE_LOADING:{\r\n            return {\r\n                isLoading: false\r\n            };\r\n        }\r\n        default:{\r\n            return state;\r\n        }\r\n            \r\n    }\r\n}\r\n\r\nexport default isLoadingReducer;","import historyActionTypes from \"../actionTypes/history.actiontypes\"; \r\n\r\nvar initialState = {\r\n    cardHistory: [],\r\n    payToGameHistory: []\r\n};\r\n\r\nvar historyReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case historyActionTypes.GET_CARD_HISTORY:{\r\n            state.cardHistory = action.result.data.data\r\n            return state;\r\n        }\r\n        case historyActionTypes.GET_PAY_TO_GAME_HISTORY:{\r\n            state.payToGameHistory = action.result.data.data\r\n            return state;\r\n        }\r\n        default: {\r\n            return {...state};\r\n        }\r\n    }\r\n}\r\n\r\nexport default historyReducer;","import { combineReducers } from \"redux\";\r\nimport gamesReducer from \"./game.reducer\";\r\nimport sliderReducer from \"./slider.reducer\";\r\nimport loginReducer from \"./login.reducer\";\r\nimport postReducer from \"./posts.reducer\";\r\nimport paymentReducer from \"./payment.reducer\";\r\nimport isLoadingReducer from \"./isloading.reducer\"\r\nimport historyReducer from \"./history.reducer\"\r\n\r\nconst appReducers = combineReducers({\r\n    gamesReducer,\r\n    sliderReducer,\r\n    loginReducer,\r\n    postReducer,\r\n    paymentReducer,\r\n    isLoadingReducer,\r\n    historyReducer\r\n});\r\n\r\nexport default appReducers;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'popper.js';\r\nimport App from './App';\r\n//store\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport appReducers from \"./reducers/index\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(appReducers, applyMiddleware(thunk));\r\n// console.log(store.getState());\r\nReactDOM.render(\r\n    <Provider store={ store }>\r\n        <App />\r\n    </Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}