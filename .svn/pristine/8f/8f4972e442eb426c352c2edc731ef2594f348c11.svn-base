{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import postActionTypes from'../actionTypes/post.actiontypes';import Api from'../utils/Api';import ApiConfig from'../config/ApiConfig';var postActions={};postActions.getAllPostRequest=function(){var endpoint=ApiConfig.domain+ApiConfig.endpoint.getPosts;return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return Api.call('GET',endpoint).then(function(result){if(result.data.status===1){dispatch(postActions.getAllPost(result));}});case 2:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};postActions.getAllPost=function(result){return{type:postActionTypes.GET_ALL_POST,result:result};};postActions.getPostDetailRequest=function(slug){var endpoint=ApiConfig.domain+ApiConfig.endpoint.getDetailPost+slug;return(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Api.call('GET',endpoint).then(function(result){if(result.data.status===1){dispatch(postActions.getDetailPost(result));}});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());};postActions.getDetailPost=function(result){return{type:postActionTypes.GET_DETAIL_POST,result:result};};export default postActions;","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/actions/post.actions.js"],"names":["postActionTypes","Api","ApiConfig","postActions","getAllPostRequest","endpoint","domain","getPosts","dispatch","call","then","result","data","status","getAllPost","type","GET_ALL_POST","getPostDetailRequest","slug","getDetailPost","GET_DETAIL_POST"],"mappings":"qPAAA,MAAOA,CAAAA,eAAP,KAA4B,iCAA5B,CACA,MAAOC,CAAAA,GAAP,KAAgB,cAAhB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qBAAtB,CAEA,GAAMC,CAAAA,WAAW,CAAG,EAApB,CAEAA,WAAW,CAACC,iBAAZ,CAAgC,UAAM,CAClC,GAAIC,CAAAA,QAAQ,CAAGH,SAAS,CAACI,MAAV,CAAmBJ,SAAS,CAACG,QAAV,CAAmBE,QAArD,CACA,gGAAO,iBAAOC,QAAP,wIACGP,CAAAA,GAAG,CAACQ,IAAJ,CAAS,KAAT,CAAgBJ,QAAhB,EAA2BK,IAA3B,CAAiC,SAAAC,MAAM,CAAI,CAC7C,GAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,GAAuB,CAA1B,CAA4B,CACxBL,QAAQ,CAACL,WAAW,CAACW,UAAZ,CAAuBH,MAAvB,CAAD,CAAR,CACH,CACJ,CAJK,CADH,uDAAP,gEAOH,CATD,CAWAR,WAAW,CAACW,UAAZ,CAAyB,SAACH,MAAD,CAAY,CACjC,MAAO,CACHI,IAAI,CAAEf,eAAe,CAACgB,YADnB,CAEHL,MAAM,CAANA,MAFG,CAAP,CAIH,CALD,CAOAR,WAAW,CAACc,oBAAZ,CAAmC,SAACC,IAAD,CAAU,CACzC,GAAIb,CAAAA,QAAQ,CAAGH,SAAS,CAACI,MAAV,CAAmBJ,SAAS,CAACG,QAAV,CAAmBc,aAAtC,CAAsDD,IAArE,CACA,iGAAO,kBAAOV,QAAP,6IACGP,CAAAA,GAAG,CAACQ,IAAJ,CAAS,KAAT,CAAgBJ,QAAhB,EAA2BK,IAA3B,CAAiC,SAAAC,MAAM,CAAI,CAC7C,GAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,GAAuB,CAA1B,CAA4B,CACxBL,QAAQ,CAACL,WAAW,CAACgB,aAAZ,CAA0BR,MAA1B,CAAD,CAAR,CACH,CACJ,CAJK,CADH,yDAAP,kEAOH,CATD,CAWAR,WAAW,CAACgB,aAAZ,CAA4B,SAACR,MAAD,CAAY,CACpC,MAAO,CACHI,IAAI,CAAEf,eAAe,CAACoB,eADnB,CAEHT,MAAM,CAANA,MAFG,CAAP,CAIH,CALD,CAOA,cAAeR,CAAAA,WAAf","sourcesContent":["import postActionTypes from '../actionTypes/post.actiontypes';\r\nimport Api from '../utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst postActions = {};\r\n\r\npostActions.getAllPostRequest = () => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getPosts;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getAllPost(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npostActions.getAllPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_ALL_POST,\r\n        result\r\n    }\r\n}\r\n\r\npostActions.getPostDetailRequest = (slug) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.getDetailPost + slug;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(postActions.getDetailPost(result))\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\npostActions.getDetailPost = (result) => {\r\n    return {\r\n        type: postActionTypes.GET_DETAIL_POST,\r\n        result\r\n    }\r\n}\r\n\r\nexport default postActions;"]},"metadata":{},"sourceType":"module"}