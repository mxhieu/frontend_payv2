{"ast":null,"code":"var _jsxFileName = \"C:\\\\reactjs\\\\payv2\\\\pay-v2.phoeniz.com\\\\src\\\\components\\\\AppleLoginCallback.js\";\nimport React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport loginAction from \"../actions/login.actions\";\nimport { connect } from \"react-redux\";\n\nclass AppleLoginCallback extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.parseJwt = token => {\n      var base64Url = token.split('.')[1];\n      var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n      var jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n      }).join(''));\n      return JSON.parse(jsonPayload);\n    };\n  }\n\n  componentDidMount() {\n    let queryString = require('query-string');\n\n    let strParams = this.props.location.hash;\n    let params = queryString.parse(strParams);\n\n    if (this.props.login.isLogged === false && params.id_token !== undefined) {\n      let tokenData = this.parseJwt(params.id_token);\n      this.props.appleSignIn(tokenData.sub);\n    }\n  }\n\n  render() {\n    return React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.loginReducer\n  };\n};\n\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    appleSignIn: sub => {\n      dispatch(loginAction.LoginApple(sub));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AppleLoginCallback));","map":{"version":3,"sources":["C:/reactjs/payv2/pay-v2.phoeniz.com/src/components/AppleLoginCallback.js"],"names":["React","Component","withRouter","Redirect","loginAction","connect","AppleLoginCallback","parseJwt","token","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","componentDidMount","queryString","require","strParams","props","location","hash","params","login","isLogged","id_token","undefined","tokenData","appleSignIn","sub","render","mapStateToProps","state","loginReducer","mapDispatchToProps","dispatch","LoginApple"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,kBAAN,SAAiCL,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SAEvCM,QAFuC,GAE3BC,KAAD,IAAW;AAClB,UAAIC,SAAS,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAhB;AACA,UAAIC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkB,IAAlB,EAAwB,GAAxB,EAA6BA,OAA7B,CAAqC,IAArC,EAA2C,GAA3C,CAAb;AACA,UAAIC,WAAW,GAAGC,kBAAkB,CAACC,IAAI,CAACJ,MAAD,CAAJ,CAAaD,KAAb,CAAmB,EAAnB,EAAuBM,GAAvB,CAA2B,UAASC,CAAT,EAAY;AACxE,eAAO,MAAM,CAAC,OAAOA,CAAC,CAACC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,CAAR,EAAsCC,KAAtC,CAA4C,CAAC,CAA7C,CAAb;AACH,OAFoC,EAElCC,IAFkC,CAE7B,EAF6B,CAAD,CAApC;AAIA,aAAOC,IAAI,CAACC,KAAL,CAAWV,WAAX,CAAP;AACH,KAVsC;AAAA;;AAYvCW,EAAAA,iBAAiB,GAAE;AACf,QAAIC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AACA,QAAIC,SAAS,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,IAApC;AACA,QAAIC,MAAM,GAAGN,WAAW,CAACF,KAAZ,CAAkBI,SAAlB,CAAb;;AACA,QAAI,KAAKC,KAAL,CAAWI,KAAX,CAAiBC,QAAjB,KAA8B,KAA9B,IAAuCF,MAAM,CAACG,QAAP,KAAoBC,SAA/D,EAAyE;AACrE,UAAIC,SAAS,GAAG,KAAK7B,QAAL,CAAcwB,MAAM,CAACG,QAArB,CAAhB;AACA,WAAKN,KAAL,CAAWS,WAAX,CAAuBD,SAAS,CAACE,GAAjC;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,WAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAxBsC;;AA2B3C,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACLT,IAAAA,KAAK,EAAES,KAAK,CAACC;AADR,GAAP;AAGH,CAJD;;AAMA,MAAMC,kBAAkB,GAAG,CAACC,QAAD,EAAWhB,KAAX,KAAqB;AAC5C,SAAO;AACHS,IAAAA,WAAW,EAAGC,GAAD,IAAS;AAClBM,MAAAA,QAAQ,CAACxC,WAAW,CAACyC,UAAZ,CAAuBP,GAAvB,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAejC,OAAO,CAClBmC,eADkB,EAElBG,kBAFkB,CAAP,CAGbzC,UAAU,CAACI,kBAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport loginAction from \"../actions/login.actions\"\r\nimport { connect } from \"react-redux\";  \r\n\r\nclass AppleLoginCallback extends Component {\r\n\r\n    parseJwt = (token) => {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n\r\n    componentDidMount(){\r\n        let queryString = require('query-string');\r\n        let strParams = this.props.location.hash;\r\n        let params = queryString.parse(strParams);\r\n        if (this.props.login.isLogged === false && params.id_token !== undefined){\r\n            let tokenData = this.parseJwt(params.id_token)        \r\n            this.props.appleSignIn(tokenData.sub)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      login: state.loginReducer,\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        appleSignIn: (sub) => {\r\n            dispatch(loginAction.LoginApple(sub))\r\n        }\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(withRouter(AppleLoginCallback))"]},"metadata":{},"sourceType":"module"}