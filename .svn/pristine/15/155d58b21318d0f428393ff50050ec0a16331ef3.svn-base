{"ast":null,"code":"import loginActionTypes from '../actionTypes/login.actiontypes';\nimport Api from '.././utils/Api';\nimport ApiConfig from '../config/ApiConfig';\nconst loginAction = {};\n\nloginAction.Login = (username, password) => {\n  let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username=' + username + '&password=' + password;\n  return async dispatch => {\n    await Api.call('GET', endpoint).then(result => {\n      if (result.data.status === 1) {\n        dispatch(loginAction.success(result));\n      } else {\n        dispatch(loginAction.failure(result));\n      }\n    });\n  };\n};\n\nloginAction.success = result => {\n  return {\n    type: loginActionTypes.LOGIN_SUCCESS,\n    result\n  };\n};\n\nloginAction.failure = result => {\n  return {\n    type: loginActionTypes.LOGIN_FAILURE,\n    result\n  };\n};\n\nloginAction.getBussinessToken = token => {\n  let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token=' + token;\n  return async dispatch => {\n    Api.call('GET', endpoint).then(res => {\n      console.log(res);\n    });\n    dispatch(loginAction.loginFacebook);\n  };\n};\n\nloginAction.loginFacebook = () => {\n  return {\n    type: loginActionTypes.LOGIN_FACEBOOK\n  };\n};\n\nexport default loginAction;","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/actions/login.actions.js"],"names":["loginActionTypes","Api","ApiConfig","loginAction","Login","username","password","endpoint","domain","login","dispatch","call","then","result","data","status","success","failure","type","LOGIN_SUCCESS","LOGIN_FAILURE","getBussinessToken","token","res","console","log","loginFacebook","LOGIN_FACEBOOK"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,MAAMC,WAAW,GAAG,EAApB;;AAEAA,WAAW,CAACC,KAAZ,GAAoB,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACxC,MAAIC,QAAQ,GAAGL,SAAS,CAACM,MAAV,GAAmBN,SAAS,CAACK,QAAV,CAAmBE,KAAtC,GAA8C,YAA9C,GAA4DJ,QAA5D,GAAuE,YAAvE,GAAsFC,QAArG;AACA,SAAO,MAAOI,QAAP,IAAoB;AACvB,UAAMT,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBJ,QAAhB,EAA2BK,IAA3B,CAAiCC,MAAM,IAAI;AAC7C,UAAGA,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,CAA1B,EAA4B;AACxBL,QAAAA,QAAQ,CAACP,WAAW,CAACa,OAAZ,CAAoBH,MAApB,CAAD,CAAR;AACH,OAFD,MAGI;AACAH,QAAAA,QAAQ,CAACP,WAAW,CAACc,OAAZ,CAAoBJ,MAApB,CAAD,CAAR;AACH;AACJ,KAPK,CAAN;AASH,GAVD;AAWH,CAbD;;AAeAV,WAAW,CAACa,OAAZ,GAAuBH,MAAD,IAAY;AAC9B,SAAO;AACHK,IAAAA,IAAI,EAAElB,gBAAgB,CAACmB,aADpB;AAEHN,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAV,WAAW,CAACc,OAAZ,GAAuBJ,MAAD,IAAY;AAC9B,SAAO;AACHK,IAAAA,IAAI,EAAElB,gBAAgB,CAACoB,aADpB;AAEHP,IAAAA;AAFG,GAAP;AAIH,CALD;;AAOAV,WAAW,CAACkB,iBAAZ,GAAiCC,KAAD,IAAW;AACvC,MAAIf,QAAQ,GAAG,0EAAwEe,KAAvF;AACA,SAAO,MAAOZ,QAAP,IAAoB;AACvBT,IAAAA,GAAG,CAACU,IAAJ,CAAS,KAAT,EAAgBJ,QAAhB,EAA2BK,IAA3B,CAAgCW,GAAG,IAAI;AACnCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAFD;AAGAb,IAAAA,QAAQ,CAACP,WAAW,CAACuB,aAAb,CAAR;AACH,GALD;AAMH,CARD;;AAUAvB,WAAW,CAACuB,aAAZ,GAA4B,MAAM;AAC9B,SAAO;AACHR,IAAAA,IAAI,EAAElB,gBAAgB,CAAC2B;AADpB,GAAP;AAGH,CAJD;;AAMA,eAAexB,WAAf","sourcesContent":["import loginActionTypes from '../actionTypes/login.actiontypes';\r\nimport Api from '.././utils/Api';\r\nimport ApiConfig from '../config/ApiConfig';\r\n\r\nconst loginAction = {};\r\n\r\nloginAction.Login = (username, password) => {\r\n    let endpoint = ApiConfig.domain + ApiConfig.endpoint.login + '?username='+ username + '&password=' + password;\r\n    return async (dispatch) => {\r\n        await Api.call('GET', endpoint ).then( result => {\r\n            if(result.data.status === 1){\r\n                dispatch(loginAction.success(result))\r\n            }\r\n            else{\r\n                dispatch(loginAction.failure(result))\r\n            }\r\n        })\r\n          \r\n    }\r\n}\r\n\r\nloginAction.success = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_SUCCESS,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.failure = (result) => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_FAILURE,\r\n        result\r\n    };\r\n}\r\n\r\nloginAction.getBussinessToken = (token) => {\r\n    let endpoint = 'https://graph.facebook.com/me?fields=token_for_business&access_token='+token;\r\n    return async (dispatch) => {\r\n        Api.call('GET', endpoint ).then(res => {\r\n            console.log(res);\r\n        })\r\n        dispatch(loginAction.loginFacebook);\r\n    }\r\n}\r\n\r\nloginAction.loginFacebook = () => {\r\n    return {\r\n        type: loginActionTypes.LOGIN_FACEBOOK,\r\n    };\r\n}\r\n\r\nexport default loginAction;"]},"metadata":{},"sourceType":"module"}