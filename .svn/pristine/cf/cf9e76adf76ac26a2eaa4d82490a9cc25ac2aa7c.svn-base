{"ast":null,"code":"import loginActionTypes from \"../actionTypes/slider.actiontypes\";\nvar initialState = [{\n  title: '',\n  link: '',\n  image: '',\n  description: ''\n}];\n\nvar sliderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case loginActionTypes.GET_ALL:\n      let data = JSON.parse(action.result.data.data[0].items);\n\n      for (row of data) {\n        state.title = row.imageTitle;\n        state.link = row.imageRedirect;\n        state.image = row.imagePath;\n        state.description = row.imageDescription;\n      }\n\n      return [...state];\n\n    default:\n      return [...state];\n  }\n};\n\nexport default sliderReducer;","map":{"version":3,"sources":["C:/reactjs/payv2/myapp/src/reducers/slider.reducer.js"],"names":["loginActionTypes","initialState","title","link","image","description","sliderReducer","state","action","type","GET_ALL","data","JSON","parse","result","items","row","imageTitle","imageRedirect","imagePath","imageDescription"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,mCAA7B;AAEA,IAAIC,YAAY,GAAG,CACf;AACIC,EAAAA,KAAK,EAAE,EADX;AAEIC,EAAAA,IAAI,EAAE,EAFV;AAGIC,EAAAA,KAAK,EAAE,EAHX;AAIIC,EAAAA,WAAW,EAAE;AAJjB,CADe,CAAnB;;AASA,IAAIC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAClD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKT,gBAAgB,CAACU,OAAtB;AACI,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,MAAM,CAACM,MAAP,CAAcH,IAAd,CAAmBA,IAAnB,CAAwB,CAAxB,EAA2BI,KAAtC,CAAX;;AACA,WAAKC,GAAL,IAAYL,IAAZ,EAAkB;AACdJ,QAAAA,KAAK,CAACL,KAAN,GAAcc,GAAG,CAACC,UAAlB;AACAV,QAAAA,KAAK,CAACJ,IAAN,GAAaa,GAAG,CAACE,aAAjB;AACAX,QAAAA,KAAK,CAACH,KAAN,GAAcY,GAAG,CAACG,SAAlB;AACAZ,QAAAA,KAAK,CAACF,WAAN,GAAoBW,GAAG,CAACI,gBAAxB;AACH;;AAED,aAAO,CAAC,GAAGb,KAAJ,CAAP;;AACJ;AAAS,aAAO,CAAC,GAAGA,KAAJ,CAAP;AAXb;AAaH,CAdD;;AAgBA,eAAeD,aAAf","sourcesContent":["import loginActionTypes from \"../actionTypes/slider.actiontypes\"; \r\n\r\nvar initialState = [\r\n    {\r\n        title: '',\r\n        link: '',\r\n        image: '',\r\n        description: '',\r\n    },\r\n];\r\n\r\nvar sliderReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case loginActionTypes.GET_ALL:\r\n            let data = JSON.parse(action.result.data.data[0].items)\r\n            for (row of data) {\r\n                state.title = row.imageTitle;\r\n                state.link = row.imageRedirect;\r\n                state.image = row.imagePath;\r\n                state.description = row.imageDescription;\r\n            }\r\n              \r\n            return [...state];\r\n        default: return [...state];\r\n    }\r\n}\r\n\r\nexport default sliderReducer;"]},"metadata":{},"sourceType":"module"}